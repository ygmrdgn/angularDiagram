if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-scheduler-base/aui-scheduler-base.js']) {
   __coverage__['build/aui-scheduler-base/aui-scheduler-base.js'] = {"path":"build/aui-scheduler-base/aui-scheduler-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":30},"end":{"line":1,"column":49}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":22},"end":{"line":21,"column":37}}},"3":{"name":"(anonymous_3)","line":196,"loc":{"start":{"line":196,"column":19},"end":{"line":196,"column":30}}},"4":{"name":"(anonymous_4)","line":234,"loc":{"start":{"line":234,"column":21},"end":{"line":234,"column":32}}},"5":{"name":"(anonymous_5)","line":273,"loc":{"start":{"line":273,"column":21},"end":{"line":273,"column":32}}},"6":{"name":"(anonymous_6)","line":320,"loc":{"start":{"line":320,"column":21},"end":{"line":320,"column":32}}},"7":{"name":"(anonymous_7)","line":374,"loc":{"start":{"line":374,"column":21},"end":{"line":374,"column":32}}},"8":{"name":"(anonymous_8)","line":387,"loc":{"start":{"line":387,"column":16},"end":{"line":387,"column":27}}},"9":{"name":"(anonymous_9)","line":408,"loc":{"start":{"line":408,"column":16},"end":{"line":408,"column":27}}},"10":{"name":"(anonymous_10)","line":449,"loc":{"start":{"line":449,"column":17},"end":{"line":449,"column":28}}},"11":{"name":"(anonymous_11)","line":467,"loc":{"start":{"line":467,"column":24},"end":{"line":467,"column":35}}},"12":{"name":"(anonymous_12)","line":482,"loc":{"start":{"line":482,"column":15},"end":{"line":482,"column":26}}},"13":{"name":"(anonymous_13)","line":504,"loc":{"start":{"line":504,"column":19},"end":{"line":504,"column":42}}},"14":{"name":"(anonymous_14)","line":522,"loc":{"start":{"line":522,"column":33},"end":{"line":522,"column":69}}},"15":{"name":"(anonymous_15)","line":528,"loc":{"start":{"line":528,"column":63},"end":{"line":528,"column":82}}},"16":{"name":"(anonymous_16)","line":547,"loc":{"start":{"line":547,"column":25},"end":{"line":547,"column":36}}},"17":{"name":"(anonymous_17)","line":560,"loc":{"start":{"line":560,"column":26},"end":{"line":560,"column":37}}},"18":{"name":"(anonymous_18)","line":573,"loc":{"start":{"line":573,"column":28},"end":{"line":573,"column":39}}},"19":{"name":"(anonymous_19)","line":586,"loc":{"start":{"line":586,"column":28},"end":{"line":586,"column":39}}},"20":{"name":"(anonymous_20)","line":600,"loc":{"start":{"line":600,"column":21},"end":{"line":600,"column":35}}},"21":{"name":"(anonymous_21)","line":613,"loc":{"start":{"line":613,"column":23},"end":{"line":613,"column":37}}},"22":{"name":"(anonymous_22)","line":627,"loc":{"start":{"line":627,"column":17},"end":{"line":627,"column":31}}},"23":{"name":"(anonymous_23)","line":642,"loc":{"start":{"line":642,"column":18},"end":{"line":642,"column":32}}},"24":{"name":"(anonymous_24)","line":657,"loc":{"start":{"line":657,"column":20},"end":{"line":657,"column":34}}},"25":{"name":"(anonymous_25)","line":675,"loc":{"start":{"line":675,"column":24},"end":{"line":675,"column":38}}},"26":{"name":"(anonymous_26)","line":694,"loc":{"start":{"line":694,"column":28},"end":{"line":694,"column":39}}},"27":{"name":"(anonymous_27)","line":707,"loc":{"start":{"line":707,"column":27},"end":{"line":707,"column":38}}},"28":{"name":"(anonymous_28)","line":721,"loc":{"start":{"line":721,"column":25},"end":{"line":721,"column":36}}},"29":{"name":"(anonymous_29)","line":734,"loc":{"start":{"line":734,"column":27},"end":{"line":734,"column":38}}},"30":{"name":"(anonymous_30)","line":748,"loc":{"start":{"line":748,"column":14},"end":{"line":748,"column":38}}},"31":{"name":"(anonymous_31)","line":765,"loc":{"start":{"line":765,"column":20},"end":{"line":765,"column":38}}},"32":{"name":"(anonymous_32)","line":768,"loc":{"start":{"line":768,"column":38},"end":{"line":768,"column":53}}},"33":{"name":"(anonymous_33)","line":781,"loc":{"start":{"line":781,"column":18},"end":{"line":781,"column":36}}},"34":{"name":"(anonymous_34)","line":784,"loc":{"start":{"line":784,"column":38},"end":{"line":784,"column":53}}},"35":{"name":"(anonymous_35)","line":797,"loc":{"start":{"line":797,"column":27},"end":{"line":797,"column":38}}},"36":{"name":"(anonymous_36)","line":807,"loc":{"start":{"line":807,"column":25},"end":{"line":807,"column":36}}},"37":{"name":"(anonymous_37)","line":833,"loc":{"start":{"line":833,"column":15},"end":{"line":833,"column":26}}},"38":{"name":"(anonymous_38)","line":855,"loc":{"start":{"line":855,"column":28},"end":{"line":855,"column":44}}},"39":{"name":"(anonymous_39)","line":868,"loc":{"start":{"line":868,"column":27},"end":{"line":868,"column":43}}},"40":{"name":"(anonymous_40)","line":881,"loc":{"start":{"line":881,"column":30},"end":{"line":881,"column":46}}},"41":{"name":"(anonymous_41)","line":894,"loc":{"start":{"line":894,"column":29},"end":{"line":894,"column":45}}},"42":{"name":"(anonymous_42)","line":907,"loc":{"start":{"line":907,"column":29},"end":{"line":907,"column":45}}},"43":{"name":"(anonymous_43)","line":920,"loc":{"start":{"line":920,"column":30},"end":{"line":920,"column":46}}},"44":{"name":"(anonymous_44)","line":933,"loc":{"start":{"line":933,"column":30},"end":{"line":933,"column":46}}},"45":{"name":"(anonymous_45)","line":946,"loc":{"start":{"line":946,"column":29},"end":{"line":946,"column":45}}},"46":{"name":"(anonymous_46)","line":959,"loc":{"start":{"line":959,"column":22},"end":{"line":959,"column":33}}},"47":{"name":"(anonymous_47)","line":973,"loc":{"start":{"line":973,"column":18},"end":{"line":973,"column":32}}},"48":{"name":"(anonymous_48)","line":989,"loc":{"start":{"line":989,"column":21},"end":{"line":989,"column":44}}},"49":{"name":"(anonymous_49)","line":1007,"loc":{"start":{"line":1007,"column":29},"end":{"line":1007,"column":43}}},"50":{"name":"(anonymous_50)","line":1030,"loc":{"start":{"line":1030,"column":22},"end":{"line":1030,"column":36}}},"51":{"name":"(anonymous_51)","line":1043,"loc":{"start":{"line":1043,"column":21},"end":{"line":1043,"column":35}}},"52":{"name":"(anonymous_52)","line":1077,"loc":{"start":{"line":1077,"column":24},"end":{"line":1077,"column":38}}},"53":{"name":"(anonymous_53)","line":1089,"loc":{"start":{"line":1089,"column":23},"end":{"line":1089,"column":34}}},"54":{"name":"(anonymous_54)","line":1102,"loc":{"start":{"line":1102,"column":23},"end":{"line":1102,"column":37}}},"55":{"name":"(anonymous_55)","line":1115,"loc":{"start":{"line":1115,"column":20},"end":{"line":1115,"column":34}}},"56":{"name":"(anonymous_56)","line":1128,"loc":{"start":{"line":1128,"column":24},"end":{"line":1128,"column":38}}},"57":{"name":"(anonymous_57)","line":1141,"loc":{"start":{"line":1141,"column":24},"end":{"line":1141,"column":38}}},"58":{"name":"(anonymous_58)","line":1154,"loc":{"start":{"line":1154,"column":23},"end":{"line":1154,"column":37}}},"59":{"name":"(anonymous_59)","line":1194,"loc":{"start":{"line":1194,"column":17},"end":{"line":1194,"column":28}}},"60":{"name":"(anonymous_60)","line":1221,"loc":{"start":{"line":1221,"column":23},"end":{"line":1221,"column":39}}},"61":{"name":"(anonymous_61)","line":1238,"loc":{"start":{"line":1238,"column":26},"end":{"line":1238,"column":42}}},"62":{"name":"(anonymous_62)","line":1255,"loc":{"start":{"line":1255,"column":24},"end":{"line":1255,"column":40}}},"63":{"name":"(anonymous_63)","line":1276,"loc":{"start":{"line":1276,"column":25},"end":{"line":1276,"column":41}}},"64":{"name":"(anonymous_64)","line":1293,"loc":{"start":{"line":1293,"column":21},"end":{"line":1293,"column":32}}},"65":{"name":"(anonymous_65)","line":1310,"loc":{"start":{"line":1310,"column":21},"end":{"line":1310,"column":48}}},"66":{"name":"(anonymous_66)","line":1313,"loc":{"start":{"line":1313,"column":22},"end":{"line":1313,"column":47}}},"67":{"name":"(anonymous_67)","line":1326,"loc":{"start":{"line":1326,"column":18},"end":{"line":1326,"column":44}}},"68":{"name":"(anonymous_68)","line":1357,"loc":{"start":{"line":1357,"column":21},"end":{"line":1357,"column":32}}},"69":{"name":"(anonymous_69)","line":1446,"loc":{"start":{"line":1446,"column":18},"end":{"line":1446,"column":32}}},"70":{"name":"(anonymous_70)","line":1450,"loc":{"start":{"line":1450,"column":22},"end":{"line":1450,"column":36}}},"71":{"name":"(anonymous_71)","line":1507,"loc":{"start":{"line":1507,"column":17},"end":{"line":1507,"column":28}}},"72":{"name":"(anonymous_72)","line":1523,"loc":{"start":{"line":1523,"column":16},"end":{"line":1523,"column":32}}},"73":{"name":"(anonymous_73)","line":1536,"loc":{"start":{"line":1536,"column":31},"end":{"line":1536,"column":42}}},"74":{"name":"(anonymous_74)","line":1548,"loc":{"start":{"line":1548,"column":23},"end":{"line":1548,"column":34}}},"75":{"name":"(anonymous_75)","line":1559,"loc":{"start":{"line":1559,"column":23},"end":{"line":1559,"column":37}}},"76":{"name":"(anonymous_76)","line":1586,"loc":{"start":{"line":1586,"column":26},"end":{"line":1586,"column":37}}},"77":{"name":"(anonymous_77)","line":1653,"loc":{"start":{"line":1653,"column":28},"end":{"line":1653,"column":39}}},"78":{"name":"(anonymous_78)","line":1680,"loc":{"start":{"line":1680,"column":17},"end":{"line":1680,"column":34}}},"79":{"name":"(anonymous_79)","line":1705,"loc":{"start":{"line":1705,"column":15},"end":{"line":1705,"column":32}}},"80":{"name":"(anonymous_80)","line":1719,"loc":{"start":{"line":1719,"column":15},"end":{"line":1719,"column":28}}},"81":{"name":"(anonymous_81)","line":1730,"loc":{"start":{"line":1730,"column":17},"end":{"line":1730,"column":28}}},"82":{"name":"(anonymous_82)","line":1733,"loc":{"start":{"line":1733,"column":30},"end":{"line":1733,"column":44}}},"83":{"name":"(anonymous_83)","line":1745,"loc":{"start":{"line":1745,"column":24},"end":{"line":1745,"column":43}}},"84":{"name":"(anonymous_84)","line":1760,"loc":{"start":{"line":1760,"column":15},"end":{"line":1760,"column":44}}},"85":{"name":"(anonymous_85)","line":1790,"loc":{"start":{"line":1790,"column":20},"end":{"line":1790,"column":51}}},"86":{"name":"(anonymous_86)","line":1795,"loc":{"start":{"line":1795,"column":34},"end":{"line":1795,"column":48}}},"87":{"name":"(anonymous_87)","line":1809,"loc":{"start":{"line":1809,"column":24},"end":{"line":1809,"column":39}}},"88":{"name":"(anonymous_88)","line":1814,"loc":{"start":{"line":1814,"column":34},"end":{"line":1814,"column":48}}},"89":{"name":"(anonymous_89)","line":1832,"loc":{"start":{"line":1832,"column":18},"end":{"line":1832,"column":35}}},"90":{"name":"(anonymous_90)","line":1847,"loc":{"start":{"line":1847,"column":17},"end":{"line":1847,"column":34}}},"91":{"name":"(anonymous_91)","line":1861,"loc":{"start":{"line":1861,"column":20},"end":{"line":1861,"column":36}}},"92":{"name":"(anonymous_92)","line":1876,"loc":{"start":{"line":1876,"column":24},"end":{"line":1876,"column":41}}},"93":{"name":"(anonymous_93)","line":1885,"loc":{"start":{"line":1885,"column":33},"end":{"line":1885,"column":49}}},"94":{"name":"(anonymous_94)","line":1984,"loc":{"start":{"line":1984,"column":19},"end":{"line":1984,"column":38}}},"95":{"name":"(anonymous_95)","line":2058,"loc":{"start":{"line":2058,"column":19},"end":{"line":2058,"column":34}}},"96":{"name":"(anonymous_96)","line":2125,"loc":{"start":{"line":2125,"column":21},"end":{"line":2125,"column":32}}},"97":{"name":"(anonymous_97)","line":2138,"loc":{"start":{"line":2138,"column":21},"end":{"line":2138,"column":32}}},"98":{"name":"(anonymous_98)","line":2150,"loc":{"start":{"line":2150,"column":21},"end":{"line":2150,"column":32}}},"99":{"name":"(anonymous_99)","line":2162,"loc":{"start":{"line":2162,"column":21},"end":{"line":2162,"column":32}}},"100":{"name":"(anonymous_100)","line":2180,"loc":{"start":{"line":2180,"column":21},"end":{"line":2180,"column":32}}},"101":{"name":"(anonymous_101)","line":2198,"loc":{"start":{"line":2198,"column":21},"end":{"line":2198,"column":32}}},"102":{"name":"(anonymous_102)","line":2211,"loc":{"start":{"line":2211,"column":21},"end":{"line":2211,"column":32}}},"103":{"name":"(anonymous_103)","line":2236,"loc":{"start":{"line":2236,"column":21},"end":{"line":2236,"column":32}}},"104":{"name":"(anonymous_104)","line":2261,"loc":{"start":{"line":2261,"column":21},"end":{"line":2261,"column":32}}},"105":{"name":"(anonymous_105)","line":2280,"loc":{"start":{"line":2280,"column":21},"end":{"line":2280,"column":32}}},"106":{"name":"(anonymous_106)","line":2334,"loc":{"start":{"line":2334,"column":21},"end":{"line":2334,"column":32}}},"107":{"name":"(anonymous_107)","line":2370,"loc":{"start":{"line":2370,"column":16},"end":{"line":2370,"column":27}}},"108":{"name":"(anonymous_108)","line":2382,"loc":{"start":{"line":2382,"column":16},"end":{"line":2382,"column":27}}},"109":{"name":"(anonymous_109)","line":2395,"loc":{"start":{"line":2395,"column":23},"end":{"line":2395,"column":38}}},"110":{"name":"(anonymous_110)","line":2408,"loc":{"start":{"line":2408,"column":28},"end":{"line":2408,"column":43}}},"111":{"name":"(anonymous_111)","line":2426,"loc":{"start":{"line":2426,"column":20},"end":{"line":2426,"column":31}}},"112":{"name":"(anonymous_112)","line":2439,"loc":{"start":{"line":2439,"column":19},"end":{"line":2439,"column":33}}},"113":{"name":"(anonymous_113)","line":2452,"loc":{"start":{"line":2452,"column":22},"end":{"line":2452,"column":36}}},"114":{"name":"(anonymous_114)","line":2466,"loc":{"start":{"line":2466,"column":20},"end":{"line":2466,"column":35}}},"115":{"name":"(anonymous_115)","line":2489,"loc":{"start":{"line":2489,"column":24},"end":{"line":2489,"column":39}}},"116":{"name":"(anonymous_116)","line":2502,"loc":{"start":{"line":2502,"column":22},"end":{"line":2502,"column":33}}},"117":{"name":"(anonymous_117)","line":2518,"loc":{"start":{"line":2518,"column":27},"end":{"line":2518,"column":38}}},"118":{"name":"(anonymous_118)","line":2536,"loc":{"start":{"line":2536,"column":28},"end":{"line":2536,"column":39}}},"119":{"name":"(anonymous_119)","line":2547,"loc":{"start":{"line":2547,"column":24},"end":{"line":2547,"column":35}}},"120":{"name":"(anonymous_120)","line":2581,"loc":{"start":{"line":2581,"column":32},"end":{"line":2581,"column":48}}},"121":{"name":"(anonymous_121)","line":2611,"loc":{"start":{"line":2611,"column":22},"end":{"line":2611,"column":33}}},"122":{"name":"(anonymous_122)","line":2630,"loc":{"start":{"line":2630,"column":23},"end":{"line":2630,"column":34}}},"123":{"name":"(anonymous_123)","line":2649,"loc":{"start":{"line":2649,"column":32},"end":{"line":2649,"column":52}}},"124":{"name":"(anonymous_124)","line":2667,"loc":{"start":{"line":2667,"column":30},"end":{"line":2667,"column":41}}},"125":{"name":"(anonymous_125)","line":2678,"loc":{"start":{"line":2678,"column":22},"end":{"line":2678,"column":33}}},"126":{"name":"(anonymous_126)","line":2697,"loc":{"start":{"line":2697,"column":39},"end":{"line":2697,"column":55}}},"127":{"name":"(anonymous_127)","line":2715,"loc":{"start":{"line":2715,"column":23},"end":{"line":2715,"column":39}}},"128":{"name":"(anonymous_128)","line":2733,"loc":{"start":{"line":2733,"column":26},"end":{"line":2733,"column":42}}},"129":{"name":"(anonymous_129)","line":2751,"loc":{"start":{"line":2751,"column":26},"end":{"line":2751,"column":42}}},"130":{"name":"(anonymous_130)","line":2769,"loc":{"start":{"line":2769,"column":28},"end":{"line":2769,"column":44}}},"131":{"name":"(anonymous_131)","line":2793,"loc":{"start":{"line":2793,"column":28},"end":{"line":2793,"column":39}}},"132":{"name":"(anonymous_132)","line":2798,"loc":{"start":{"line":2798,"column":32},"end":{"line":2798,"column":47}}},"133":{"name":"(anonymous_133)","line":2810,"loc":{"start":{"line":2810,"column":27},"end":{"line":2810,"column":38}}},"134":{"name":"(anonymous_134)","line":2824,"loc":{"start":{"line":2824,"column":26},"end":{"line":2824,"column":40}}},"135":{"name":"(anonymous_135)","line":2839,"loc":{"start":{"line":2839,"column":27},"end":{"line":2839,"column":41}}},"136":{"name":"(anonymous_136)","line":2861,"loc":{"start":{"line":2861,"column":19},"end":{"line":2861,"column":33}}},"137":{"name":"(anonymous_137)","line":2865,"loc":{"start":{"line":2865,"column":30},"end":{"line":2865,"column":45}}},"138":{"name":"(anonymous_138)","line":2891,"loc":{"start":{"line":2891,"column":26},"end":{"line":2891,"column":40}}},"139":{"name":"(anonymous_139)","line":2913,"loc":{"start":{"line":2913,"column":20},"end":{"line":2913,"column":35}}},"140":{"name":"(anonymous_140)","line":2943,"loc":{"start":{"line":2943,"column":26},"end":{"line":2943,"column":37}}},"141":{"name":"(anonymous_141)","line":3028,"loc":{"start":{"line":3028,"column":19},"end":{"line":3028,"column":30}}},"142":{"name":"(anonymous_142)","line":3055,"loc":{"start":{"line":3055,"column":23},"end":{"line":3055,"column":37}}},"143":{"name":"(anonymous_143)","line":3095,"loc":{"start":{"line":3095,"column":19},"end":{"line":3095,"column":34}}},"144":{"name":"(anonymous_144)","line":3195,"loc":{"start":{"line":3195,"column":21},"end":{"line":3195,"column":32}}},"145":{"name":"(anonymous_145)","line":3206,"loc":{"start":{"line":3206,"column":16},"end":{"line":3206,"column":27}}},"146":{"name":"(anonymous_146)","line":3220,"loc":{"start":{"line":3220,"column":29},"end":{"line":3220,"column":44}}},"147":{"name":"(anonymous_147)","line":3230,"loc":{"start":{"line":3230,"column":24},"end":{"line":3230,"column":35}}},"148":{"name":"(anonymous_148)","line":3239,"loc":{"start":{"line":3239,"column":25},"end":{"line":3239,"column":36}}},"149":{"name":"(anonymous_149)","line":3253,"loc":{"start":{"line":3253,"column":21},"end":{"line":3253,"column":32}}},"150":{"name":"(anonymous_150)","line":3262,"loc":{"start":{"line":3262,"column":21},"end":{"line":3262,"column":32}}},"151":{"name":"(anonymous_151)","line":3270,"loc":{"start":{"line":3270,"column":18},"end":{"line":3270,"column":29}}},"152":{"name":"(anonymous_152)","line":3283,"loc":{"start":{"line":3283,"column":19},"end":{"line":3283,"column":43}}},"153":{"name":"(anonymous_153)","line":3296,"loc":{"start":{"line":3296,"column":20},"end":{"line":3296,"column":31}}},"154":{"name":"(anonymous_154)","line":3303,"loc":{"start":{"line":3303,"column":22},"end":{"line":3303,"column":33}}},"155":{"name":"(anonymous_155)","line":3310,"loc":{"start":{"line":3310,"column":24},"end":{"line":3310,"column":35}}},"156":{"name":"(anonymous_156)","line":3318,"loc":{"start":{"line":3318,"column":21},"end":{"line":3318,"column":32}}},"157":{"name":"(anonymous_157)","line":3326,"loc":{"start":{"line":3326,"column":20},"end":{"line":3326,"column":31}}},"158":{"name":"(anonymous_158)","line":3333,"loc":{"start":{"line":3333,"column":30},"end":{"line":3333,"column":41}}},"159":{"name":"(anonymous_159)","line":3349,"loc":{"start":{"line":3349,"column":22},"end":{"line":3349,"column":33}}},"160":{"name":"(anonymous_160)","line":3363,"loc":{"start":{"line":3363,"column":25},"end":{"line":3363,"column":36}}},"161":{"name":"(anonymous_161)","line":3375,"loc":{"start":{"line":3375,"column":23},"end":{"line":3375,"column":37}}},"162":{"name":"(anonymous_162)","line":3399,"loc":{"start":{"line":3399,"column":26},"end":{"line":3399,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3428,"column":3}},"2":{"start":{"line":10,"column":0},"end":{"line":57,"column":36}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":28}},"4":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"5":{"start":{"line":25,"column":12},"end":{"line":25,"column":29}},"6":{"start":{"line":26,"column":12},"end":{"line":26,"column":30}},"7":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"8":{"start":{"line":30,"column":12},"end":{"line":30,"column":30}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":31}},"10":{"start":{"line":67,"column":0},"end":{"line":1160,"column":3}},"11":{"start":{"line":197,"column":16},"end":{"line":204,"column":22}},"12":{"start":{"line":206,"column":16},"end":{"line":210,"column":17}},"13":{"start":{"line":207,"column":20},"end":{"line":208,"column":44}},"14":{"start":{"line":209,"column":20},"end":{"line":209,"column":82}},"15":{"start":{"line":212,"column":16},"end":{"line":217,"column":17}},"16":{"start":{"line":213,"column":20},"end":{"line":213,"column":42}},"17":{"start":{"line":215,"column":21},"end":{"line":217,"column":17}},"18":{"start":{"line":216,"column":20},"end":{"line":216,"column":32}},"19":{"start":{"line":219,"column":16},"end":{"line":219,"column":30}},"20":{"start":{"line":235,"column":16},"end":{"line":235,"column":65}},"21":{"start":{"line":237,"column":16},"end":{"line":237,"column":51}},"22":{"start":{"line":239,"column":16},"end":{"line":239,"column":28}},"23":{"start":{"line":274,"column":16},"end":{"line":274,"column":115}},"24":{"start":{"line":321,"column":16},"end":{"line":321,"column":34}},"25":{"start":{"line":375,"column":12},"end":{"line":375,"column":32}},"26":{"start":{"line":377,"column":12},"end":{"line":377,"column":30}},"27":{"start":{"line":378,"column":12},"end":{"line":378,"column":30}},"28":{"start":{"line":388,"column":12},"end":{"line":388,"column":32}},"29":{"start":{"line":390,"column":12},"end":{"line":399,"column":15}},"30":{"start":{"line":409,"column":12},"end":{"line":409,"column":32}},"31":{"start":{"line":411,"column":12},"end":{"line":412,"column":40}},"32":{"start":{"line":414,"column":12},"end":{"line":415,"column":39}},"33":{"start":{"line":417,"column":12},"end":{"line":418,"column":42}},"34":{"start":{"line":420,"column":12},"end":{"line":421,"column":41}},"35":{"start":{"line":423,"column":12},"end":{"line":424,"column":41}},"36":{"start":{"line":426,"column":12},"end":{"line":427,"column":41}},"37":{"start":{"line":429,"column":12},"end":{"line":430,"column":42}},"38":{"start":{"line":432,"column":12},"end":{"line":433,"column":42}},"39":{"start":{"line":435,"column":12},"end":{"line":436,"column":41}},"40":{"start":{"line":438,"column":12},"end":{"line":438,"column":39}},"41":{"start":{"line":439,"column":12},"end":{"line":439,"column":41}},"42":{"start":{"line":450,"column":12},"end":{"line":450,"column":32}},"43":{"start":{"line":452,"column":12},"end":{"line":452,"column":46}},"44":{"start":{"line":468,"column":12},"end":{"line":468,"column":32}},"45":{"start":{"line":470,"column":12},"end":{"line":471,"column":98}},"46":{"start":{"line":473,"column":12},"end":{"line":473,"column":30}},"47":{"start":{"line":483,"column":12},"end":{"line":485,"column":54}},"48":{"start":{"line":487,"column":12},"end":{"line":492,"column":13}},"49":{"start":{"line":488,"column":16},"end":{"line":488,"column":52}},"50":{"start":{"line":489,"column":16},"end":{"line":491,"column":19}},"51":{"start":{"line":494,"column":12},"end":{"line":494,"column":26}},"52":{"start":{"line":505,"column":12},"end":{"line":505,"column":32}},"53":{"start":{"line":507,"column":12},"end":{"line":511,"column":25}},"54":{"start":{"line":523,"column":12},"end":{"line":524,"column":29}},"55":{"start":{"line":526,"column":12},"end":{"line":526,"column":45}},"56":{"start":{"line":528,"column":12},"end":{"line":536,"column":15}},"57":{"start":{"line":529,"column":16},"end":{"line":535,"column":17}},"58":{"start":{"line":530,"column":20},"end":{"line":530,"column":50}},"59":{"start":{"line":532,"column":20},"end":{"line":534,"column":21}},"60":{"start":{"line":533,"column":24},"end":{"line":533,"column":50}},"61":{"start":{"line":538,"column":12},"end":{"line":538,"column":48}},"62":{"start":{"line":548,"column":12},"end":{"line":548,"column":32}},"63":{"start":{"line":550,"column":12},"end":{"line":551,"column":68}},"64":{"start":{"line":561,"column":12},"end":{"line":561,"column":32}},"65":{"start":{"line":563,"column":12},"end":{"line":564,"column":68}},"66":{"start":{"line":574,"column":12},"end":{"line":574,"column":32}},"67":{"start":{"line":576,"column":12},"end":{"line":577,"column":68}},"68":{"start":{"line":587,"column":12},"end":{"line":587,"column":32}},"69":{"start":{"line":589,"column":12},"end":{"line":590,"column":68}},"70":{"start":{"line":601,"column":12},"end":{"line":601,"column":32}},"71":{"start":{"line":603,"column":12},"end":{"line":603,"column":81}},"72":{"start":{"line":614,"column":12},"end":{"line":614,"column":32}},"73":{"start":{"line":616,"column":12},"end":{"line":617,"column":65}},"74":{"start":{"line":628,"column":12},"end":{"line":628,"column":32}},"75":{"start":{"line":629,"column":12},"end":{"line":629,"column":54}},"76":{"start":{"line":630,"column":12},"end":{"line":630,"column":52}},"77":{"start":{"line":632,"column":12},"end":{"line":632,"column":59}},"78":{"start":{"line":643,"column":12},"end":{"line":643,"column":32}},"79":{"start":{"line":644,"column":12},"end":{"line":644,"column":54}},"80":{"start":{"line":645,"column":12},"end":{"line":645,"column":52}},"81":{"start":{"line":647,"column":12},"end":{"line":647,"column":60}},"82":{"start":{"line":658,"column":12},"end":{"line":658,"column":32}},"83":{"start":{"line":659,"column":12},"end":{"line":659,"column":50}},"84":{"start":{"line":660,"column":12},"end":{"line":660,"column":54}},"85":{"start":{"line":661,"column":12},"end":{"line":661,"column":52}},"86":{"start":{"line":663,"column":12},"end":{"line":664,"column":68}},"87":{"start":{"line":676,"column":12},"end":{"line":676,"column":32}},"88":{"start":{"line":677,"column":12},"end":{"line":677,"column":50}},"89":{"start":{"line":678,"column":12},"end":{"line":678,"column":54}},"90":{"start":{"line":679,"column":12},"end":{"line":679,"column":65}},"91":{"start":{"line":681,"column":12},"end":{"line":681,"column":75}},"92":{"start":{"line":683,"column":12},"end":{"line":684,"column":76}},"93":{"start":{"line":695,"column":12},"end":{"line":695,"column":32}},"94":{"start":{"line":697,"column":12},"end":{"line":698,"column":68}},"95":{"start":{"line":708,"column":12},"end":{"line":708,"column":32}},"96":{"start":{"line":710,"column":12},"end":{"line":711,"column":68}},"97":{"start":{"line":722,"column":12},"end":{"line":722,"column":32}},"98":{"start":{"line":724,"column":12},"end":{"line":724,"column":67}},"99":{"start":{"line":735,"column":12},"end":{"line":735,"column":32}},"100":{"start":{"line":737,"column":12},"end":{"line":737,"column":69}},"101":{"start":{"line":749,"column":12},"end":{"line":749,"column":32}},"102":{"start":{"line":750,"column":12},"end":{"line":750,"column":57}},"103":{"start":{"line":752,"column":12},"end":{"line":756,"column":25}},"104":{"start":{"line":766,"column":12},"end":{"line":766,"column":32}},"105":{"start":{"line":768,"column":12},"end":{"line":772,"column":15}},"106":{"start":{"line":769,"column":16},"end":{"line":769,"column":78}},"107":{"start":{"line":771,"column":16},"end":{"line":771,"column":48}},"108":{"start":{"line":782,"column":12},"end":{"line":782,"column":32}},"109":{"start":{"line":784,"column":12},"end":{"line":788,"column":15}},"110":{"start":{"line":785,"column":16},"end":{"line":785,"column":74}},"111":{"start":{"line":787,"column":16},"end":{"line":787,"column":46}},"112":{"start":{"line":798,"column":12},"end":{"line":798,"column":32}},"113":{"start":{"line":800,"column":12},"end":{"line":800,"column":57}},"114":{"start":{"line":808,"column":12},"end":{"line":812,"column":27}},"115":{"start":{"line":814,"column":12},"end":{"line":816,"column":13}},"116":{"start":{"line":815,"column":16},"end":{"line":815,"column":78}},"117":{"start":{"line":818,"column":12},"end":{"line":820,"column":13}},"118":{"start":{"line":819,"column":16},"end":{"line":819,"column":74}},"119":{"start":{"line":822,"column":12},"end":{"line":822,"column":46}},"120":{"start":{"line":834,"column":12},"end":{"line":836,"column":61}},"121":{"start":{"line":838,"column":12},"end":{"line":843,"column":13}},"122":{"start":{"line":839,"column":16},"end":{"line":839,"column":44}},"123":{"start":{"line":840,"column":16},"end":{"line":840,"column":41}},"124":{"start":{"line":842,"column":16},"end":{"line":842,"column":97}},"125":{"start":{"line":845,"column":12},"end":{"line":845,"column":30}},"126":{"start":{"line":856,"column":12},"end":{"line":856,"column":32}},"127":{"start":{"line":858,"column":12},"end":{"line":858,"column":48}},"128":{"start":{"line":869,"column":12},"end":{"line":869,"column":32}},"129":{"start":{"line":871,"column":12},"end":{"line":871,"column":47}},"130":{"start":{"line":882,"column":12},"end":{"line":882,"column":32}},"131":{"start":{"line":884,"column":12},"end":{"line":884,"column":50}},"132":{"start":{"line":895,"column":12},"end":{"line":895,"column":32}},"133":{"start":{"line":897,"column":12},"end":{"line":897,"column":49}},"134":{"start":{"line":908,"column":12},"end":{"line":908,"column":32}},"135":{"start":{"line":910,"column":12},"end":{"line":910,"column":49}},"136":{"start":{"line":921,"column":12},"end":{"line":921,"column":32}},"137":{"start":{"line":923,"column":12},"end":{"line":923,"column":50}},"138":{"start":{"line":934,"column":12},"end":{"line":934,"column":32}},"139":{"start":{"line":936,"column":12},"end":{"line":936,"column":50}},"140":{"start":{"line":947,"column":12},"end":{"line":947,"column":32}},"141":{"start":{"line":949,"column":12},"end":{"line":949,"column":49}},"142":{"start":{"line":960,"column":12},"end":{"line":961,"column":50}},"143":{"start":{"line":963,"column":12},"end":{"line":963,"column":64}},"144":{"start":{"line":974,"column":12},"end":{"line":976,"column":13}},"145":{"start":{"line":975,"column":16},"end":{"line":975,"column":36}},"146":{"start":{"line":978,"column":12},"end":{"line":978,"column":23}},"147":{"start":{"line":990,"column":12},"end":{"line":990,"column":32}},"148":{"start":{"line":991,"column":12},"end":{"line":991,"column":48}},"149":{"start":{"line":993,"column":12},"end":{"line":996,"column":15}},"150":{"start":{"line":1008,"column":12},"end":{"line":1008,"column":32}},"151":{"start":{"line":1010,"column":12},"end":{"line":1018,"column":13}},"152":{"start":{"line":1011,"column":16},"end":{"line":1014,"column":18}},"153":{"start":{"line":1016,"column":17},"end":{"line":1018,"column":13}},"154":{"start":{"line":1017,"column":16},"end":{"line":1017,"column":41}},"155":{"start":{"line":1020,"column":12},"end":{"line":1020,"column":23}},"156":{"start":{"line":1031,"column":12},"end":{"line":1031,"column":32}},"157":{"start":{"line":1033,"column":12},"end":{"line":1033,"column":82}},"158":{"start":{"line":1044,"column":12},"end":{"line":1044,"column":32}},"159":{"start":{"line":1045,"column":12},"end":{"line":1045,"column":44}},"160":{"start":{"line":1047,"column":12},"end":{"line":1047,"column":41}},"161":{"start":{"line":1048,"column":12},"end":{"line":1048,"column":55}},"162":{"start":{"line":1050,"column":12},"end":{"line":1050,"column":72}},"163":{"start":{"line":1051,"column":12},"end":{"line":1051,"column":72}},"164":{"start":{"line":1052,"column":12},"end":{"line":1052,"column":80}},"165":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":39}},"166":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":59}},"167":{"start":{"line":1059,"column":12},"end":{"line":1067,"column":13}},"168":{"start":{"line":1060,"column":16},"end":{"line":1066,"column":19}},"169":{"start":{"line":1078,"column":12},"end":{"line":1078,"column":32}},"170":{"start":{"line":1080,"column":12},"end":{"line":1080,"column":83}},"171":{"start":{"line":1090,"column":12},"end":{"line":1090,"column":32}},"172":{"start":{"line":1092,"column":12},"end":{"line":1092,"column":109}},"173":{"start":{"line":1103,"column":12},"end":{"line":1103,"column":32}},"174":{"start":{"line":1105,"column":12},"end":{"line":1105,"column":82}},"175":{"start":{"line":1116,"column":12},"end":{"line":1116,"column":32}},"176":{"start":{"line":1118,"column":12},"end":{"line":1118,"column":79}},"177":{"start":{"line":1129,"column":12},"end":{"line":1129,"column":32}},"178":{"start":{"line":1131,"column":12},"end":{"line":1131,"column":83}},"179":{"start":{"line":1142,"column":12},"end":{"line":1142,"column":32}},"180":{"start":{"line":1144,"column":12},"end":{"line":1144,"column":83}},"181":{"start":{"line":1155,"column":12},"end":{"line":1155,"column":32}},"182":{"start":{"line":1157,"column":12},"end":{"line":1157,"column":79}},"183":{"start":{"line":1162,"column":0},"end":{"line":1162,"column":34}},"184":{"start":{"line":1170,"column":0},"end":{"line":1173,"column":29}},"185":{"start":{"line":1184,"column":0},"end":{"line":1424,"column":3}},"186":{"start":{"line":1195,"column":8},"end":{"line":1195,"column":28}},"187":{"start":{"line":1197,"column":8},"end":{"line":1197,"column":66}},"188":{"start":{"line":1198,"column":8},"end":{"line":1198,"column":72}},"189":{"start":{"line":1199,"column":8},"end":{"line":1199,"column":70}},"190":{"start":{"line":1200,"column":8},"end":{"line":1200,"column":80}},"191":{"start":{"line":1201,"column":8},"end":{"line":1201,"column":67}},"192":{"start":{"line":1203,"column":8},"end":{"line":1205,"column":10}},"193":{"start":{"line":1207,"column":8},"end":{"line":1211,"column":11}},"194":{"start":{"line":1222,"column":8},"end":{"line":1222,"column":28}},"195":{"start":{"line":1224,"column":8},"end":{"line":1228,"column":11}},"196":{"start":{"line":1239,"column":8},"end":{"line":1239,"column":28}},"197":{"start":{"line":1241,"column":8},"end":{"line":1245,"column":11}},"198":{"start":{"line":1256,"column":8},"end":{"line":1256,"column":28}},"199":{"start":{"line":1258,"column":8},"end":{"line":1264,"column":11}},"200":{"start":{"line":1266,"column":8},"end":{"line":1266,"column":68}},"201":{"start":{"line":1277,"column":8},"end":{"line":1277,"column":28}},"202":{"start":{"line":1279,"column":8},"end":{"line":1283,"column":11}},"203":{"start":{"line":1294,"column":8},"end":{"line":1294,"column":28}},"204":{"start":{"line":1295,"column":8},"end":{"line":1295,"column":50}},"205":{"start":{"line":1297,"column":8},"end":{"line":1299,"column":9}},"206":{"start":{"line":1298,"column":12},"end":{"line":1298,"column":45}},"207":{"start":{"line":1311,"column":8},"end":{"line":1311,"column":28}},"208":{"start":{"line":1313,"column":8},"end":{"line":1315,"column":11}},"209":{"start":{"line":1314,"column":12},"end":{"line":1314,"column":54}},"210":{"start":{"line":1327,"column":8},"end":{"line":1327,"column":28}},"211":{"start":{"line":1328,"column":8},"end":{"line":1328,"column":50}},"212":{"start":{"line":1330,"column":8},"end":{"line":1336,"column":9}},"213":{"start":{"line":1331,"column":12},"end":{"line":1331,"column":37}},"214":{"start":{"line":1333,"column":12},"end":{"line":1335,"column":13}},"215":{"start":{"line":1334,"column":16},"end":{"line":1334,"column":41}},"216":{"start":{"line":1358,"column":16},"end":{"line":1358,"column":36}},"217":{"start":{"line":1359,"column":16},"end":{"line":1359,"column":54}},"218":{"start":{"line":1360,"column":16},"end":{"line":1360,"column":80}},"219":{"start":{"line":1362,"column":16},"end":{"line":1362,"column":44}},"220":{"start":{"line":1426,"column":0},"end":{"line":1426,"column":40}},"221":{"start":{"line":1434,"column":0},"end":{"line":1489,"column":85}},"222":{"start":{"line":1447,"column":8},"end":{"line":1447,"column":42}},"223":{"start":{"line":1451,"column":8},"end":{"line":1451,"column":46}},"224":{"start":{"line":1500,"column":0},"end":{"line":1643,"column":3}},"225":{"start":{"line":1508,"column":8},"end":{"line":1508,"column":57}},"226":{"start":{"line":1510,"column":8},"end":{"line":1510,"column":74}},"227":{"start":{"line":1511,"column":8},"end":{"line":1511,"column":89}},"228":{"start":{"line":1524,"column":8},"end":{"line":1525,"column":47}},"229":{"start":{"line":1527,"column":8},"end":{"line":1527,"column":65}},"230":{"start":{"line":1537,"column":8},"end":{"line":1537,"column":57}},"231":{"start":{"line":1538,"column":8},"end":{"line":1538,"column":36}},"232":{"start":{"line":1539,"column":8},"end":{"line":1539,"column":36}},"233":{"start":{"line":1549,"column":8},"end":{"line":1549,"column":36}},"234":{"start":{"line":1560,"column":8},"end":{"line":1560,"column":31}},"235":{"start":{"line":1562,"column":8},"end":{"line":1575,"column":9}},"236":{"start":{"line":1563,"column":12},"end":{"line":1574,"column":13}},"237":{"start":{"line":1564,"column":16},"end":{"line":1564,"column":33}},"238":{"start":{"line":1567,"column":16},"end":{"line":1567,"column":66}},"239":{"start":{"line":1568,"column":16},"end":{"line":1571,"column":17}},"240":{"start":{"line":1569,"column":20},"end":{"line":1569,"column":70}},"241":{"start":{"line":1570,"column":20},"end":{"line":1570,"column":75}},"242":{"start":{"line":1573,"column":16},"end":{"line":1573,"column":43}},"243":{"start":{"line":1577,"column":8},"end":{"line":1577,"column":29}},"244":{"start":{"line":1587,"column":8},"end":{"line":1592,"column":59}},"245":{"start":{"line":1594,"column":8},"end":{"line":1596,"column":9}},"246":{"start":{"line":1595,"column":12},"end":{"line":1595,"column":19}},"247":{"start":{"line":1598,"column":8},"end":{"line":1598,"column":46}},"248":{"start":{"line":1600,"column":8},"end":{"line":1611,"column":9}},"249":{"start":{"line":1601,"column":12},"end":{"line":1601,"column":63}},"250":{"start":{"line":1602,"column":12},"end":{"line":1602,"column":59}},"251":{"start":{"line":1604,"column":12},"end":{"line":1610,"column":13}},"252":{"start":{"line":1606,"column":16},"end":{"line":1606,"column":50}},"253":{"start":{"line":1609,"column":16},"end":{"line":1609,"column":61}},"254":{"start":{"line":1613,"column":8},"end":{"line":1613,"column":46}},"255":{"start":{"line":1653,"column":0},"end":{"line":1653,"column":42}},"256":{"start":{"line":1663,"column":0},"end":{"line":1663,"column":33}},"257":{"start":{"line":1665,"column":0},"end":{"line":1901,"column":3}},"258":{"start":{"line":1681,"column":8},"end":{"line":1682,"column":80}},"259":{"start":{"line":1684,"column":8},"end":{"line":1691,"column":11}},"260":{"start":{"line":1693,"column":8},"end":{"line":1695,"column":9}},"261":{"start":{"line":1694,"column":12},"end":{"line":1694,"column":37}},"262":{"start":{"line":1706,"column":8},"end":{"line":1707,"column":57}},"263":{"start":{"line":1709,"column":8},"end":{"line":1709,"column":44}},"264":{"start":{"line":1720,"column":8},"end":{"line":1720,"column":28}},"265":{"start":{"line":1722,"column":8},"end":{"line":1722,"column":41}},"266":{"start":{"line":1731,"column":8},"end":{"line":1731,"column":28}},"267":{"start":{"line":1733,"column":8},"end":{"line":1735,"column":11}},"268":{"start":{"line":1734,"column":12},"end":{"line":1734,"column":33}},"269":{"start":{"line":1746,"column":8},"end":{"line":1746,"column":28}},"270":{"start":{"line":1748,"column":8},"end":{"line":1748,"column":56}},"271":{"start":{"line":1761,"column":8},"end":{"line":1762,"column":38}},"272":{"start":{"line":1765,"column":8},"end":{"line":1769,"column":9}},"273":{"start":{"line":1766,"column":12},"end":{"line":1768,"column":15}},"274":{"start":{"line":1771,"column":8},"end":{"line":1776,"column":9}},"275":{"start":{"line":1772,"column":12},"end":{"line":1772,"column":45}},"276":{"start":{"line":1775,"column":12},"end":{"line":1775,"column":38}},"277":{"start":{"line":1778,"column":8},"end":{"line":1778,"column":22}},"278":{"start":{"line":1791,"column":8},"end":{"line":1791,"column":28}},"279":{"start":{"line":1793,"column":8},"end":{"line":1793,"column":44}},"280":{"start":{"line":1795,"column":8},"end":{"line":1798,"column":11}},"281":{"start":{"line":1796,"column":12},"end":{"line":1797,"column":82}},"282":{"start":{"line":1810,"column":8},"end":{"line":1810,"column":28}},"283":{"start":{"line":1812,"column":8},"end":{"line":1812,"column":44}},"284":{"start":{"line":1814,"column":8},"end":{"line":1822,"column":11}},"285":{"start":{"line":1815,"column":12},"end":{"line":1815,"column":52}},"286":{"start":{"line":1816,"column":12},"end":{"line":1816,"column":48}},"287":{"start":{"line":1818,"column":12},"end":{"line":1821,"column":65}},"288":{"start":{"line":1833,"column":8},"end":{"line":1834,"column":57}},"289":{"start":{"line":1836,"column":8},"end":{"line":1836,"column":47}},"290":{"start":{"line":1848,"column":8},"end":{"line":1849,"column":57}},"291":{"start":{"line":1851,"column":8},"end":{"line":1851,"column":46}},"292":{"start":{"line":1862,"column":8},"end":{"line":1862,"column":28}},"293":{"start":{"line":1864,"column":8},"end":{"line":1864,"column":47}},"294":{"start":{"line":1877,"column":8},"end":{"line":1878,"column":24}},"295":{"start":{"line":1880,"column":8},"end":{"line":1897,"column":9}},"296":{"start":{"line":1881,"column":12},"end":{"line":1881,"column":38}},"297":{"start":{"line":1882,"column":12},"end":{"line":1882,"column":46}},"298":{"start":{"line":1884,"column":13},"end":{"line":1897,"column":9}},"299":{"start":{"line":1885,"column":12},"end":{"line":1893,"column":15}},"300":{"start":{"line":1886,"column":16},"end":{"line":1892,"column":17}},"301":{"start":{"line":1887,"column":20},"end":{"line":1887,"column":60}},"302":{"start":{"line":1888,"column":20},"end":{"line":1888,"column":53}},"303":{"start":{"line":1891,"column":20},"end":{"line":1891,"column":39}},"304":{"start":{"line":1896,"column":12},"end":{"line":1896,"column":28}},"305":{"start":{"line":1899,"column":8},"end":{"line":1899,"column":22}},"306":{"start":{"line":1903,"column":0},"end":{"line":1903,"column":48}},"307":{"start":{"line":1924,"column":0},"end":{"line":2949,"column":3}},"308":{"start":{"line":1985,"column":16},"end":{"line":1985,"column":37}},"309":{"start":{"line":2059,"column":16},"end":{"line":2059,"column":36}},"310":{"start":{"line":2061,"column":16},"end":{"line":2066,"column":18}},"311":{"start":{"line":2126,"column":16},"end":{"line":2126,"column":61}},"312":{"start":{"line":2139,"column":16},"end":{"line":2139,"column":62}},"313":{"start":{"line":2151,"column":16},"end":{"line":2151,"column":55}},"314":{"start":{"line":2163,"column":16},"end":{"line":2163,"column":36}},"315":{"start":{"line":2165,"column":16},"end":{"line":2169,"column":18}},"316":{"start":{"line":2181,"column":16},"end":{"line":2181,"column":36}},"317":{"start":{"line":2183,"column":16},"end":{"line":2187,"column":18}},"318":{"start":{"line":2199,"column":16},"end":{"line":2199,"column":56}},"319":{"start":{"line":2212,"column":16},"end":{"line":2212,"column":61}},"320":{"start":{"line":2237,"column":16},"end":{"line":2237,"column":65}},"321":{"start":{"line":2262,"column":16},"end":{"line":2262,"column":36}},"322":{"start":{"line":2264,"column":16},"end":{"line":2268,"column":18}},"323":{"start":{"line":2281,"column":16},"end":{"line":2281,"column":58}},"324":{"start":{"line":2335,"column":12},"end":{"line":2335,"column":32}},"325":{"start":{"line":2337,"column":12},"end":{"line":2337,"column":36}},"326":{"start":{"line":2339,"column":12},"end":{"line":2339,"column":65}},"327":{"start":{"line":2340,"column":12},"end":{"line":2340,"column":65}},"328":{"start":{"line":2341,"column":12},"end":{"line":2341,"column":57}},"329":{"start":{"line":2342,"column":12},"end":{"line":2342,"column":65}},"330":{"start":{"line":2343,"column":12},"end":{"line":2343,"column":65}},"331":{"start":{"line":2344,"column":12},"end":{"line":2344,"column":55}},"332":{"start":{"line":2345,"column":12},"end":{"line":2345,"column":63}},"333":{"start":{"line":2346,"column":12},"end":{"line":2346,"column":71}},"334":{"start":{"line":2347,"column":12},"end":{"line":2347,"column":59}},"335":{"start":{"line":2348,"column":12},"end":{"line":2348,"column":59}},"336":{"start":{"line":2350,"column":12},"end":{"line":2350,"column":42}},"337":{"start":{"line":2352,"column":12},"end":{"line":2355,"column":15}},"338":{"start":{"line":2357,"column":12},"end":{"line":2361,"column":15}},"339":{"start":{"line":2371,"column":12},"end":{"line":2371,"column":32}},"340":{"start":{"line":2373,"column":12},"end":{"line":2373,"column":37}},"341":{"start":{"line":2383,"column":12},"end":{"line":2383,"column":32}},"342":{"start":{"line":2385,"column":12},"end":{"line":2385,"column":38}},"343":{"start":{"line":2396,"column":12},"end":{"line":2396,"column":32}},"344":{"start":{"line":2398,"column":12},"end":{"line":2398,"column":44}},"345":{"start":{"line":2409,"column":12},"end":{"line":2411,"column":49}},"346":{"start":{"line":2413,"column":12},"end":{"line":2415,"column":13}},"347":{"start":{"line":2414,"column":16},"end":{"line":2414,"column":80}},"348":{"start":{"line":2417,"column":12},"end":{"line":2417,"column":82}},"349":{"start":{"line":2427,"column":12},"end":{"line":2427,"column":32}},"350":{"start":{"line":2429,"column":12},"end":{"line":2429,"column":43}},"351":{"start":{"line":2440,"column":12},"end":{"line":2440,"column":32}},"352":{"start":{"line":2442,"column":12},"end":{"line":2442,"column":46}},"353":{"start":{"line":2453,"column":12},"end":{"line":2454,"column":56}},"354":{"start":{"line":2456,"column":12},"end":{"line":2456,"column":35}},"355":{"start":{"line":2467,"column":12},"end":{"line":2467,"column":32}},"356":{"start":{"line":2469,"column":12},"end":{"line":2480,"column":13}},"357":{"start":{"line":2470,"column":16},"end":{"line":2470,"column":28}},"358":{"start":{"line":2472,"column":16},"end":{"line":2479,"column":17}},"359":{"start":{"line":2473,"column":20},"end":{"line":2475,"column":21}},"360":{"start":{"line":2474,"column":24},"end":{"line":2474,"column":73}},"361":{"start":{"line":2477,"column":20},"end":{"line":2477,"column":69}},"362":{"start":{"line":2478,"column":20},"end":{"line":2478,"column":51}},"363":{"start":{"line":2490,"column":12},"end":{"line":2490,"column":32}},"364":{"start":{"line":2492,"column":12},"end":{"line":2494,"column":14}},"365":{"start":{"line":2503,"column":12},"end":{"line":2504,"column":56}},"366":{"start":{"line":2506,"column":12},"end":{"line":2508,"column":13}},"367":{"start":{"line":2507,"column":16},"end":{"line":2507,"column":44}},"368":{"start":{"line":2519,"column":12},"end":{"line":2519,"column":32}},"369":{"start":{"line":2521,"column":12},"end":{"line":2528,"column":13}},"370":{"start":{"line":2522,"column":16},"end":{"line":2527,"column":28}},"371":{"start":{"line":2537,"column":12},"end":{"line":2537,"column":32}},"372":{"start":{"line":2539,"column":12},"end":{"line":2539,"column":97}},"373":{"start":{"line":2548,"column":12},"end":{"line":2548,"column":32}},"374":{"start":{"line":2550,"column":12},"end":{"line":2571,"column":13}},"375":{"start":{"line":2551,"column":16},"end":{"line":2551,"column":45}},"376":{"start":{"line":2553,"column":16},"end":{"line":2553,"column":63}},"377":{"start":{"line":2554,"column":16},"end":{"line":2554,"column":60}},"378":{"start":{"line":2555,"column":16},"end":{"line":2555,"column":63}},"379":{"start":{"line":2557,"column":16},"end":{"line":2557,"column":63}},"380":{"start":{"line":2558,"column":16},"end":{"line":2558,"column":67}},"381":{"start":{"line":2560,"column":16},"end":{"line":2560,"column":68}},"382":{"start":{"line":2562,"column":16},"end":{"line":2562,"column":62}},"383":{"start":{"line":2563,"column":16},"end":{"line":2563,"column":59}},"384":{"start":{"line":2565,"column":16},"end":{"line":2565,"column":89}},"385":{"start":{"line":2567,"column":16},"end":{"line":2567,"column":39}},"386":{"start":{"line":2570,"column":16},"end":{"line":2570,"column":39}},"387":{"start":{"line":2582,"column":12},"end":{"line":2582,"column":32}},"388":{"start":{"line":2584,"column":12},"end":{"line":2601,"column":13}},"389":{"start":{"line":2585,"column":16},"end":{"line":2585,"column":46}},"390":{"start":{"line":2586,"column":16},"end":{"line":2586,"column":51}},"391":{"start":{"line":2588,"column":16},"end":{"line":2590,"column":17}},"392":{"start":{"line":2589,"column":20},"end":{"line":2589,"column":42}},"393":{"start":{"line":2592,"column":16},"end":{"line":2592,"column":48}},"394":{"start":{"line":2594,"column":16},"end":{"line":2594,"column":66}},"395":{"start":{"line":2596,"column":16},"end":{"line":2598,"column":17}},"396":{"start":{"line":2597,"column":20},"end":{"line":2597,"column":48}},"397":{"start":{"line":2600,"column":16},"end":{"line":2600,"column":58}},"398":{"start":{"line":2612,"column":12},"end":{"line":2613,"column":56}},"399":{"start":{"line":2615,"column":12},"end":{"line":2615,"column":44}},"400":{"start":{"line":2616,"column":12},"end":{"line":2616,"column":42}},"401":{"start":{"line":2618,"column":12},"end":{"line":2618,"column":54}},"402":{"start":{"line":2619,"column":12},"end":{"line":2619,"column":50}},"403":{"start":{"line":2621,"column":12},"end":{"line":2621,"column":41}},"404":{"start":{"line":2631,"column":12},"end":{"line":2631,"column":32}},"405":{"start":{"line":2633,"column":12},"end":{"line":2634,"column":26}},"406":{"start":{"line":2635,"column":12},"end":{"line":2636,"column":26}},"407":{"start":{"line":2637,"column":12},"end":{"line":2637,"column":113}},"408":{"start":{"line":2650,"column":12},"end":{"line":2650,"column":32}},"409":{"start":{"line":2651,"column":12},"end":{"line":2651,"column":40}},"410":{"start":{"line":2653,"column":12},"end":{"line":2658,"column":24}},"411":{"start":{"line":2668,"column":12},"end":{"line":2668,"column":56}},"412":{"start":{"line":2679,"column":12},"end":{"line":2681,"column":56}},"413":{"start":{"line":2683,"column":12},"end":{"line":2685,"column":13}},"414":{"start":{"line":2684,"column":16},"end":{"line":2684,"column":60}},"415":{"start":{"line":2687,"column":12},"end":{"line":2687,"column":24}},"416":{"start":{"line":2698,"column":12},"end":{"line":2699,"column":75}},"417":{"start":{"line":2701,"column":12},"end":{"line":2701,"column":73}},"418":{"start":{"line":2703,"column":12},"end":{"line":2703,"column":100}},"419":{"start":{"line":2705,"column":12},"end":{"line":2705,"column":35}},"420":{"start":{"line":2716,"column":12},"end":{"line":2717,"column":56}},"421":{"start":{"line":2719,"column":12},"end":{"line":2721,"column":13}},"422":{"start":{"line":2720,"column":16},"end":{"line":2720,"column":64}},"423":{"start":{"line":2723,"column":12},"end":{"line":2723,"column":35}},"424":{"start":{"line":2734,"column":12},"end":{"line":2735,"column":56}},"425":{"start":{"line":2737,"column":12},"end":{"line":2739,"column":13}},"426":{"start":{"line":2738,"column":16},"end":{"line":2738,"column":65}},"427":{"start":{"line":2741,"column":12},"end":{"line":2741,"column":35}},"428":{"start":{"line":2752,"column":12},"end":{"line":2753,"column":56}},"429":{"start":{"line":2755,"column":12},"end":{"line":2757,"column":13}},"430":{"start":{"line":2756,"column":16},"end":{"line":2756,"column":65}},"431":{"start":{"line":2759,"column":12},"end":{"line":2759,"column":35}},"432":{"start":{"line":2770,"column":12},"end":{"line":2773,"column":84}},"433":{"start":{"line":2775,"column":12},"end":{"line":2775,"column":73}},"434":{"start":{"line":2794,"column":12},"end":{"line":2794,"column":32}},"435":{"start":{"line":2796,"column":12},"end":{"line":2796,"column":46}},"436":{"start":{"line":2798,"column":12},"end":{"line":2801,"column":15}},"437":{"start":{"line":2799,"column":16},"end":{"line":2799,"column":112}},"438":{"start":{"line":2800,"column":16},"end":{"line":2800,"column":108}},"439":{"start":{"line":2811,"column":12},"end":{"line":2811,"column":32}},"440":{"start":{"line":2813,"column":12},"end":{"line":2813,"column":89}},"441":{"start":{"line":2814,"column":12},"end":{"line":2814,"column":87}},"442":{"start":{"line":2825,"column":12},"end":{"line":2825,"column":32}},"443":{"start":{"line":2827,"column":12},"end":{"line":2827,"column":58}},"444":{"start":{"line":2840,"column":12},"end":{"line":2840,"column":32}},"445":{"start":{"line":2842,"column":12},"end":{"line":2850,"column":13}},"446":{"start":{"line":2843,"column":16},"end":{"line":2847,"column":19}},"447":{"start":{"line":2849,"column":16},"end":{"line":2849,"column":40}},"448":{"start":{"line":2862,"column":12},"end":{"line":2862,"column":32}},"449":{"start":{"line":2863,"column":12},"end":{"line":2863,"column":27}},"450":{"start":{"line":2865,"column":12},"end":{"line":2875,"column":15}},"451":{"start":{"line":2866,"column":16},"end":{"line":2874,"column":17}},"452":{"start":{"line":2867,"column":20},"end":{"line":2869,"column":23}},"453":{"start":{"line":2871,"column":20},"end":{"line":2871,"column":37}},"454":{"start":{"line":2873,"column":20},"end":{"line":2873,"column":64}},"455":{"start":{"line":2877,"column":12},"end":{"line":2879,"column":13}},"456":{"start":{"line":2878,"column":16},"end":{"line":2878,"column":51}},"457":{"start":{"line":2881,"column":12},"end":{"line":2881,"column":25}},"458":{"start":{"line":2892,"column":12},"end":{"line":2892,"column":32}},"459":{"start":{"line":2894,"column":12},"end":{"line":2903,"column":13}},"460":{"start":{"line":2895,"column":16},"end":{"line":2896,"column":95}},"461":{"start":{"line":2898,"column":16},"end":{"line":2902,"column":17}},"462":{"start":{"line":2899,"column":20},"end":{"line":2899,"column":130}},"463":{"start":{"line":2900,"column":20},"end":{"line":2900,"column":110}},"464":{"start":{"line":2901,"column":20},"end":{"line":2901,"column":103}},"465":{"start":{"line":2914,"column":12},"end":{"line":2914,"column":32}},"466":{"start":{"line":2916,"column":12},"end":{"line":2916,"column":68}},"467":{"start":{"line":2917,"column":12},"end":{"line":2917,"column":65}},"468":{"start":{"line":2919,"column":12},"end":{"line":2933,"column":13}},"469":{"start":{"line":2920,"column":16},"end":{"line":2920,"column":60}},"470":{"start":{"line":2922,"column":16},"end":{"line":2927,"column":17}},"471":{"start":{"line":2923,"column":20},"end":{"line":2923,"column":48}},"472":{"start":{"line":2925,"column":20},"end":{"line":2925,"column":74}},"473":{"start":{"line":2926,"column":20},"end":{"line":2926,"column":71}},"474":{"start":{"line":2929,"column":16},"end":{"line":2929,"column":59}},"475":{"start":{"line":2930,"column":16},"end":{"line":2930,"column":60}},"476":{"start":{"line":2932,"column":16},"end":{"line":2932,"column":40}},"477":{"start":{"line":2944,"column":12},"end":{"line":2944,"column":32}},"478":{"start":{"line":2946,"column":12},"end":{"line":2946,"column":38}},"479":{"start":{"line":2951,"column":0},"end":{"line":2951,"column":28}},"480":{"start":{"line":2959,"column":0},"end":{"line":2967,"column":83}},"481":{"start":{"line":2979,"column":0},"end":{"line":3409,"column":3}},"482":{"start":{"line":3029,"column":16},"end":{"line":3029,"column":28}},"483":{"start":{"line":3056,"column":16},"end":{"line":3056,"column":67}},"484":{"start":{"line":3096,"column":16},"end":{"line":3096,"column":36}},"485":{"start":{"line":3097,"column":16},"end":{"line":3097,"column":58}},"486":{"start":{"line":3099,"column":16},"end":{"line":3102,"column":19}},"487":{"start":{"line":3196,"column":12},"end":{"line":3196,"column":52}},"488":{"start":{"line":3197,"column":12},"end":{"line":3197,"column":67}},"489":{"start":{"line":3207,"column":12},"end":{"line":3207,"column":32}},"490":{"start":{"line":3209,"column":12},"end":{"line":3209,"column":38}},"491":{"start":{"line":3221,"column":12},"end":{"line":3221,"column":45}},"492":{"start":{"line":3240,"column":12},"end":{"line":3243,"column":14}},"493":{"start":{"line":3271,"column":12},"end":{"line":3271,"column":50}},"494":{"start":{"line":3284,"column":12},"end":{"line":3286,"column":13}},"495":{"start":{"line":3285,"column":16},"end":{"line":3285,"column":47}},"496":{"start":{"line":3288,"column":12},"end":{"line":3288,"column":24}},"497":{"start":{"line":3334,"column":12},"end":{"line":3334,"column":58}},"498":{"start":{"line":3336,"column":12},"end":{"line":3339,"column":13}},"499":{"start":{"line":3337,"column":16},"end":{"line":3337,"column":87}},"500":{"start":{"line":3338,"column":16},"end":{"line":3338,"column":40}},"501":{"start":{"line":3350,"column":12},"end":{"line":3350,"column":32}},"502":{"start":{"line":3352,"column":12},"end":{"line":3354,"column":14}},"503":{"start":{"line":3364,"column":12},"end":{"line":3364,"column":66}},"504":{"start":{"line":3376,"column":12},"end":{"line":3376,"column":32}},"505":{"start":{"line":3377,"column":12},"end":{"line":3377,"column":54}},"506":{"start":{"line":3379,"column":12},"end":{"line":3381,"column":13}},"507":{"start":{"line":3380,"column":16},"end":{"line":3380,"column":49}},"508":{"start":{"line":3383,"column":12},"end":{"line":3387,"column":13}},"509":{"start":{"line":3384,"column":16},"end":{"line":3384,"column":40}},"510":{"start":{"line":3386,"column":16},"end":{"line":3386,"column":103}},"511":{"start":{"line":3389,"column":12},"end":{"line":3389,"column":23}},"512":{"start":{"line":3400,"column":12},"end":{"line":3400,"column":32}},"513":{"start":{"line":3401,"column":12},"end":{"line":3401,"column":45}},"514":{"start":{"line":3403,"column":12},"end":{"line":3406,"column":13}},"515":{"start":{"line":3404,"column":16},"end":{"line":3404,"column":73}},"516":{"start":{"line":3405,"column":16},"end":{"line":3405,"column":72}},"517":{"start":{"line":3411,"column":0},"end":{"line":3411,"column":32}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"3":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":30},"end":{"line":199,"column":39}},{"start":{"line":199,"column":43},"end":{"line":199,"column":85}}]},"4":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":16},"end":{"line":206,"column":16}},{"start":{"line":206,"column":16},"end":{"line":206,"column":16}}]},"5":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":16},"end":{"line":212,"column":16}},{"start":{"line":212,"column":16},"end":{"line":212,"column":16}}]},"6":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":21},"end":{"line":215,"column":21}},{"start":{"line":215,"column":21},"end":{"line":215,"column":21}}]},"7":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":12},"end":{"line":487,"column":12}},{"start":{"line":487,"column":12},"end":{"line":487,"column":12}}]},"8":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":16},"end":{"line":529,"column":16}},{"start":{"line":529,"column":16},"end":{"line":529,"column":16}}]},"9":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":23},"end":{"line":529,"column":34}},{"start":{"line":529,"column":38},"end":{"line":529,"column":40}}]},"10":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":20},"end":{"line":532,"column":20}},{"start":{"line":532,"column":20},"end":{"line":532,"column":20}}]},"11":{"line":663,"type":"binary-expr","locations":[{"start":{"line":663,"column":20},"end":{"line":663,"column":47}},{"start":{"line":664,"column":16},"end":{"line":664,"column":66}}]},"12":{"line":683,"type":"binary-expr","locations":[{"start":{"line":683,"column":20},"end":{"line":683,"column":69}},{"start":{"line":684,"column":16},"end":{"line":684,"column":74}}]},"13":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":12},"end":{"line":814,"column":12}},{"start":{"line":814,"column":12},"end":{"line":814,"column":12}}]},"14":{"line":818,"type":"if","locations":[{"start":{"line":818,"column":12},"end":{"line":818,"column":12}},{"start":{"line":818,"column":12},"end":{"line":818,"column":12}}]},"15":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":12},"end":{"line":838,"column":12}},{"start":{"line":838,"column":12},"end":{"line":838,"column":12}}]},"16":{"line":838,"type":"binary-expr","locations":[{"start":{"line":838,"column":16},"end":{"line":838,"column":44}},{"start":{"line":838,"column":48},"end":{"line":838,"column":78}}]},"17":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":12},"end":{"line":974,"column":12}},{"start":{"line":974,"column":12},"end":{"line":974,"column":12}}]},"18":{"line":1010,"type":"if","locations":[{"start":{"line":1010,"column":12},"end":{"line":1010,"column":12}},{"start":{"line":1010,"column":12},"end":{"line":1010,"column":12}}]},"19":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":17},"end":{"line":1016,"column":17}},{"start":{"line":1016,"column":17},"end":{"line":1016,"column":17}}]},"20":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":12},"end":{"line":1059,"column":12}},{"start":{"line":1059,"column":12},"end":{"line":1059,"column":12}}]},"21":{"line":1297,"type":"if","locations":[{"start":{"line":1297,"column":8},"end":{"line":1297,"column":8}},{"start":{"line":1297,"column":8},"end":{"line":1297,"column":8}}]},"22":{"line":1330,"type":"if","locations":[{"start":{"line":1330,"column":8},"end":{"line":1330,"column":8}},{"start":{"line":1330,"column":8},"end":{"line":1330,"column":8}}]},"23":{"line":1333,"type":"if","locations":[{"start":{"line":1333,"column":12},"end":{"line":1333,"column":12}},{"start":{"line":1333,"column":12},"end":{"line":1333,"column":12}}]},"24":{"line":1563,"type":"if","locations":[{"start":{"line":1563,"column":12},"end":{"line":1563,"column":12}},{"start":{"line":1563,"column":12},"end":{"line":1563,"column":12}}]},"25":{"line":1567,"type":"binary-expr","locations":[{"start":{"line":1567,"column":35},"end":{"line":1567,"column":51}},{"start":{"line":1567,"column":55},"end":{"line":1567,"column":65}}]},"26":{"line":1568,"type":"if","locations":[{"start":{"line":1568,"column":16},"end":{"line":1568,"column":16}},{"start":{"line":1568,"column":16},"end":{"line":1568,"column":16}}]},"27":{"line":1594,"type":"if","locations":[{"start":{"line":1594,"column":8},"end":{"line":1594,"column":8}},{"start":{"line":1594,"column":8},"end":{"line":1594,"column":8}}]},"28":{"line":1604,"type":"if","locations":[{"start":{"line":1604,"column":12},"end":{"line":1604,"column":12}},{"start":{"line":1604,"column":12},"end":{"line":1604,"column":12}}]},"29":{"line":1604,"type":"binary-expr","locations":[{"start":{"line":1604,"column":17},"end":{"line":1604,"column":40}},{"start":{"line":1604,"column":44},"end":{"line":1604,"column":82}},{"start":{"line":1605,"column":17},"end":{"line":1605,"column":38}},{"start":{"line":1605,"column":42},"end":{"line":1605,"column":80}}]},"30":{"line":1682,"type":"binary-expr","locations":[{"start":{"line":1682,"column":49},"end":{"line":1682,"column":61}},{"start":{"line":1682,"column":65},"end":{"line":1682,"column":78}}]},"31":{"line":1689,"type":"cond-expr","locations":[{"start":{"line":1689,"column":52},"end":{"line":1689,"column":58}},{"start":{"line":1689,"column":61},"end":{"line":1689,"column":63}}]},"32":{"line":1693,"type":"if","locations":[{"start":{"line":1693,"column":8},"end":{"line":1693,"column":8}},{"start":{"line":1693,"column":8},"end":{"line":1693,"column":8}}]},"33":{"line":1765,"type":"if","locations":[{"start":{"line":1765,"column":8},"end":{"line":1765,"column":8}},{"start":{"line":1765,"column":8},"end":{"line":1765,"column":8}}]},"34":{"line":1771,"type":"if","locations":[{"start":{"line":1771,"column":8},"end":{"line":1771,"column":8}},{"start":{"line":1771,"column":8},"end":{"line":1771,"column":8}}]},"35":{"line":1796,"type":"binary-expr","locations":[{"start":{"line":1796,"column":19},"end":{"line":1796,"column":66}},{"start":{"line":1797,"column":17},"end":{"line":1797,"column":31}},{"start":{"line":1797,"column":35},"end":{"line":1797,"column":80}}]},"36":{"line":1818,"type":"binary-expr","locations":[{"start":{"line":1818,"column":20},"end":{"line":1818,"column":38}},{"start":{"line":1819,"column":17},"end":{"line":1819,"column":50}},{"start":{"line":1820,"column":20},"end":{"line":1820,"column":51}},{"start":{"line":1821,"column":20},"end":{"line":1821,"column":62}}]},"37":{"line":1880,"type":"if","locations":[{"start":{"line":1880,"column":8},"end":{"line":1880,"column":8}},{"start":{"line":1880,"column":8},"end":{"line":1880,"column":8}}]},"38":{"line":1884,"type":"if","locations":[{"start":{"line":1884,"column":13},"end":{"line":1884,"column":13}},{"start":{"line":1884,"column":13},"end":{"line":1884,"column":13}}]},"39":{"line":1886,"type":"if","locations":[{"start":{"line":1886,"column":16},"end":{"line":1886,"column":16}},{"start":{"line":1886,"column":16},"end":{"line":1886,"column":16}}]},"40":{"line":2413,"type":"if","locations":[{"start":{"line":2413,"column":12},"end":{"line":2413,"column":12}},{"start":{"line":2413,"column":12},"end":{"line":2413,"column":12}}]},"41":{"line":2469,"type":"if","locations":[{"start":{"line":2469,"column":12},"end":{"line":2469,"column":12}},{"start":{"line":2469,"column":12},"end":{"line":2469,"column":12}}]},"42":{"line":2472,"type":"if","locations":[{"start":{"line":2472,"column":16},"end":{"line":2472,"column":16}},{"start":{"line":2472,"column":16},"end":{"line":2472,"column":16}}]},"43":{"line":2473,"type":"if","locations":[{"start":{"line":2473,"column":20},"end":{"line":2473,"column":20}},{"start":{"line":2473,"column":20},"end":{"line":2473,"column":20}}]},"44":{"line":2506,"type":"if","locations":[{"start":{"line":2506,"column":12},"end":{"line":2506,"column":12}},{"start":{"line":2506,"column":12},"end":{"line":2506,"column":12}}]},"45":{"line":2521,"type":"if","locations":[{"start":{"line":2521,"column":12},"end":{"line":2521,"column":12}},{"start":{"line":2521,"column":12},"end":{"line":2521,"column":12}}]},"46":{"line":2550,"type":"if","locations":[{"start":{"line":2550,"column":12},"end":{"line":2550,"column":12}},{"start":{"line":2550,"column":12},"end":{"line":2550,"column":12}}]},"47":{"line":2584,"type":"if","locations":[{"start":{"line":2584,"column":12},"end":{"line":2584,"column":12}},{"start":{"line":2584,"column":12},"end":{"line":2584,"column":12}}]},"48":{"line":2588,"type":"if","locations":[{"start":{"line":2588,"column":16},"end":{"line":2588,"column":16}},{"start":{"line":2588,"column":16},"end":{"line":2588,"column":16}}]},"49":{"line":2596,"type":"if","locations":[{"start":{"line":2596,"column":16},"end":{"line":2596,"column":16}},{"start":{"line":2596,"column":16},"end":{"line":2596,"column":16}}]},"50":{"line":2656,"type":"binary-expr","locations":[{"start":{"line":2656,"column":32},"end":{"line":2656,"column":56}},{"start":{"line":2656,"column":60},"end":{"line":2656,"column":64}}]},"51":{"line":2683,"type":"if","locations":[{"start":{"line":2683,"column":12},"end":{"line":2683,"column":12}},{"start":{"line":2683,"column":12},"end":{"line":2683,"column":12}}]},"52":{"line":2719,"type":"if","locations":[{"start":{"line":2719,"column":12},"end":{"line":2719,"column":12}},{"start":{"line":2719,"column":12},"end":{"line":2719,"column":12}}]},"53":{"line":2737,"type":"if","locations":[{"start":{"line":2737,"column":12},"end":{"line":2737,"column":12}},{"start":{"line":2737,"column":12},"end":{"line":2737,"column":12}}]},"54":{"line":2755,"type":"if","locations":[{"start":{"line":2755,"column":12},"end":{"line":2755,"column":12}},{"start":{"line":2755,"column":12},"end":{"line":2755,"column":12}}]},"55":{"line":2842,"type":"if","locations":[{"start":{"line":2842,"column":12},"end":{"line":2842,"column":12}},{"start":{"line":2842,"column":12},"end":{"line":2842,"column":12}}]},"56":{"line":2866,"type":"if","locations":[{"start":{"line":2866,"column":16},"end":{"line":2866,"column":16}},{"start":{"line":2866,"column":16},"end":{"line":2866,"column":16}}]},"57":{"line":2866,"type":"binary-expr","locations":[{"start":{"line":2866,"column":20},"end":{"line":2866,"column":41}},{"start":{"line":2866,"column":45},"end":{"line":2866,"column":66}}]},"58":{"line":2877,"type":"if","locations":[{"start":{"line":2877,"column":12},"end":{"line":2877,"column":12}},{"start":{"line":2877,"column":12},"end":{"line":2877,"column":12}}]},"59":{"line":2894,"type":"if","locations":[{"start":{"line":2894,"column":12},"end":{"line":2894,"column":12}},{"start":{"line":2894,"column":12},"end":{"line":2894,"column":12}}]},"60":{"line":2898,"type":"if","locations":[{"start":{"line":2898,"column":16},"end":{"line":2898,"column":16}},{"start":{"line":2898,"column":16},"end":{"line":2898,"column":16}}]},"61":{"line":2919,"type":"if","locations":[{"start":{"line":2919,"column":12},"end":{"line":2919,"column":12}},{"start":{"line":2919,"column":12},"end":{"line":2919,"column":12}}]},"62":{"line":2922,"type":"if","locations":[{"start":{"line":2922,"column":16},"end":{"line":2922,"column":16}},{"start":{"line":2922,"column":16},"end":{"line":2922,"column":16}}]},"63":{"line":3056,"type":"binary-expr","locations":[{"start":{"line":3056,"column":23},"end":{"line":3056,"column":44}},{"start":{"line":3056,"column":48},"end":{"line":3056,"column":66}}]},"64":{"line":3284,"type":"if","locations":[{"start":{"line":3284,"column":12},"end":{"line":3284,"column":12}},{"start":{"line":3284,"column":12},"end":{"line":3284,"column":12}}]},"65":{"line":3336,"type":"if","locations":[{"start":{"line":3336,"column":12},"end":{"line":3336,"column":12}},{"start":{"line":3336,"column":12},"end":{"line":3336,"column":12}}]},"66":{"line":3336,"type":"binary-expr","locations":[{"start":{"line":3336,"column":16},"end":{"line":3336,"column":39}},{"start":{"line":3336,"column":43},"end":{"line":3336,"column":63}},{"start":{"line":3336,"column":67},"end":{"line":3336,"column":86}},{"start":{"line":3336,"column":90},"end":{"line":3336,"column":107}}]},"67":{"line":3337,"type":"cond-expr","locations":[{"start":{"line":3337,"column":59},"end":{"line":3337,"column":69}},{"start":{"line":3337,"column":72},"end":{"line":3337,"column":85}}]},"68":{"line":3379,"type":"if","locations":[{"start":{"line":3379,"column":12},"end":{"line":3379,"column":12}},{"start":{"line":3379,"column":12},"end":{"line":3379,"column":12}}]},"69":{"line":3383,"type":"if","locations":[{"start":{"line":3383,"column":12},"end":{"line":3383,"column":12}},{"start":{"line":3383,"column":12},"end":{"line":3383,"column":12}}]},"70":{"line":3403,"type":"if","locations":[{"start":{"line":3403,"column":12},"end":{"line":3403,"column":12}},{"start":{"line":3403,"column":12},"end":{"line":3403,"column":12}}]}},"code":["(function () { YUI.add('aui-scheduler-base', function (A, NAME) {","","/**\r"," * The Scheduler Component\r"," *\r"," * @module aui-scheduler\r"," * @submodule aui-scheduler-base-event\r"," */\r","\r","var Lang = A.Lang,\r","    isBoolean = Lang.isBoolean,\r","    isFunction = Lang.isFunction,\r","    isNumber = Lang.isNumber,\r","    isObject = Lang.isObject,\r","    isString = Lang.isString,\r","    isValue = Lang.isValue,\r","\r","    Color = A.Color,\r","    DateMath = A.DataType.DateMath,\r","\r","    getUSDateFormat = function(date) {\r","        var format = ['%l'];\r","\r","        if (date.getMinutes() > 0) {\r","            format.push(':');\r","            format.push('%M');\r","        }\r","\r","        if (date.getHours() >= 12) {\r","            format.push('pm');\r","        }\r","\r","        return format.join('');\r","    },\r","\r","    getCN = A.getClassName,\r","\r","    CSS_ICON = getCN('glyphicon'),\r","    CSS_SCHEDULER_EVENT = getCN('scheduler-event'),\r","    CSS_SCHEDULER_EVENT_ALL_DAY = getCN('scheduler-event', 'all', 'day'),\r","    CSS_SCHEDULER_EVENT_CONTENT = getCN('scheduler-event', 'content'),\r","    CSS_SCHEDULER_EVENT_DISABLED = getCN('scheduler-event', 'disabled'),\r","    CSS_SCHEDULER_EVENT_HIDDEN = getCN('scheduler-event', 'hidden'),\r","    CSS_SCHEDULER_EVENT_ICON_DISABLED = getCN('scheduler-event', 'icon', 'disabled'),\r","    CSS_SCHEDULER_EVENT_ICON_MEETING = getCN('scheduler-event', 'icon', 'meeting'),\r","    CSS_SCHEDULER_EVENT_ICON_REMINDER = getCN('scheduler-event', 'icon', 'reminder'),\r","    CSS_SCHEDULER_EVENT_ICON_REPEATED = getCN('scheduler-event', 'icon', 'repeated'),\r","    CSS_SCHEDULER_EVENT_ICONS = getCN('scheduler-event', 'icons'),\r","    CSS_SCHEDULER_EVENT_MEETING = getCN('scheduler-event', 'meeting'),\r","    CSS_SCHEDULER_EVENT_PAST = getCN('scheduler-event', 'past'),\r","    CSS_SCHEDULER_EVENT_REMINDER = getCN('scheduler-event', 'reminder'),\r","    CSS_SCHEDULER_EVENT_REPEATED = getCN('scheduler-event', 'repeated'),\r","    CSS_SCHEDULER_EVENT_SHORT = getCN('scheduler-event', 'short'),\r","    CSS_SCHEDULER_EVENT_TITLE = getCN('scheduler-event', 'title'),\r","\r","    TPL_HTML_OPEN_SPAN = '<span>',\r","    TPL_HTML_CLOSE_SPAN = '</span>';\r","\r","/**\r"," * A base class for `SchedulerEvent`.\r"," *\r"," * @class A.SchedulerEvent\r"," * @extends Model\r"," * @param {Object} config Object literal specifying widget configuration properties.\r"," * @constructor\r"," */\r","var SchedulerEvent = A.Component.create({\r","\r","    /**\r","     * Static property provides a string to identify the class.\r","     *\r","     * @property NAME\r","     * @type {String}\r","     * @static\r","     */\r","    NAME: 'scheduler-event',\r","\r","    /**\r","     * Static property used to define the default attribute\r","     * configuration for the `SchedulerEvent`.\r","     *\r","     * @property ATTRS\r","     * @type {Object}\r","     * @static\r","     */\r","    ATTRS: {\r","\r","        /**\r","         * Determines whether a new event will take place all day. When enabled,\r","         * the event will not contain 24-hour clock date inputs.\r","         *\r","         * @attribute allDay\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        allDay: {\r","            setter: A.DataType.Boolean.parse,\r","            value: false\r","        },\r","\r","        /**\r","         * Determines the CSS border color of a calendar event.\r","         *\r","         * @attribute borderColor\r","         * @default '#FFFFFF'\r","         * @type String\r","         */\r","        borderColor: {\r","            value: '#FFFFFF',\r","            validator: isString\r","        },\r","\r","        /**\r","         * Determines the CSS border style of a calendar event.\r","         *\r","         * @attribute borderStyle\r","         * @default 'solid'\r","         * @type String\r","         */\r","        borderStyle: {\r","            value: 'solid',\r","            validator: isString\r","        },\r","\r","        /**\r","         * Determines the CSS border width of a calendar event.\r","         *\r","         * @attribute borderWidth\r","         * @default '2px'\r","         * @type String\r","         */\r","        borderWidth: {\r","            value: '2px',\r","            validator: isString\r","        },\r","\r","        /**\r","         * Contains the content of Scheduler event's body section.\r","         *\r","         * @attribute content\r","         */\r","        content: {\r","            setter: String,\r","            validator: isValue\r","        },\r","\r","        /**\r","         * Contains the `color` of a calendar event.\r","         *\r","         * @attribute color\r","         * @default '#D96666'\r","         * @type {String}\r","         */\r","        color: {\r","            lazyAdd: false,\r","            value: '#376cd9',\r","            validator: isString\r","        },\r","\r","        /**\r","         * Contains the color brightness factor is applied to the `color`\r","         * attribute.\r","         *\r","         * @attribute colorBrightnessFactor\r","         * @default 1.4\r","         * @type {Number}\r","         */\r","        colorBrightnessFactor: {\r","            value: 1.4,\r","            validator: isNumber\r","        },\r","\r","        /**\r","         * Contains the color saturation factor is applied to the `color`\r","         * attribute.\r","         *\r","         * @attribute colorSaturationFactor\r","         * @default 0.88\r","         * @type {Number}\r","         */\r","        colorSaturationFactor: {\r","            value: 0.88,\r","            validator: isNumber\r","        },\r","\r","        /**\r","         * Contains the formatted title date for this scheduler event, taking\r","         * into account ISO time. The value will not contain an `endDate` if\r","         * this event is `allDay`.\r","         *\r","         * @attribute titleDateFormat\r","         * @type {Object}\r","         */\r","        titleDateFormat: {\r","            getter: '_getTitleDateFormat',\r","            value: function() {\r","                var instance = this,\r","                    scheduler = instance.get('scheduler'),\r","                    isoTime = scheduler && scheduler.get('activeView').get('isoTime'),\r","\r","                    format = {\r","                        endDate: TPL_HTML_OPEN_SPAN + '&ndash;' + ' ' + '%H:%M' + TPL_HTML_CLOSE_SPAN,\r","                        startDate: '%H:%M'\r","                    };\r","\r","                if (!isoTime) {\r","                    format.endDate = TPL_HTML_OPEN_SPAN + '&ndash;' + ' ' + getUSDateFormat(instance.get('endDate')) +\r","                        TPL_HTML_CLOSE_SPAN;\r","                    format.startDate = getUSDateFormat(instance.get('startDate'));\r","                }\r","\r","                if (instance.getMinutesDuration() <= 30) {\r","                    delete format.endDate;\r","                }\r","                else if (instance.get('allDay')) {\r","                    format = {};\r","                }\r","\r","                return format;\r","            }\r","        },\r","\r","        /**\r","         * Contains the date corresponding to the current ending date of a\r","         * scheduled event. By default, the value is one hour after the\r","         * `startDate`.\r","         *\r","         * @attribute endDate\r","         * @type {Date}\r","         * @default Today's date as set on the user's computer.\r","         */\r","        endDate: {\r","            setter: '_setDate',\r","            valueFn: function() {\r","                var date = DateMath.clone(this.get('startDate'));\r","\r","                date.setHours(date.getHours() + 1);\r","\r","                return date;\r","            }\r","        },\r","\r","        /**\r","         * Determines if the event is disabled.\r","         *\r","         * @attribute disabled\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        disabled: {\r","            value: false,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Determines if the event is a meeting.\r","         *\r","         * @attribute meeting\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        meeting: {\r","            value: false,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Contains the event `NodeList`.\r","         *\r","         * @attribute node\r","         */\r","        node: {\r","            valueFn: function() {\r","                return A.NodeList.create(A.Node.create(this.EVENT_NODE_TEMPLATE).setData('scheduler-event', this));\r","            }\r","        },\r","\r","        /**\r","         * Determines if the event is requires reminder.\r","         *\r","         * @attribute reminder\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        reminder: {\r","            value: false,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Determines if the event is to be repeated.\r","         *\r","         * @attribute repeated\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        repeated: {\r","            value: false,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Contains this `SchedulerEvent`'s `SchedulerBase' object.\r","         *\r","         * @attribute scheduler\r","         * @type {A.SchedulerBase}\r","         */\r","        scheduler: {},\r","\r","        /**\r","         * Contains the date corresponding to the current starting date of a\r","         * scheduled event. By default, the value is the date set on the user's\r","         * computer.\r","         *\r","         * @attribute startDate\r","         * @type {Date}\r","         */\r","        startDate: {\r","            setter: '_setDate',\r","            valueFn: function() {\r","                return new Date();\r","            }\r","        },\r","\r","        /**\r","         * Indicates whether the event is visible.\r","         *\r","         * @attribute visible\r","         * @default true\r","         * @type {Boolean}\r","         */\r","        visible: {\r","            value: true,\r","            validator: isBoolean\r","        }\r","    },\r","\r","    /**\r","     * Static property used to define which component it extends.\r","     *\r","     * @property EXTENDS\r","     * @type {Object}\r","     * @static\r","     */\r","    EXTENDS: A.Model,\r","\r","    /**\r","     * Defines the propegate attribute keys for `Scheduler` events.\r","     *\r","     * @property PROPAGATE_ATTRS\r","     * @type {Array}\r","     * @static\r","     */\r","    PROPAGATE_ATTRS: ['allDay', 'startDate', 'endDate', 'content', 'color', 'colorBrightnessFactor',\r","        'colorSaturationFactor', 'titleDateFormat', 'visible', 'disabled'],\r","\r","    prototype: {\r","        EVENT_NODE_TEMPLATE: '<div class=\"' + CSS_SCHEDULER_EVENT + '\">' + '<div class=\"' +\r","            CSS_SCHEDULER_EVENT_TITLE +\r","            '\"></div>' + '<div class=\"' + CSS_SCHEDULER_EVENT_CONTENT + '\"></div>' +\r","            '<div class=\"' + CSS_SCHEDULER_EVENT_ICONS + '\">' + '<span class=\"' + [\r","            CSS_ICON, CSS_SCHEDULER_EVENT_ICON_DISABLED].join(' ') + '\"></span>' + '<span class=\"' + [CSS_ICON,\r","            CSS_SCHEDULER_EVENT_ICON_MEETING].join(' ') + '\"></span>' + '<span class=\"' + [CSS_ICON,\r","            CSS_SCHEDULER_EVENT_ICON_REMINDER].join(' ') + '\"></span>' + '<span class=\"' + [CSS_ICON,\r","            CSS_SCHEDULER_EVENT_ICON_REPEATED].join(' ') + '\"></span>' + '</div>' + '</div>',\r","\r","        /**\r","         * Construction logic executed during `SchedulerEvent` instantiation.\r","         * Lifecycle.\r","         *\r","         * @method initializer\r","         * @protected\r","         */\r","        initializer: function() {\r","            var instance = this;\r","\r","            instance.bindUI();\r","            instance.syncUI();\r","        },\r","\r","        /**\r","         * Binds the events on the `SchedulerEvent` UI. Lifecycle.\r","         *\r","         * @method bindUI\r","         * @protected\r","         */\r","        bindUI: function() {\r","            var instance = this;\r","\r","            instance.after({\r","                allDayChange: instance._afterAllDayChange,\r","                colorChange: instance._afterColorChange,\r","                disabledChange: instance._afterDisabledChange,\r","                endDateChange: instance._afterEndDateChange,\r","                meetingChange: instance._afterMeetingChange,\r","                reminderChange: instance._afterReminderChange,\r","                repeatedChange: instance._afterRepeatedChange,\r","                visibleChange: instance._afterVisibleChange\r","            });\r","        },\r","\r","        /**\r","         * Syncs the `SchedulerEvent` UI. Lifecycle.\r","         *\r","         * @method syncUI\r","         * @protected\r","         */\r","        syncUI: function() {\r","            var instance = this;\r","\r","            instance._uiSetAllDay(\r","                instance.get('allDay'));\r","\r","            instance._uiSetColor(\r","                instance.get('color'));\r","\r","            instance._uiSetDisabled(\r","                instance.get('disabled'));\r","\r","            instance._uiSetEndDate(\r","                instance.get('endDate'));\r","\r","            instance._uiSetMeeting(\r","                instance.get('meeting'));\r","\r","            instance._uiSetPast(\r","                instance._isPastEvent());\r","\r","            instance._uiSetReminder(\r","                instance.get('reminder'));\r","\r","            instance._uiSetRepeated(\r","                instance.get('repeated'));\r","\r","            instance._uiSetVisible(\r","                instance.get('visible'));\r","\r","            instance.syncNodeTitleUI();\r","            instance.syncNodeContentUI();\r","        },\r","\r","        /**\r","         * Destructor lifecycle implementation for the `SchedulerEvent` class.\r","         * Removes the `node` from DOM.\r","         *\r","         * @method destroy\r","         * @protected\r","         */\r","        destroy: function() {\r","            var instance = this;\r","\r","            instance.get('node').remove(true);\r","        },\r","\r","        /**\r","         * Sometimes an event will require a padding node that mimics the\r","         * behavior of the scheduler `event`'s `node`. This can occur in the\r","         * week view when an event spans multiple days.\r","\r","         * For example, an event beginning at 10pm on January 1 and ending on\r","         * 3am January 2nd would require a padding node. The `event`'s `node`\r","         * appears from January 1 from 10:00pm to 11:59pm and the `paddingNode`\r","         * is rendered on the table from January 2 from 12:00am to 3:00am.\r","         *\r","         * @method addPaddingNode\r","         */\r","        addPaddingNode: function() {\r","            var instance = this;\r","\r","            instance.get('node').push(\r","                A.Node.create(instance.EVENT_NODE_TEMPLATE).setData('scheduler-event', instance));\r","\r","            instance.syncUI();\r","        },\r","\r","        /**\r","         * Clones the scheduler `event`.\r","         *\r","         * @method clone\r","         * @return {Object} Scheduler's event model\r","         */\r","        clone: function() {\r","            var instance = this,\r","                cloned = null,\r","                scheduler = instance.get('scheduler');\r","\r","            if (scheduler) {\r","                cloned = new scheduler.eventModel();\r","                cloned.copyPropagateAttrValues(instance, null, {\r","                    silent: true\r","                });\r","            }\r","\r","            return cloned;\r","        },\r","\r","        /**\r","         * Copies the dates from the `event` parameter to the instance `event`.\r","         *\r","         * @method copyDates\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @param {Object} options Zero or more options.\r","         */\r","        copyDates: function(evt, options) {\r","            var instance = this;\r","\r","            instance.setAttrs({\r","                    endDate: DateMath.clone(evt.get('endDate')),\r","                    startDate: DateMath.clone(evt.get('startDate'))\r","                },\r","                options);\r","        },\r","\r","        /**\r","         * Copies the propagate attribute vales from an `event` to this `event`.\r","         *\r","         * @method copyPropagateAttrValues\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @param {Boolean} dontCopyMap\r","         * @param {Object} options Zero or more options.\r","         */\r","        copyPropagateAttrValues: function(evt, dontCopyMap, options) {\r","            var instance = this,\r","                attrMap = {};\r","\r","            instance.copyDates(evt, options);\r","\r","            A.Array.each(instance.constructor.PROPAGATE_ATTRS, function(attrName) {\r","                if (!((dontCopyMap || {}).hasOwnProperty(attrName))) {\r","                    var value = evt.get(attrName);\r","\r","                    if (!isObject(value)) {\r","                        attrMap[attrName] = value;\r","                    }\r","                }\r","            });\r","\r","            instance.setAttrs(attrMap, options);\r","        },\r","\r","        /**\r","         * Gets the number of days an `event` is scheduled to take place.\r","         *\r","         * @method getDaysDuration\r","         * @return {Number}\r","         */\r","        getDaysDuration: function() {\r","            var instance = this;\r","\r","            return DateMath.getDayOffset(\r","                instance.get('endDate'), instance.get('startDate'));\r","        },\r","\r","        /**\r","         * Gets the number of hours an `event` is scheduled to take place.\r","         *\r","         * @method getHoursDuration\r","         * @return {Number}\r","         */\r","        getHoursDuration: function() {\r","            var instance = this;\r","\r","            return DateMath.getHoursOffset(\r","                instance.get('endDate'), instance.get('startDate'));\r","        },\r","\r","        /**\r","         * Gets the number of minutes an `event` is scheduled to take place.\r","         *\r","         * @method getMinutesDuration\r","         * @return {Number}\r","         */\r","        getMinutesDuration: function() {\r","            var instance = this;\r","\r","            return DateMath.getMinutesOffset(\r","                instance.get('endDate'), instance.get('startDate'));\r","        },\r","\r","        /**\r","         * Gets the number of seconds an `event` is scheduled to take place.\r","         *\r","         * @method getSecondsDuration\r","         * @return {Number}\r","         */\r","        getSecondsDuration: function() {\r","            var instance = this;\r","\r","            return DateMath.getSecondsOffset(\r","                instance.get('endDate'), instance.get('startDate'));\r","        },\r","\r","        /**\r","         * Determines if an `event`'s end date is this same as this `event`.\r","         *\r","         * @method sameEndDate\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @return {Boolean}\r","         */\r","        sameEndDate: function(evt) {\r","            var instance = this;\r","\r","            return DateMath.compare(instance.get('endDate'), evt.get('endDate'));\r","        },\r","\r","        /**\r","         * Determines if an `event`'s start date is this same as this `event`.\r","         *\r","         * @method sameStartDate\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @return {Boolean}\r","         */\r","        sameStartDate: function(evt) {\r","            var instance = this;\r","\r","            return DateMath.compare(\r","                instance.get('startDate'), evt.get('startDate'));\r","        },\r","\r","        /**\r","         * Determines if an `event` is after this `event`.\r","         *\r","         * @method isAfter\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @return {Boolean}\r","         */\r","        isAfter: function(evt) {\r","            var instance = this;\r","            var startDate = instance.get('startDate');\r","            var evtStartDate = evt.get('startDate');\r","\r","            return DateMath.after(startDate, evtStartDate);\r","        },\r","\r","        /**\r","         * Determines if an `event` is before this `event`.\r","         *\r","         * @method isBefore\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @return {Boolean}\r","         */\r","        isBefore: function(evt) {\r","            var instance = this;\r","            var startDate = instance.get('startDate');\r","            var evtStartDate = evt.get('startDate');\r","\r","            return DateMath.before(startDate, evtStartDate);\r","        },\r","\r","        /**\r","         * Determines if an `event` interescts with this `event`.\r","         *\r","         * @method intersects\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @return {Boolean}\r","         */\r","        intersects: function(evt) {\r","            var instance = this;\r","            var endDate = instance.get('endDate');\r","            var startDate = instance.get('startDate');\r","            var evtStartDate = evt.get('startDate');\r","\r","            return (instance.sameStartDate(evt) ||\r","                DateMath.between(evtStartDate, startDate, endDate));\r","        },\r","\r","        /**\r","         * Determines if an `event`'s hours' interescts with this `event`'s\r","         * hours.\r","         *\r","         * @method intersectHours\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         * @return {Boolean}\r","         */\r","        intersectHours: function(evt) {\r","            var instance = this;\r","            var endDate = instance.get('endDate');\r","            var startDate = instance.get('startDate');\r","            var evtModifiedStartDate = DateMath.clone(startDate);\r","\r","            DateMath.copyHours(evtModifiedStartDate, evt.get('startDate'));\r","\r","            return (DateMath.compare(startDate, evtModifiedStartDate) ||\r","                DateMath.between(evtModifiedStartDate, startDate, endDate));\r","        },\r","\r","        /**\r","         * Determines if a this `event` starts or ends at the beginning or end\r","         * of a day.\r","         *\r","         * @method isDayBoundaryEvent\r","         * @return {Boolean}\r","         */\r","        isDayBoundaryEvent: function() {\r","            var instance = this;\r","\r","            return DateMath.isDayBoundary(\r","                instance.get('startDate'), instance.get('endDate'));\r","        },\r","\r","        /**\r","         * Checks if the passed date is between `startDate` and `endDate`.\r","         *\r","         * @method isDayOverlapEvent\r","         * @return {Boolean}\r","         */\r","        isDayOverlapEvent: function() {\r","            var instance = this;\r","\r","            return DateMath.isDayOverlap(\r","                instance.get('startDate'), instance.get('endDate'));\r","        },\r","\r","        /**\r","         * Clears the time fields from the `endDate`, effectively setting the\r","         * time to 12 noon.\r","         *\r","         * @method getClearEndDate\r","         * @return {Date}\r","         */\r","        getClearEndDate: function() {\r","            var instance = this;\r","\r","            return DateMath.safeClearTime(instance.get('endDate'));\r","        },\r","\r","        /**\r","         * Clears the time fields from the `startDate`, effectively setting the\r","         * time to 12 noon.\r","         *\r","         * @method getClearStartDate\r","         * @return {Date}\r","         */\r","        getClearStartDate: function() {\r","            var instance = this;\r","\r","            return DateMath.safeClearTime(instance.get('startDate'));\r","        },\r","\r","        /**\r","         * Moves this Scheduler event to a new date specified by the date\r","         * parameter.\r","         *\r","         * @method move\r","         * @param {Date} date\r","         * @param {Object} options Zero or more options.\r","         */\r","        move: function(date, options) {\r","            var instance = this;\r","            var duration = instance.getMinutesDuration();\r","\r","            instance.setAttrs({\r","                    endDate: DateMath.add(DateMath.clone(date), DateMath.MINUTES, duration),\r","                    startDate: date\r","                },\r","                options);\r","        },\r","\r","        /**\r","         * Replaces each node's current content with the `content`.\r","         *\r","         * @method setContent\r","         * @param content\r","         */\r","        setContent: function(content) {\r","            var instance = this;\r","\r","            instance.get('node').each(function(node) {\r","                var contentNode = node.one('.' + CSS_SCHEDULER_EVENT_CONTENT);\r","\r","                contentNode.setContent(content);\r","            });\r","        },\r","\r","        /**\r","         * Replaces each node's current title with the `content`.\r","         *\r","         * @method setTitle\r","         * @param content\r","         */\r","        setTitle: function(content) {\r","            var instance = this;\r","\r","            instance.get('node').each(function(node) {\r","                var titleNode = node.one('.' + CSS_SCHEDULER_EVENT_TITLE);\r","\r","                titleNode.setContent(content);\r","            });\r","        },\r","\r","        /**\r","         * Sets the content of the Scheduler event to the content attribute\r","         * value.\r","         *\r","         * @method syncNodeContentUI\r","         */\r","        syncNodeContentUI: function() {\r","            var instance = this;\r","\r","            instance.setContent(instance.get('content'));\r","        },\r","\r","        /**\r","         * Sets the title of the Scheduler event to the a formated date.\r","         * @method syncNodeTitleUI\r","         */\r","        syncNodeTitleUI: function() {\r","            var instance = this,\r","                format = instance.get('titleDateFormat'),\r","                startDate = instance.get('startDate'),\r","                endDate = instance.get('endDate'),\r","                title = [];\r","\r","            if (format.startDate) {\r","                title.push(instance._formatDate(startDate, format.startDate));\r","            }\r","\r","            if (format.endDate) {\r","                title.push(instance._formatDate(endDate, format.endDate));\r","            }\r","\r","            instance.setTitle(title.join(''));\r","        },\r","\r","        /**\r","         * Splits an event into multiple days. Since an event can span across\r","         * multiple days in the week view, this event will be split into chunks\r","         * for each day column.\r","         *\r","         * @method split\r","         * @return {Array}\r","         */\r","        split: function() {\r","            var instance = this,\r","                s1 = DateMath.clone(instance.get('startDate')),\r","                e1 = DateMath.clone(instance.get('endDate'));\r","\r","            if (instance.isDayOverlapEvent() && !instance.isDayBoundaryEvent()) {\r","                var s2 = DateMath.clone(s1);\r","                s2.setHours(24, 0, 0, 0);\r","\r","                return [[s1, DateMath.toMidnight(DateMath.clone(s1))], [s2, DateMath.clone(e1)]];\r","            }\r","\r","            return [[s1, e1]];\r","        },\r","\r","        /**\r","         * Handles `allDay` events.\r","         *\r","         * @method _afterAllDayChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterAllDayChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetAllDay(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `color` events.\r","         *\r","         * @method _afterColorChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterColorChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetColor(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `disabled` events.\r","         *\r","         * @method _afterDisabledChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterDisabledChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetDisabled(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `endDate` events.\r","         *\r","         * @method _afterEndDateChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterEndDateChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetEndDate(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `meeting` events.\r","         *\r","         * @method _afterMeetingChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterMeetingChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetMeeting(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `reminder` events.\r","         *\r","         * @method _afterReminderChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterReminderChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetReminder(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `repeated` events.\r","         *\r","         * @method _afterRepeatedChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterRepeatedChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetRepeated(event.newVal);\r","        },\r","\r","        /**\r","         * Handles `visible` events.\r","         *\r","         * @method _afterVisibleChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterVisibleChange: function(event) {\r","            var instance = this;\r","\r","            instance._uiSetVisible(event.newVal);\r","        },\r","\r","        /**\r","         * Returns `true` if the event ends before the current date.\r","         *\r","         * @method _isPastEvent\r","         * @protected\r","         * @return {Boolean}\r","         */\r","        _isPastEvent: function() {\r","            var instance = this,\r","                endDate = instance.get('endDate');\r","\r","            return (endDate.getTime() < (new Date()).getTime());\r","        },\r","\r","        /**\r","         * Sets the date to the given value.\r","         *\r","         * @method _setDate\r","         * @param {Date | Number} val The value of the property.\r","         * @protected\r","         */\r","        _setDate: function(val) {\r","            if (isNumber(val)) {\r","                val = new Date(val);\r","            }\r","\r","            return val;\r","        },\r","\r","        /**\r","         * Formats the given date with the given format.\r","         *\r","         * @method _formatDate\r","         * @param {Date} date\r","         * @param format\r","         * @protected\r","         */\r","        _formatDate: function(date, format) {\r","            var instance = this;\r","            var locale = instance.get('locale');\r","\r","            return A.DataType.Date.format(date, {\r","                format: format,\r","                locale: locale\r","            });\r","        },\r","\r","        /**\r","         * Returns the format for the title date.\r","         *\r","         * @method _getTitleDateFormat\r","         * @param {String|Function} val\r","         * @return {Object|Function}\r","         * @protected\r","         */\r","        _getTitleDateFormat: function(val) {\r","            var instance = this;\r","\r","            if (isString(val)) {\r","                val = {\r","                    endDate: val,\r","                    startDate: val\r","                };\r","            }\r","            else if (isFunction(val)) {\r","                val = val.call(instance);\r","            }\r","\r","            return val;\r","        },\r","\r","        /**\r","         * Sets `allDay` on the UI.\r","         *\r","         * @method _uiSetAllDay\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetAllDay: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_ALL_DAY, !! val);\r","        },\r","\r","        /**\r","         * Sets `color` on the UI.\r","         *\r","         * @method _uiSetColor\r","         * @param {String} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetColor: function(val) {\r","            var instance = this;\r","            var node = instance.get('node');\r","\r","            var color = Color.toHSL(val);\r","            var backgroundColor = Color.toArray(color);\r","\r","            backgroundColor[1] *= instance.get('colorSaturationFactor');\r","            backgroundColor[2] *= instance.get('colorBrightnessFactor');\r","            backgroundColor = Color.fromArray(backgroundColor, Color.TYPES.HSL);\r","\r","            // Some browsers doesn't support HSL colors, convert to RGB for\r","            // compatibility.\r","            color = Color.toRGB(color);\r","            backgroundColor = Color.toRGB(backgroundColor);\r","\r","            if (node) {\r","                node.setStyles({\r","                    backgroundColor: backgroundColor,\r","                    borderColor: instance.get('borderColor'),\r","                    borderStyle: instance.get('borderStyle'),\r","                    borderWidth: instance.get('borderWidth'),\r","                    color: color\r","                });\r","            }\r","        },\r","\r","        /**\r","         * Sets `disabled` on the UI.\r","         *\r","         * @method _uiSetDisabled\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetDisabled: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_DISABLED, !! val);\r","        },\r","\r","        /**\r","         * Sets `endDate` on the UI.\r","         *\r","         * @method _uiSetEndDate\r","         * @protected\r","         */\r","        _uiSetEndDate: function() {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_SHORT, instance.getMinutesDuration() <= 30);\r","        },\r","\r","        /**\r","         * Sets `meeting` on the UI.\r","         *\r","         * @method _uiSetMeeting\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetMeeting: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_MEETING, !! val);\r","        },\r","\r","        /**\r","         * Sets `past` on the UI.\r","         *\r","         * @method _uiSetPast\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetPast: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_PAST, !! val);\r","        },\r","\r","        /**\r","         * Sets `reminder` on the UI.\r","         *\r","         * @method _uiSetReminder\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetReminder: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_REMINDER, !! val);\r","        },\r","\r","        /**\r","         * Sets `repeated` on the UI.\r","         *\r","         * @method _uiSetRepeated\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetRepeated: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_REPEATED, !! val);\r","        },\r","\r","        /**\r","         * Sets `visible` on the UI.\r","         *\r","         * @method _uiSetVisible\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetVisible: function(val) {\r","            var instance = this;\r","\r","            instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_HIDDEN, !val);\r","        }\r","    }\r","});\r","\r","A.SchedulerEvent = SchedulerEvent;\r","/**\r"," * The Scheduler Component\r"," *\r"," * @module aui-scheduler\r"," * @submodule aui-scheduler-base-calendar\r"," */\r","\r","var Lang = A.Lang,\r","    isArray = Lang.isArray,\r","    isBoolean = Lang.isBoolean,\r","    isString = Lang.isString;\r","\r","/**\r"," * A base class for `SchedulerCalendar`.\r"," *\r"," * @class A.SchedulerCalendar\r"," * @extends ModelList\r"," * @param {Object} config Object literal specifying widget configuration\r"," *     properties.\r"," * @constructor\r"," */\r","var SchedulerCalendar = A.Base.create('scheduler-calendar', A.ModelList, [], {\r","    model: A.SchedulerEvent,\r","\r","    /**\r","     * Construction logic executed during `SchedulerCalendar` instantiation.\r","     * Lifecycle.\r","     *\r","     * @method initializer\r","     * @protected\r","     */\r","    initializer: function() {\r","        var instance = this;\r","\r","        instance.after('colorChange', instance._afterColorChange);\r","        instance.after('disabledChange', instance._afterDisabledChange);\r","        instance.after('visibleChange', instance._afterVisibleChange);\r","        instance.after(['add', 'remove', 'reset'], instance._afterEventsChange);\r","        instance.on(['remove', 'reset'], instance._onRemoveEvents);\r","\r","        instance._uiSetEvents(\r","            instance.toArray()\r","        );\r","\r","        instance._setModelsAttrs({\r","            color: instance.get('color'),\r","            disabled: instance.get('disabled'),\r","            visible: instance.get('visible')\r","        });\r","    },\r","\r","    /**\r","     * Handles `color` events.\r","     *\r","     * @method _afterColorChange\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _afterColorChange: function(event) {\r","        var instance = this;\r","\r","        instance._setModelsAttrs({\r","            color: instance.get('color')\r","        }, {\r","            silent: event.silent\r","        });\r","    },\r","\r","    /**\r","     * Handles `disabled` events.\r","     *\r","     * @method _afterDisabledChange\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _afterDisabledChange: function(event) {\r","        var instance = this;\r","\r","        instance._setModelsAttrs({\r","            disabled: instance.get('disabled')\r","        }, {\r","            silent: event.silent\r","        });\r","    },\r","\r","    /**\r","     * Handles `events` events.\r","     *\r","     * @method _afterEventsChange\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _afterEventsChange: function(event) {\r","        var instance = this;\r","\r","        instance._setModelsAttrs({\r","            color: instance.get('color'),\r","            disabled: instance.get('disabled'),\r","            visible: instance.get('visible')\r","        }, {\r","            silent: true\r","        });\r","\r","        instance._uiSetEvents(instance.toArray(), event.skipSyncUI);\r","    },\r","\r","    /**\r","     * Handles `visible` events.\r","     *\r","     * @method _afterVisibleChange\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _afterVisibleChange: function(event) {\r","        var instance = this;\r","\r","        instance._setModelsAttrs({\r","            visible: instance.get('visible')\r","        }, {\r","            silent: event.silent\r","        });\r","    },\r","\r","    /**\r","     * Handles `remove` events.\r","     *\r","     * @method _onRemoveEvents\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _onRemoveEvents: function() {\r","        var instance = this;\r","        var scheduler = instance.get('scheduler');\r","\r","        if (scheduler) {\r","            scheduler.removeEvents(instance);\r","        }\r","    },\r","\r","    /**\r","     * Sets the model attributes for the base calendar.\r","     *\r","     * @method _setModelsAttrs\r","     * @param {Object} attrMap\r","     * @param {Object} options Zero or more options.\r","     * @protected\r","     */\r","    _setModelsAttrs: function(attrMap, options) {\r","        var instance = this;\r","\r","        instance.each(function(schedulerEvent) {\r","            schedulerEvent.setAttrs(attrMap, options);\r","        });\r","    },\r","\r","    /**\r","     * Sets the `events` on the UI.\r","     *\r","     * @method _uiSetEvents\r","     * @param {Array | ModelList | Model | SchedulerEvent} val The value of the\r","     *     property.\r","     * @protected\r","     */\r","    _uiSetEvents: function(val, skipSyncUI) {\r","        var instance = this;\r","        var scheduler = instance.get('scheduler');\r","\r","        if (scheduler) {\r","            scheduler.addEvents(val);\r","\r","            if(!skipSyncUI) {\r","                scheduler.syncEventsUI();\r","            }\r","        }\r","    }\r","}, {\r","\r","    /**\r","     * Static property used to define the default attribute\r","     * configuration for the `SchedulerCalendar`.\r","     *\r","     * @property ATTRS\r","     * @type {Object}\r","     * @static\r","     */\r","    ATTRS: {\r","\r","        /**\r","         * Contains the `color` of the scheduler calendar.\r","         *\r","         * @attribute color\r","         * @type {String}\r","         */\r","        color: {\r","            valueFn: function() {\r","                var instance = this;\r","                var palette = instance.get('palette');\r","                var randomIndex = Math.ceil(Math.random() * palette.length) - 1;\r","\r","                return palette[randomIndex];\r","            },\r","            validator: isString\r","        },\r","\r","        /**\r","         * Determines if the calender is enabled.\r","         *\r","         * @attribute disabled\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        disabled: {\r","            value: false,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Determines the name for this calendar.\r","         *\r","         * @attribute name\r","         * @default '(no name)'\r","         * @type {String}\r","         */\r","        name: {\r","            value: '(no name)',\r","            validator: isString\r","        },\r","\r","        /**\r","         * Contains a list of colors for the calendar.\r","         *\r","         * @attribute palette\r","         * @type {Array}\r","         */\r","        palette: {\r","            value: ['#d93636', '#e63973', '#b22eb3', '#6e36d9', '#2d70b3', '#376cd9', '#25998c', '#249960',\r","                '#24992e', '#6b9926', '#999926', '#a68f29', '#b3782d', '#bf6030', '#bf6060', '#997399', '#617181',\r","                '#6b7a99', '#548c85', '#747446', '#997e5c', '#b34d1b', '#993d48', '#802d70'],\r","            validator: isArray\r","        },\r","\r","        /**\r","         * Contains this `SchedulerCalendar`'s `SchedulerBase' object.\r","         *\r","         * @attribute scheduler\r","         * @type {A.SchedulerBase}\r","         */\r","        scheduler: {},\r","\r","        /**\r","         * Indicates whether the calendar is visible.\r","         *\r","         * @attribute visible\r","         * @default true\r","         * @type {Boolean}\r","         */\r","        visible: {\r","            value: true,\r","            validator: isBoolean\r","        }\r","    }\r","});\r","\r","A.SchedulerCalendar = SchedulerCalendar;\r","/**\r"," * The Scheduler Component\r"," *\r"," * @module aui-scheduler\r"," * @submodule aui-scheduler-base\r"," */\r","\r","var CSS_SCHEDULER_VIEW_ = A.getClassName('scheduler-base', 'view', ''),\r","    CSS_SCHEDULER_VIEW_SELECTED = A.getClassName('active'),\r","\r","    DateMath = A.DataType.DateMath,\r","    Lang = A.Lang,\r","    isArray = Lang.isArray,\r","    isBoolean = Lang.isBoolean,\r","    isDate = Lang.isDate,\r","    isFunction = Lang.isFunction,\r","    isNumber = Lang.isNumber,\r","    WidgetStdMod = A.WidgetStdMod,\r","\r","    isModelList = function(val) {\r","        return val instanceof A.ModelList;\r","    },\r","\r","    isSchedulerView = function(val) {\r","        return val instanceof A.SchedulerView;\r","    },\r","\r","    getCN = A.getClassName,\r","\r","    CSS_SCHEDULER_NAV = getCN('scheduler-base', 'nav'),\r","    CSS_SCHEDULER_NAV_DATE = getCN('scheduler-base', 'nav', 'date'),\r","    CSS_SCHEDULER_CONTROLS = getCN('scheduler-base', 'controls'),\r","    CSS_SCHEDULER_HD = getCN('scheduler-base', 'hd'),\r","    CSS_SCHEDULER_ICON_NEXT = getCN('scheduler-base', 'icon', 'next'),\r","    CSS_SCHEDULER_ICON_PREV = getCN('scheduler-base', 'icon', 'prev'),\r","    CSS_SCHEDULER_TODAY = getCN('scheduler-base', 'today'),\r","    CSS_SCHEDULER_VIEW = getCN('scheduler-base', 'view'),\r","    CSS_SCHEDULER_VIEW_ = getCN('scheduler-base', 'view', ''),\r","    CSS_SCHEDULER_VIEW_DATE = getCN('scheduler-base', 'view', 'date'),\r","    CSS_BTN = getCN('btn'),\r","    CSS_BTN_DEFAULT = getCN('btn', 'default'),\r","    CSS_ICON = getCN('glyphicon'),\r","    CSS_ICON_CHEVRON_RIGHT = getCN('glyphicon', 'chevron', 'right'),\r","    CSS_ICON_CHEVRON_LEFT = getCN('glyphicon', 'chevron', 'left'),\r","    CSS_SCHEDULER_VIEWS = getCN('scheduler-base', 'views'),\r","\r","    TPL_SCHEDULER_CONTROLS = '<div class=\"col-xs-7 ' + CSS_SCHEDULER_CONTROLS + '\"></div>',\r","    TPL_SCHEDULER_HD = '<div class=\"row ' + CSS_SCHEDULER_HD + '\"></div>',\r","    TPL_SCHEDULER_ICON_NEXT = '<button aria-label=\"{ariaLabel}\"\" role=\"button\" type=\"button\" class=\"' + [CSS_SCHEDULER_ICON_NEXT, CSS_BTN,\r","        CSS_BTN_DEFAULT].join(' ') + '\"><span class=\"' + [CSS_ICON, CSS_ICON_CHEVRON_RIGHT].join(' ') + '\"></span></button>',\r","    TPL_SCHEDULER_ICON_PREV = '<button aria-label=\"{ariaLabel}\"\" role=\"button\" type=\"button\" class=\"' + [CSS_SCHEDULER_ICON_PREV, CSS_BTN,\r","        CSS_BTN_DEFAULT].join(' ') + '\"><span class=\"' + [CSS_ICON, CSS_ICON_CHEVRON_LEFT].join(' ') + '\"></span></button>',\r","    TPL_SCHEDULER_NAV = '<div class=\"btn-group\"></div>',\r","    TPL_SCHEDULER_NAV_DATE = '<div class=\"' + CSS_SCHEDULER_NAV_DATE + ' hidden-xs\"></div>',\r","    TPL_SCHEDULER_TODAY = '<button aria-label=\"{ariaLabel}\" role=\"button\" type=\"button\" class=\"' +\r","        [CSS_SCHEDULER_TODAY, CSS_BTN, CSS_BTN_DEFAULT].join(' ') + '\">{today}</button>',\r","    TPL_SCHEDULER_VIEW_BUTTON = '<button aria-label=\"{ariaLabel}\" aria-pressed=\"false\" type=\"button\" class=\"hidden-xs ' +\r","        [CSS_SCHEDULER_VIEW, CSS_SCHEDULER_VIEW_].join(' ') + '{name}\" data-view-name=\"{name}\">{label}</button>',\r","    TPL_SCHEDULER_VIEW_LIST = '<option aria-label=\"{ariaLabel}\" aria-pressed=\"false\" class=\"' +\r","        [CSS_SCHEDULER_VIEW, CSS_SCHEDULER_VIEW_].join(' ') + '{name}\" data-view-name=\"{name}\">{label}</option>',\r","    TPL_SCHEDULER_VIEW_DATE = '<div class=\"' + CSS_SCHEDULER_VIEW_DATE + ' visible-xs\"></div>',\r","    TPL_SCHEDULER_VIEWS = '<div class=\"col-xs-5 form-inline ' + CSS_SCHEDULER_VIEWS + '\"></div>',\r","    TPL_SCHEDULER_VIEWS_SELECT = '<select class=\"form-control visible-xs\"></select>';\r","\r","/**\r"," * A base class for `SchedulerEvents`.\r"," *\r"," * @class A.SchedulerEvents\r"," * @extends ModelList\r"," * @param {Object} config Object literal specifying widget configuration\r"," *     properties.\r"," * @constructor\r"," */\r","A.SchedulerEvents = A.Base.create('scheduler-events', A.ModelList, [], {\r","    /**\r","     * Constructor for the `A.SchedulerEvents`. Lifecycle.\r","     *\r","     * @method initializer\r","     * @protected\r","     */\r","    initializer: function() {\r","        this._remainingItems = this.get('originalItems');\r","\r","        this.after('originalItemsChange', this._afterOriginalItemsChange);\r","        this.get('scheduler').on('plotViewEvents', A.bind(this._onPlotViewEvents, this));\r","    },\r","\r","    /**\r","     * Compares the inputs of a start and end date to see if adding `1` to the\r","     * start date time is larger than the difference between start and end date\r","     * times.\r","     *\r","     * @method comparator\r","     * @param {Object} model\r","     * @return {Number}\r","     */\r","    comparator: function(model) {\r","        var startDateTime = model.get('startDate'),\r","            endDateTime = model.get('endDate');\r","\r","        return startDateTime + 1 / (endDateTime - startDateTime);\r","    },\r","\r","    /**\r","     * Fired after the `originalItems` attribute changes.\r","     *\r","     * @method _afterOriginalItemsChange\r","     * @protected\r","     */\r","    _afterOriginalItemsChange: function() {\r","        this._remainingItems = this.get('originalItems');\r","        this.remove(this.toArray());\r","        this._updateEventsForView();\r","    },\r","\r","    /**\r","     * Fired when the `plotViewEvents` event is triggered.\r","     *\r","     * @method _onPlotViewEvents\r","     * @protected\r","     */\r","    _onPlotViewEvents: function() {\r","        this._updateEventsForView();\r","    },\r","\r","    /**\r","     * Sets the `originalItems` attribute.\r","     *\r","     * @method _setOriginalItems\r","     * @param {Array} originalItems\r","     * @protected\r","     */\r","    _setOriginalItems: function(val) {\r","        var originalItems = [];\r","\r","        for (var i = 0; i < val.length; i++) {\r","            if (A.instanceOf(val[i], this.model)) {\r","                this.add(val[i]);\r","            }\r","            else {\r","                val[i].startDate = val[i].startDate || new Date();\r","                if (!val[i].endDate) {\r","                    val[i].endDate = DateMath.clone(val[i].startDate);\r","                    val[i].endDate.setHours(val[i].endDate.getHours() + 1);\r","                }\r","\r","                originalItems.push(val[i]);\r","            }\r","        }\r","\r","        return originalItems;\r","    },\r","\r","    /**\r","     * Adds the necessary events for the view to the model list.\r","     *\r","     * @method _updateEventsForView\r","     * @protected\r","     */\r","    _updateEventsForView: function() {\r","        var dateInterval,\r","            eventEndDate,\r","            eventStartDate,\r","            i,\r","            remainingItems = [],\r","            view = this.get('scheduler').get('activeView');\r","\r","        if (!view) {\r","            return;\r","        }\r","\r","        dateInterval = view.getDateInterval();\r","\r","        for (i = 0; i < this._remainingItems.length; i++) {\r","            eventStartDate = this._remainingItems[i].startDate;\r","            eventEndDate = this._remainingItems[i].endDate;\r","\r","            if ((!dateInterval.startDate || eventEndDate >= dateInterval.startDate) &&\r","                (!dateInterval.endDate || eventStartDate <= dateInterval.endDate)) {\r","                this.add(this._remainingItems[i]);\r","            }\r","            else {\r","                remainingItems.push(this._remainingItems[i]);\r","            }\r","        }\r","\r","        this._remainingItems = remainingItems;\r","    },\r","\r","    model: A.SchedulerEvent\r","}, {\r","\r","    /**\r","     * Static property used to define the default attribute\r","     * configuration for the `SchedulerEvents`.\r","     *\r","     * @property ATTRS\r","     * @type {Object}\r","     * @static\r","     */\r","    ATTRS: {\r","        /**\r","         * The original list of items.\r","         *\r","         * @attribute originalItems\r","         * @default []\r","         * @type {Array}\r","         */\r","        originalItems: {\r","            setter: '_setOriginalItems',\r","            validator: A.Lang.isArray,\r","            value: []\r","        },\r","\r","        scheduler: {}\r","    }\r","});\r","\r","/**\r"," * A base class for `SchedulerEventSupport`.\r"," *\r"," * @class A.SchedulerEventSupport\r"," * @param {Object} config Object literal specifying widget configuration\r"," *     properties.\r"," * @constructor\r"," */\r","var SchedulerEventSupport = function() {};\r","\r","/**\r"," * Static property used to define the default attribute\r"," * configuration for the `SchedulerEventSupport`.\r"," *\r"," * @property ATTRS\r"," * @type {Object}\r"," * @static\r"," */\r","SchedulerEventSupport.ATTRS = {};\r","\r","A.mix(SchedulerEventSupport.prototype, {\r","    calendarModel: A.SchedulerCalendar,\r","\r","    eventModel: A.SchedulerEvent,\r","\r","    eventsModel: A.SchedulerEvents,\r","\r","    /**\r","     * Construction logic executed during `SchedulerEventSupport` instantiation.\r","     * Lifecycle.\r","     *\r","     * @method initializer\r","     * @param config\r","     * @protected\r","     */\r","    initializer: function(config) {\r","        var instance = this,\r","            events = instance._toSchedulerEvents(config.items || config.events);\r","\r","        instance._events = new instance.eventsModel({\r","            after: {\r","                add: A.bind(instance._afterAddEvent, instance)\r","            },\r","            bubbleTargets: instance,\r","            originalItems: this.get('pagination') ? events : [],\r","            scheduler: instance\r","        });\r","\r","        if (!this.get('pagination')) {\r","            this._events.add(events);\r","        }\r","    },\r","\r","    /**\r","     * Adds and returns the collection of events for this `Scheduler`.\r","     *\r","     * @method addEvents\r","     * @param {Array | ModelList | Model | A.SchedulerEvent} models\r","     * @return {A.SchedulerEvents}\r","     */\r","    addEvents: function(models) {\r","        var instance = this,\r","            events = instance._toSchedulerEvents(models);\r","\r","        return instance._events.add(events);\r","    },\r","\r","    /**\r","     * Applies a `function` to the collection of `Scheduler` events.\r","     *\r","     * @method eachEvent\r","     * @param {Function} fn\r","     * @return {A.SchedulerEvents}\r","     */\r","    eachEvent: function(fn) {\r","        var instance = this;\r","\r","        return instance._events.each(fn);\r","    },\r","\r","    /**\r","     * Deletes each event in the collection of `Scheduler` events.\r","     *\r","     * @method flushEvents\r","     */\r","    flushEvents: function() {\r","        var instance = this;\r","\r","        instance._events.each(function(evt) {\r","            delete evt._filtered;\r","        });\r","    },\r","\r","    /**\r","     * Returns the event by matching it's `clientId`.\r","     *\r","     * @method getEventByClientId\r","     * @param {String} clientId\r","     * @return {Object}\r","     */\r","    getEventByClientId: function(clientId) {\r","        var instance = this;\r","\r","        return instance._events.getByClientId(clientId);\r","    },\r","\r","    /**\r","     * Gets a collection of events.\r","     *\r","     * @method getEvents\r","     * @param {Function} filterFn (optional) Filters `events` and returns a list\r","     *     of events.\r","     * @param {Boolean} skipSort\r","     * @return {Array}\r","     */\r","    getEvents: function(filterFn, skipSort) {\r","        var instance = this,\r","            events = instance._events;\r","\r","        // TODO: Check why the items are not being sorted on add\r","        if (!skipSort) {\r","            events.sort({\r","                silent: true\r","            });\r","        }\r","\r","        if (filterFn) {\r","            events = events.filter(filterFn);\r","        }\r","        else {\r","            events = events.toArray();\r","        }\r","\r","        return events;\r","    },\r","\r","    /**\r","     * Gets a collection of events within a given day. It will filter\r","     * overlapping events by default unless `includeOverlap` is true.\r","     *\r","     * @method getEventsByDay\r","     * @param {Date} date\r","     * @param {Boolean} includeOverlap\r","     * @return {Array}\r","     */\r","    getEventsByDay: function(date, includeOverlap) {\r","        var instance = this;\r","\r","        date = DateMath.safeClearTime(date);\r","\r","        return instance.getEvents(function(evt) {\r","            return DateMath.compare(evt.getClearStartDate(), date) ||\r","                (includeOverlap && DateMath.compare(evt.getClearEndDate(), date));\r","        });\r","    },\r","\r","    /**\r","     * Returns the list of all events that intersect with a given date. Events\r","     * that are not visible are not included in this list.\r","     *\r","     * @method getIntersectEvents\r","     * @param {Date} date\r","     * @return {Array}\r","     */\r","    getIntersectEvents: function(date) {\r","        var instance = this;\r","\r","        date = DateMath.safeClearTime(date);\r","\r","        return instance.getEvents(function(evt) {\r","            var startDate = evt.getClearStartDate();\r","            var endDate = evt.getClearEndDate();\r","\r","            return (evt.get('visible') &&\r","                (DateMath.compare(date, startDate) ||\r","                    DateMath.compare(date, endDate) ||\r","                    DateMath.between(date, startDate, endDate)));\r","        });\r","    },\r","\r","    /**\r","     * Removes given `SchedulerEvents` from the scheduler.\r","     *\r","     * @method removeEvents\r","     * @param {Array | ModelList | Model | A.SchedulerEvent} models\r","     * @return {A.SchedulerEvents} Removed SchedulerEvents.\r","     */\r","    removeEvents: function(models) {\r","        var instance = this,\r","            events = instance._toSchedulerEvents(models);\r","\r","        return instance._events.remove(events);\r","    },\r","\r","    /**\r","     * Completely replaces all `SchedulerEvents` in the list with the given\r","     * `SchedulerEvents`.\r","     *\r","     * @method resetEvents\r","     * @param {Array | ModelList | Model | A.SchedulerEvent} models\r","     * @return {A.SchedulerEvents} Reset SchedulerEvents.\r","     */\r","    resetEvents: function(models) {\r","        var instance = this,\r","            events = instance._toSchedulerEvents(models);\r","\r","        return instance._events.reset(events);\r","    },\r","\r","    /**\r","     * Handles `add` events.\r","     *\r","     * @method _afterAddEvent\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _afterAddEvent: function(event) {\r","        var instance = this;\r","\r","        event.model.set('scheduler', instance);\r","    },\r","\r","    /**\r","     * Converts given values to `SchedulerEvents`.\r","     *\r","     * @method _toSchedulerEvents\r","     * @param {Array | ModelList | Model | A.SchedulerEvent} values Values to be\r","     *     used or converted to `SchedulerEvent` instances.\r","     * @return {A.SchedulerEvents} The values converted to `SchedulerEvents`.\r","     * @protected\r","     */\r","    _toSchedulerEvents: function(values) {\r","        var instance = this,\r","            events = [];\r","\r","        if (isModelList(values)) {\r","            events = values.toArray();\r","            values.set('scheduler', instance);\r","        }\r","        else if (isArray(values)) {\r","            A.Array.each(values, function(value) {\r","                if (isModelList(value)) {\r","                    events = events.concat(value.toArray());\r","                    value.set('scheduler', instance);\r","                }\r","                else {\r","                    events.push(value);\r","                }\r","            });\r","        }\r","        else {\r","            events = values;\r","        }\r","\r","        return events;\r","    }\r","});\r","\r","A.SchedulerEventSupport = SchedulerEventSupport;\r","\r","/**\r"," * Fired when the current image will be animated in.\r"," *\r"," * @event plotViewEvents\r"," * @preventable _defPlotViewEventsFn\r"," */\r","\r","/**\r"," * A base class for `SchedulerBase`.\r"," *\r"," * @class A.SchedulerBase\r"," * @extends A.Component\r"," * @uses A.SchedulerEventSupport, WidgetStdMod\r"," * @param {Object} config Object literal specifying widget configuration\r"," *     properties.\r"," * @constructor\r"," * @include http://alloyui.com/examples/scheduler/basic-markup.html\r"," * @include http://alloyui.com/examples/scheduler/basic.js\r"," */\r","var SchedulerBase = A.Component.create({\r","\r","    /**\r","     * Static property provides a string to identify the class.\r","     *\r","     * @property NAME\r","     * @type {String}\r","     * @static\r","     */\r","    NAME: 'scheduler-base',\r","\r","    /**\r","     * Static property used to define the default attribute\r","     * configuration for the `SchedulerBase`.\r","     *\r","     * @property ATTRS\r","     * @type {Object}\r","     * @static\r","     */\r","    ATTRS: {\r","\r","        /**\r","         * Contains the active view.\r","         *\r","         * @attribute activeView\r","         * @type {A.SchedulerView}\r","         */\r","        activeView: {\r","            validator: isSchedulerView\r","        },\r","\r","        /**\r","         * Contains the aria labels.\r","         *\r","         * @attribute ariaLabels\r","         * @default { agenda: 'View Agenda', day: 'View by Day', month: 'View by\r","         *     Month', next: 'Go to Next', previous: 'Go to Previous',\r","         *     today: 'Go to Today', week: 'View by Week' }\r","         * @type {Object}\r","         */\r","        ariaLabels: {\r","            value: {\r","                agenda: 'View Agenda',\r","                day: 'View by Day',\r","                month: 'View by Month',\r","                next: 'Go to Next',\r","                previous: 'Go to Previous',\r","                today: 'Go to Today',\r","                week: 'View by Week'\r","            }\r","        },\r","\r","        /**\r","         * Contains a function to call a callback with a date object. The date\r","         * should represent the current time.\r","         *\r","         * @attribute currentTimeFn\r","         * @type {Function}\r","         */\r","        currentTimeFn: {\r","            value: function(callback) {\r","                callback(new Date());\r","            }\r","        },\r","\r","        /**\r","         * Contains the date corresponding to the current date which is the\r","         * value of the date set on the user's computer.\r","         *\r","         * @attribute date\r","         * @type {Date}\r","         */\r","        date: {\r","            value: new Date(),\r","            validator: isDate\r","        },\r","\r","        /**\r","         * Defines the keyboard configuration object for\r","         * `Plugin.NodeFocusManager`.\r","         *\r","         * @attribute focusmanager\r","         * @default { descendants: 'button', keys: { next: 'down:39', previous:\r","         *     'down:37' }, circular: false }\r","         * @type {Object}\r","         */\r","        focusmanager: {\r","            value: {\r","                descendants: 'button',\r","                keys: {\r","                    next: 'down:39',\r","                    previous: 'down:37'\r","                },\r","                circular: false\r","            },\r","            writeOnce: 'initOnly'\r","        },\r","\r","        /**\r","         * Contains the `Scheduler`'s `SchedulerEventRecorder` instance.\r","         *\r","         * @attribute eventRecorder\r","         * @type {A.SchedulerEventRecorder}\r","         */\r","        eventRecorder: {\r","            setter: '_setEventRecorder'\r","        },\r","\r","        /**\r","         * Contains the collection of strings used to label elements of the UI.\r","         *\r","         * @attribute strings\r","         * @type {Object}\r","         */\r","        strings: {\r","            value: {\r","                agenda: 'Agenda',\r","                day: 'Day',\r","                month: 'Month',\r","                table: 'Table',\r","                today: 'Today',\r","                week: 'Week',\r","                year: 'Year'\r","            }\r","        },\r","\r","        /**\r","         * Contains the function that formats the navigation date.\r","         *\r","         * @attribute navigationDateFormatter\r","         * @default %A - %d %b %Y\r","         * @type {Function}\r","         */\r","        navigationDateFormatter: {\r","            value: function(date) {\r","                var instance = this;\r","\r","                return A.DataType.Date.format(\r","                    date, {\r","                        format: '%B %d, %Y',\r","                        locale: instance.get('locale')\r","                    }\r","                );\r","            },\r","            validator: isFunction\r","        },\r","\r","        /**\r","         * If the model items should be lazily loaded through pagination or not.\r","         *\r","         * @attribute pagination\r","         * @default true\r","         * @type {Boolean}\r","         */\r","        pagination: {\r","            validator: A.Lang.isBoolean,\r","            value: true,\r","            writeOnce: 'initOnly'\r","        },\r","\r","        /**\r","         * Contains the list of views belonging to this `Scheduler`.\r","         *\r","         * @attribute views\r","         * @default []\r","         * @type {Array}\r","         */\r","        views: {\r","            setter: '_setViews',\r","            value: []\r","        },\r","\r","        /**\r","         * Contains the `Scheduler`'s current date. If there is an `activeView`,\r","         * this attribute will contain the `activeView`'s current date.\r","         *\r","         * @attribute viewDate\r","         * @type {Date}\r","         * @readOnly\r","         */\r","        viewDate: {\r","            getter: '_getViewDate',\r","            readOnly: true\r","        },\r","\r","        /**\r","         * First day of the week: Sunday is 0, Monday is 1.\r","         *\r","         * @attribute firstDayOfWeek\r","         * @default 0\r","         * @type {Number}\r","         */\r","        firstDayOfWeek: {\r","            value: 0,\r","            validator: isNumber\r","        },\r","\r","        /*\r","         * HTML_PARSER attributes\r","         */\r","        controlsNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_CONTROLS);\r","            }\r","        },\r","\r","        /**\r","         * Contains the node that displays `Scheduler`'s current date in the `SchedulerView`.\r","         * This node is only visible on mobile.\r","         *\r","         * @attribute viewDateNode\r","         * @type {Node}\r","         */\r","        viewDateNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_VIEW_DATE);\r","            }\r","        },\r","\r","        /**\r","         * Contains `Scheduler`'s header node.\r","         *\r","         * @attribute headerNode\r","         * @type {Node}\r","         */\r","        headerNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_HD);\r","            }\r","        },\r","\r","        /**\r","         * Contains the node that goes to the next date in the `activeView`.\r","         *\r","         * @attribute iconNextNode\r","         * @type {Node}\r","         */\r","        iconNextNode: {\r","            valueFn: function() {\r","                var instance = this;\r","\r","                return A.Node.create(\r","                    A.Lang.sub(TPL_SCHEDULER_ICON_NEXT, {\r","                        ariaLabel: instance.getAriaLabel('next')\r","                    })\r","                );\r","            }\r","        },\r","\r","        /**\r","         * Contains the node that goes to the previous date in the `activeView`.\r","         *\r","         * @attribute iconPrevNode\r","         * @type {Node}\r","         */\r","        iconPrevNode: {\r","            valueFn: function() {\r","                var instance = this;\r","\r","                return A.Node.create(\r","                    A.Lang.sub(TPL_SCHEDULER_ICON_PREV, {\r","                        ariaLabel: instance.getAriaLabel('previous')\r","                    })\r","                );\r","            }\r","        },\r","\r","        /**\r","         * Contains `Scheduler`'s header navigation node.\r","         *\r","         * @attribute navNode\r","         * @type {Node}\r","         */\r","        navNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_NAV);\r","            }\r","        },\r","\r","        /**\r","         * Contains the node that displays `Scheduler`'s current date in `Scheduler`'s header.\r","         * This node is hidden on mobile.\r","         *\r","         * @attribute navDateNode\r","         * @type {Node}\r","         */\r","        navDateNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_NAV_DATE);\r","            }\r","        },\r","\r","        /**\r","         * Define whether the scheduler header will be displayed.\r","         *\r","         * @attribute showHeader\r","         * @default true\r","         * @type {Boolean}\r","         */\r","        showHeader: {\r","            validator: isBoolean,\r","            value: true\r","        },\r","\r","        /**\r","         * Contains the node for the select dropdown for `Scheduler`'s views.\r","         * This node is only visible on mobile.\r","         *\r","         * @attribute viewsSelectNode\r","         * @type {Node}\r","         */\r","        viewsSelectNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_VIEWS_SELECT);\r","            }\r","        },\r","\r","        /**\r","         * Today date representation. This option allows the developer to\r","         * specify the date he wants to be used as the today date.\r","         *\r","         * @attribute todayDate\r","         * @default new Date()\r","         * @type {Date}\r","         */\r","        todayDate: {\r","            value: new Date(),\r","            validator: isDate\r","        },\r","\r","        /**\r","         * Contains the node that goes to today date in the `activeView`.\r","         *\r","         * @attribute todayNode\r","         * @type {Node}\r","         */\r","        todayNode: {\r","            valueFn: function() {\r","                var instance = this;\r","\r","                return A.Node.create(\r","                    A.Lang.sub(this._processTemplate(TPL_SCHEDULER_TODAY), {\r","                        ariaLabel: instance.getAriaLabel('today')\r","                    })\r","                );\r","            }\r","        },\r","\r","        /**\r","         * Contains the node container that holds the nodes to change `Scheduler`'s\r","         * `activeView`.\r","         *\r","         * @attribute viewsNode\r","         * @type {Node}\r","         */\r","        viewsNode: {\r","            valueFn: function() {\r","                return A.Node.create(TPL_SCHEDULER_VIEWS);\r","            }\r","        }\r","    },\r","\r","    /**\r","     * Contains an object hash, defining how attribute values are to be parsed\r","     * from markup contained in the widget's bounding box.\r","     *\r","     * @property HTML_PARSER\r","     * @type {Object}\r","     * @static\r","     */\r","    HTML_PARSER: {\r","        controlsNode: '.' + CSS_SCHEDULER_CONTROLS,\r","        viewDateNode: '.' + CSS_SCHEDULER_VIEW_DATE,\r","        headerNode: '.' + CSS_SCHEDULER_HD,\r","        iconNextNode: '.' + CSS_SCHEDULER_ICON_NEXT,\r","        iconPrevNode: '.' + CSS_SCHEDULER_ICON_PREV,\r","        navNode: '.' + CSS_SCHEDULER_NAV,\r","        navDateNode: '.' + CSS_SCHEDULER_NAV_DATE,\r","        todayNode: '.' + CSS_SCHEDULER_TODAY,\r","        viewsNode: '.' + CSS_SCHEDULER_VIEWS\r","    },\r","\r","    /**\r","     * Static property used to define the UI attributes.\r","     *\r","     * @property UI_ATTRS\r","     * @type {Array}\r","     * @static\r","     */\r","    UI_ATTRS: ['date', 'activeView', 'showHeader'],\r","\r","    /**\r","     * Static property used to define the augmented classes.\r","     *\r","     * @property AUGMENTS\r","     * @type {Array}\r","     * @static\r","     */\r","    AUGMENTS: [A.SchedulerEventSupport, A.WidgetStdMod],\r","\r","    prototype: {\r","        viewStack: null,\r","\r","        /**\r","         * Construction logic executed during `SchedulerBase` instantiation.\r","         * Lifecycle.\r","         *\r","         * @method initializer\r","         * @protected\r","         */\r","        initializer: function() {\r","            var instance = this;\r","\r","            instance.viewStack = {};\r","\r","            instance.controlsNode = instance.get('controlsNode');\r","            instance.viewDateNode = instance.get('viewDateNode');\r","            instance.header = instance.get('headerNode');\r","            instance.iconNextNode = instance.get('iconNextNode');\r","            instance.iconPrevNode = instance.get('iconPrevNode');\r","            instance.navNode = instance.get('navNode');\r","            instance.navDateNode = instance.get('navDateNode');\r","            instance.viewsSelectNode = instance.get('viewsSelectNode');\r","            instance.todayNode = instance.get('todayNode');\r","            instance.viewsNode = instance.get('viewsNode');\r","\r","            instance._populateViewNodes();\r","\r","            instance.after({\r","                activeViewChange: instance._afterActiveViewChange,\r","                render: instance._afterRender\r","            });\r","\r","            this.publish({\r","                plotViewEvents: {\r","                    defaultFn: this._defPlotViewEventsFn\r","                }\r","            });\r","        },\r","\r","        /**\r","         * Binds the events on the `SchedulerBase` UI. Lifecycle.\r","         *\r","         * @method bindUI\r","         * @protected\r","         */\r","        bindUI: function() {\r","            var instance = this;\r","\r","            instance._bindDelegate();\r","        },\r","\r","        /**\r","         * Syncs the `SchedulerBase` UI. Lifecycle.\r","         *\r","         * @method syncUI\r","         * @protected\r","         */\r","        syncUI: function() {\r","            var instance = this;\r","\r","            instance.syncStdContent();\r","        },\r","\r","        /**\r","         * Returns the `SchedulerView` that belongs to a given name.\r","         *\r","         * @method getViewByName\r","         * @param {String} name\r","         * @return {A.SchedulerView}\r","         */\r","        getViewByName: function(name) {\r","            var instance = this;\r","\r","            return instance.viewStack[name];\r","        },\r","\r","        /**\r","         * Returns the trigger node for the given `SchedulerView`.\r","         *\r","         * @method getViewTriggerNode\r","         * @param {A.SchedulerView} view\r","         * @return {Node} The `SchedulerView`'s trigger `Node`.\r","         */\r","        getViewTriggerNode: function(view) {\r","            var instance = this,\r","                name = view.get('name'),\r","                viewportWidth = A.DOM.winWidth();\r","\r","            if (viewportWidth >= 768) {\r","                return instance.viewsNode.one('.' + CSS_SCHEDULER_VIEW_ + name);\r","            }\r","\r","            return instance.viewsSelectNode.one('.' + CSS_SCHEDULER_VIEW_ + name);\r","        },\r","\r","        /**\r","         * Returns this `Scheduler`'s `strings` attribute value.\r","         *\r","         * @method getStrings\r","         * @return {String}\r","         */\r","        getStrings: function() {\r","            var instance = this;\r","\r","            return instance.get('strings');\r","        },\r","\r","        /**\r","         * Returns the string that matches the `key` type.\r","         *\r","         * @method getString\r","         * @param {String} key\r","         * @return {String}\r","         */\r","        getString: function(key) {\r","            var instance = this;\r","\r","            return instance.getStrings()[key];\r","        },\r","\r","        /**\r","         * Returns the aria label that matches the `key` type.\r","         *\r","         * @method getAriaLabel\r","         * @param {String} key\r","         * @return {String}\r","         */\r","        getAriaLabel: function(key) {\r","            var instance = this,\r","                ariaLabels = instance.get('ariaLabels');\r","\r","            return ariaLabels[key];\r","        },\r","\r","        /**\r","         * Renders the `SchedulerView` based on the given `view` parameter\r","         * under `instance.bodyNode`.\r","         *\r","         * @method renderView\r","         * @param {A.SchedulerView} view\r","         */\r","        renderView: function(view) {\r","            var instance = this;\r","\r","            if (view) {\r","                view.show();\r","\r","                if (!view.get('rendered')) {\r","                    if (!instance.bodyNode) {\r","                        instance.setStdModContent(WidgetStdMod.BODY, '');\r","                    }\r","\r","                    instance.bodyNode.prepend(instance.viewDateNode);\r","                    view.render(instance.bodyNode);\r","                }\r","            }\r","        },\r","\r","        /**\r","         * Plots all events for the current view.\r","         *\r","         * @method plotViewEvents\r","         * @param view\r","         */\r","        plotViewEvents: function(view) {\r","            var instance = this;\r","\r","            view.plotEvents(\r","                instance.getEvents()\r","            );\r","        },\r","\r","        /**\r","         * Plots the `activeView` events value.\r","         *\r","         * @method syncEventsUI\r","         */\r","        syncEventsUI: function() {\r","            var instance = this,\r","                activeView = instance.get('activeView');\r","\r","            if (activeView) {\r","                this.fire('plotViewEvents');\r","            }\r","        },\r","\r","        /**\r","         * Renders a new `ButtonGroup` and attaches it to the `Scheduler`\r","         * instances as a property `instance.buttonGroup`. It is rendered under\r","         * the `Scheduler` instance's `viewsNode`.\r","         *\r","         * @method renderButtonGroup\r","         */\r","        renderButtonGroup: function() {\r","            var instance = this;\r","\r","            if (!instance.buttonGroup) {\r","                instance.buttonGroup = new A.ButtonGroup({\r","                    boundingBox: instance.viewsNode,\r","                    on: {\r","                        selectionChange: A.bind(instance._onButtonGroupSelectionChange, instance)\r","                    }\r","                }).render();\r","            }\r","        },\r","\r","        /**\r","         * Renders a dropdown list under the `Scheduler` instance's `viewsNode`.\r","         *\r","         * @method renderDropdownList\r","         */\r","        renderDropdownList: function() {\r","            var instance = this;\r","\r","            instance.viewsSelectNode.on('change', A.bind(instance._onSelectionChange, instance));\r","        },\r","\r","        /**\r","         * Sync `SchedulerBase` StdContent.\r","         *\r","         * @method syncStdContent\r","         */\r","        syncStdContent: function() {\r","            var instance = this;\r","\r","            if (instance.get('showHeader')) {\r","                instance.renderButtonGroup();\r","\r","                instance.navNode.append(instance.iconPrevNode);\r","                instance.navNode.append(instance.todayNode);\r","                instance.navNode.append(instance.iconNextNode);\r","\r","                instance.controlsNode.append(instance.navNode);\r","                instance.controlsNode.append(instance.navDateNode);\r","\r","                instance.viewsNode.append(instance.viewsSelectNode);\r","\r","                instance.header.append(instance.controlsNode);\r","                instance.header.append(instance.viewsNode);\r","\r","                instance.setStdModContent(WidgetStdMod.HEADER, instance.header.getDOM());\r","\r","                instance.header.show();\r","            }\r","            else {\r","                instance.header.hide();\r","            }\r","        },\r","\r","        /**\r","         * Handles `activeView` events.\r","         *\r","         * @method _afterActiveViewChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterActiveViewChange: function(event) {\r","            var instance = this;\r","\r","            if (instance.get('rendered')) {\r","                var activeView = event.newVal;\r","                var lastActiveView = event.prevVal;\r","\r","                if (lastActiveView) {\r","                    lastActiveView.hide();\r","                }\r","\r","                instance.renderView(activeView);\r","\r","                var eventRecorder = instance.get('eventRecorder');\r","\r","                if (eventRecorder) {\r","                    eventRecorder.hidePopover();\r","                }\r","\r","                instance._uiSetDate(instance.get('date'));\r","            }\r","        },\r","\r","        /**\r","         * Handles `render` events.\r","         *\r","         * @method _afterRender\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterRender: function() {\r","            var instance = this,\r","                activeView = instance.get('activeView');\r","\r","            instance.renderView(activeView);\r","            instance.renderDropdownList();\r","\r","            instance._uiSetDate(instance.get('date'));\r","            instance._uiSetActiveView(activeView);\r","\r","            instance._plugFocusManager();\r","        },\r","\r","        /**\r","         * Binds click events to an event delegate.\r","         *\r","         * @method _bindDelegate\r","         * @protected\r","         */\r","        _bindDelegate: function() {\r","            var instance = this;\r","\r","            instance.controlsNode.delegate('click', instance._onClickPrevIcon, '.' + CSS_SCHEDULER_ICON_PREV,\r","                instance);\r","            instance.controlsNode.delegate('click', instance._onClickNextIcon, '.' + CSS_SCHEDULER_ICON_NEXT,\r","                instance);\r","            instance.controlsNode.delegate('click', instance._onClickToday, '.' + CSS_SCHEDULER_TODAY, instance);\r","        },\r","\r","        /**\r","         * Creates the given `SchedulerView`'s trigger `Node`.\r","         *\r","         * @method _createViewTriggerNode\r","         * @param {A.SchedulerView} view\r","         * @param {String} tpl\r","         * @protected\r","         * @return {Node} The `SchedulerView`'s trigger `Node`.\r","         */\r","        _createViewTriggerNode: function(view, tpl) {\r","            var instance = this;\r","            var name = view.get('name');\r","\r","            return A.Node.create(\r","                    A.Lang.sub(tpl, {\r","                        name: name,\r","                        label: (instance.getString(name) || name),\r","                        ariaLabel: instance.getAriaLabel(name)\r","                    }));\r","        },\r","\r","        /**\r","         * Default behavior for the `plotViewEvents` event.\r","         *\r","         * @method _defPlotViewEventsFn\r","         * @protected\r","         */\r","        _defPlotViewEventsFn: function() {\r","            this.plotViewEvents(this.get('activeView'));\r","        },\r","\r","        /**\r","         * Returns the `SchedulerView`'s `date`.\r","         *\r","         * @method _getViewDate\r","         * @protected\r","         * @return {Date} The `SchedulerView`'s `date`.\r","         */\r","        _getViewDate: function() {\r","            var instance = this,\r","                date = instance.get('date'),\r","                activeView = instance.get('activeView');\r","\r","            if (activeView) {\r","                date = activeView.getAdjustedViewDate(date);\r","            }\r","\r","            return date;\r","        },\r","\r","        /**\r","         * Handles `buttonGroupSelectionChange` events.\r","         *\r","         * @method _onButtonGroupSelectionChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _onButtonGroupSelectionChange: function(event) {\r","            var instance = this,\r","                viewName = event.originEvent.target.attr('data-view-name');\r","\r","            instance.set('activeView', instance.getViewByName(viewName));\r","\r","            instance.viewsSelectNode.one('[data-view-name=' + viewName + ']').set('selected', true);\r","\r","            event.preventDefault();\r","        },\r","\r","        /**\r","         * Handles `clickToday` events.\r","         *\r","         * @method _onClickToday\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _onClickToday: function(event) {\r","            var instance = this,\r","                activeView = instance.get('activeView');\r","\r","            if (activeView) {\r","                instance.set('date', instance.get('todayDate'));\r","            }\r","\r","            event.preventDefault();\r","        },\r","\r","        /**\r","         * Handles `clickNextIcon` events.\r","         *\r","         * @method _onClickNextIcon\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _onClickNextIcon: function(event) {\r","            var instance = this,\r","                activeView = instance.get('activeView');\r","\r","            if (activeView) {\r","                instance.set('date', activeView.get('nextDate'));\r","            }\r","\r","            event.preventDefault();\r","        },\r","\r","        /**\r","         * Handles `clickPrevIcon` events.\r","         *\r","         * @method _onClickPrevIcon\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _onClickPrevIcon: function(event) {\r","            var instance = this,\r","                activeView = instance.get('activeView');\r","\r","            if (activeView) {\r","                instance.set('date', activeView.get('prevDate'));\r","            }\r","\r","            event.preventDefault();\r","        },\r","\r","        /**\r","         * Handles select tag's change events.\r","         *\r","         * @method _onSelectionChange\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _onSelectionChange: function(event) {\r","            var instance = this,\r","                target = event.target,\r","                index = target.get('selectedIndex'),\r","                viewName = target.get('options').item(index).attr('data-view-name');\r","\r","            instance.set('activeView', instance.getViewByName(viewName));\r","        },\r","\r","        /**\r","         * Add the content to represent each view to the corresponding view\r","         * nodes.\r","         *\r","         * The scheduler can display its events in many views - day view, week\r","         * view etc. These views are selected through a set of buttons at the\r","         * top left of the scheduler (if it is being viewed in desktop mode)\r","         * or from a select (if it is being viewed from a mobile device). This\r","         * method checks which views the scheduler is expected to render, and\r","         * adds elements both options (i.e. adds buttons to the button group and\r","         * options to the select).\r","         *\r","         * @method _populateViewNodes\r","         * @protected\r","         */\r","        _populateViewNodes: function() {\r","            var instance = this;\r","\r","            var views = instance.get('views');\r","\r","            A.Array.each(views, function(view) {\r","                instance.viewsSelectNode.append(instance._createViewTriggerNode(view, TPL_SCHEDULER_VIEW_LIST));\r","                instance.viewsNode.append(instance._createViewTriggerNode(view, TPL_SCHEDULER_VIEW_BUTTON));\r","            });\r","        },\r","\r","        /**\r","         * Plugs 'NodeFocusManager' into the viewsNode and navNode.\r","         *\r","         * @method _plugFocusManager\r","         * @protected\r","         */\r","        _plugFocusManager: function() {\r","            var instance = this;\r","\r","            instance.viewsNode.plug(A.Plugin.NodeFocusManager, this.get('focusmanager'));\r","            instance.navNode.plug(A.Plugin.NodeFocusManager, this.get('focusmanager'));\r","        },\r","\r","        /**\r","         * Applies substitution to a given template.\r","         *\r","         * @method _processTemplate\r","         * @param {String} tpl\r","         * @protected\r","         */\r","        _processTemplate: function(tpl) {\r","            var instance = this;\r","\r","            return A.Lang.sub(tpl, instance.getStrings());\r","        },\r","\r","        /**\r","         * Replaces this `SchedulerBase`'s `eventRecorder` with the given\r","         * `eventRecorder` value.\r","         *\r","         * @method _setEventRecorder\r","         * @param {A.SchedulerEventRecorder} val A `SchedulerEventRecorder`\r","         *     instance.\r","         * @protected\r","         */\r","        _setEventRecorder: function(val) {\r","            var instance = this;\r","\r","            if (val) {\r","                val.setAttrs({\r","                    scheduler: instance\r","                }, {\r","                    silent: true\r","                });\r","\r","                val.addTarget(instance);\r","            }\r","        },\r","\r","        /**\r","         * Replaces this `SchedulerBase`'s `views` with the given `views` value.\r","         *\r","         * @method _setViews\r","         * @param {Array} val Array of `SchedulerView` instances.\r","         * @protected\r","         * @return {Array} The replaced `SchedulerBase`'s `views`.\r","         */\r","        _setViews: function(val) {\r","            var instance = this;\r","            var views = [];\r","\r","            A.Array.each(val, function(view) {\r","                if (isSchedulerView(view) && !view.get('rendered')) {\r","                    view.setAttrs({\r","                        scheduler: instance\r","                    });\r","\r","                    views.push(view);\r","\r","                    instance.viewStack[view.get('name')] = view;\r","                }\r","            });\r","\r","            if (!instance.get('activeView')) {\r","                instance.set('activeView', val[0]);\r","            }\r","\r","            return views;\r","        },\r","\r","        /**\r","         * Sets `activeView` on the UI.\r","         *\r","         * @method _uiSetActiveView\r","         * @param {SchedulerView} val A `SchedulerView` instance.\r","         * @protected\r","         */\r","        _uiSetActiveView: function(val) {\r","            var instance = this;\r","\r","            if (val) {\r","                var activeView = val.get('name'),\r","                    activeNav = instance.viewsNode.one('.' + CSS_SCHEDULER_VIEW_ + activeView);\r","\r","                if (activeNav) {\r","                    instance.viewsNode.all('button').removeClass(CSS_SCHEDULER_VIEW_SELECTED).setAttribute('aria-pressed', false);\r","                    instance.viewsSelectNode.one('[data-view-name=' + activeView + ']').set('selected', true);\r","                    activeNav.addClass(CSS_SCHEDULER_VIEW_SELECTED).setAttribute('aria-pressed', true);\r","                }\r","            }\r","        },\r","\r","        /**\r","         * Sets `date` on the UI.\r","         *\r","         * @method _uiSetDate\r","         * @param {Date} date\r","         * @protected\r","         */\r","        _uiSetDate: function(date) {\r","            var instance = this;\r","\r","            var formatter = instance.get('navigationDateFormatter');\r","            var navigationTitle = formatter.call(instance, date);\r","\r","            if (instance.get('rendered')) {\r","                var activeView = instance.get('activeView');\r","\r","                if (activeView) {\r","                    activeView._uiSetDate(date);\r","\r","                    formatter = activeView.get('navigationDateFormatter');\r","                    navigationTitle = formatter.call(activeView, date);\r","                }\r","\r","                instance.navDateNode.html(navigationTitle);\r","                instance.viewDateNode.html(navigationTitle);\r","\r","                instance.syncEventsUI();\r","            }\r","        },\r","\r","        /**\r","         * Set the `showHeader` property - i.e., defines if the scheduler\r","         * header will be displayed.\r","         *\r","         * @method _uiSetShowHeader\r","         * @protected\r","         */\r","        _uiSetShowHeader: function() {\r","            var instance = this;\r","\r","            instance.syncStdContent();\r","        }\r","    }\r","});\r","\r","A.Scheduler = SchedulerBase;\r","/**\r"," * Contains the Scheduler Component\r"," *\r"," * @module aui-scheduler\r"," * @submodule aui-scheduler-base-view\r"," */\r","\r","var Lang = A.Lang,\r","    isBoolean = Lang.isBoolean,\r","    isFunction = Lang.isFunction,\r","    isString = Lang.isString,\r","\r","    DateMath = A.DataType.DateMath,\r","\r","    CSS_SCHEDULER_VIEW_NOSCROLL = A.getClassName('scheduler-view', 'noscroll'),\r","    CSS_SCHEDULER_VIEW_SCROLLABLE = A.getClassName('scheduler-view', 'scrollable');\r","\r","/**\r"," * A base class for `SchedulerView`.\r"," *\r"," * @class A.SchedulerView\r"," * @extends A.Component\r"," * @uses WidgetStdMod\r"," * @param {Object} config Object literal specifying widget configuration\r"," *     properties.\r"," * @constructor\r"," */\r","var SchedulerView = A.Component.create({\r","\r","    /**\r","     * Static property provides a string to identify the class.\r","     *\r","     * @property NAME\r","     * @type {String}\r","     * @static\r","     */\r","    NAME: 'scheduler-view',\r","\r","    /**\r","     * Static property used to define the augmented classes.\r","     *\r","     * @property AUGMENTS\r","     * @type {Array}\r","     * @static\r","     */\r","    AUGMENTS: [A.WidgetStdMod],\r","\r","    /**\r","     * Static property used to define the default attribute\r","     * configuration for the `SchedulerView`.\r","     *\r","     * @property ATTRS\r","     * @type {Object}\r","     * @static\r","     */\r","    ATTRS: {\r","\r","        /**\r","         * Determines the content of Scheduler view's body section.\r","         *\r","         * @attribute bodyContent\r","         * @default ''\r","         * @type {String}\r","         */\r","        bodyContent: {\r","            value: ''\r","        },\r","\r","        /**\r","         * Applies a filter to `SchedulerEvent`s.\r","         *\r","         * @attribute filterFn\r","         * @type {Function} The function to filter a `SchedulerEvent`.\r","         */\r","        filterFn: {\r","            validator: isFunction,\r","            value: function() {\r","                return true;\r","            }\r","        },\r","\r","        /**\r","         * Contains the height of a `SchedulerView` in pixels.\r","         *\r","         * @attribute height\r","         * @default 600\r","         * @type {Number}\r","         */\r","        height: {\r","            value: 650\r","        },\r","\r","        /**\r","         * Determines the initial scroll behavior for this view. If false,\r","         * there will be no scrolling when the view is first shown. When set\r","         * to true the view will scroll to the current date and time. If set\r","         * to a date the view will scroll to that date instead.\r","         *\r","         * @attribute initialScroll\r","         * @default true\r","         * @type {Boolean | Date}\r","         */\r","        initialScroll: {\r","            validator: function(val) {\r","                return A.Lang.isBoolean(val) || A.Lang.isDate(val);\r","            },\r","            value: true,\r","            writeOnce: 'initOnly'\r","        },\r","\r","        /**\r","         * Indicates whether this `SchedulerView` should use international\r","         * standard time.\r","         *\r","         * @attribute isoTime\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        isoTime: {\r","            value: false,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Determines the name for this view.\r","         *\r","         * @attribute name\r","         * @default ''\r","         * @type {String}\r","         */\r","        name: {\r","            value: '',\r","            validator: isString\r","        },\r","\r","        /**\r","         * Contains the function that formats the navigation date.\r","         *\r","         * @attribute navigationDateFormatter\r","         * @default %A - %d %b %Y\r","         * @type {Function}\r","         */\r","        navigationDateFormatter: {\r","            value: function(date) {\r","                var instance = this;\r","                var scheduler = instance.get('scheduler');\r","\r","                return A.DataType.Date.format(date, {\r","                    format: '%A, %d %B, %Y',\r","                    locale: scheduler.get('locale')\r","                });\r","            },\r","            validator: isFunction\r","        },\r","\r","        /**\r","         * Contains the next `Date` in the `SchedulerView`.\r","         *\r","         * @attribute nextDate\r","         * @type {Date}\r","         * @readOnly\r","         */\r","        nextDate: {\r","            getter: 'getNextDate',\r","            readOnly: true\r","        },\r","\r","        /**\r","         * Contains the previous `Date` in the `SchedulerView`.\r","         *\r","         * @attribute prevDate\r","         * @type {Date}\r","         * @readOnly\r","         */\r","        prevDate: {\r","            getter: 'getPrevDate',\r","            readOnly: true\r","        },\r","\r","        /**\r","         * Contains this `SchedulerView`'s `SchedulerBase' object.\r","         *\r","         * @attribute scheduler\r","         * @type {A.SchedulerBase}\r","         */\r","        scheduler: {\r","            lazyAdd: false,\r","            setter: '_setScheduler'\r","        },\r","\r","        /**\r","         * Indicates whether this `SchedulerView` is scrollable.\r","         *\r","         * @attribute scrollable\r","         * @default true\r","         * @type {Boolean}\r","         */\r","        scrollable: {\r","            value: true,\r","            validator: isBoolean\r","        },\r","\r","        /**\r","         * Contains the `Node` that triggers.\r","         *\r","         * @attribute triggerNode\r","         */\r","        triggerNode: {\r","            getter: '_getTriggerNode',\r","            setter: A.one\r","        },\r","\r","        /**\r","         * Indicates whether the calendar is visible.\r","         *\r","         * @attribute visible\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        visible: {\r","            value: false\r","        }\r","    },\r","\r","    /**\r","     * Static property used to define the attributes\r","     * for the bindUI lifecycle phase.\r","     *\r","     * @property BIND_UI_ATTRS\r","     * @type {Array}\r","     * @static\r","     */\r","    BIND_UI_ATTRS: ['scrollable'],\r","\r","    prototype: {\r","\r","        /**\r","         * Construction logic executed during `SchedulerView` instantiation.\r","         * Lifecycle.\r","         *\r","         * @method initializer\r","         * @protected\r","         */\r","        initializer: function() {\r","            this.after('render', this._afterRender);\r","            A.after(this._afterBasePlotEvents, this, 'plotEvents');\r","        },\r","\r","        /**\r","         * Syncs the `SchedulerView` UI. Lifecycle.\r","         *\r","         * @method syncUI\r","         * @protected\r","         */\r","        syncUI: function() {\r","            var instance = this;\r","\r","            instance.syncStdContent();\r","        },\r","\r","        /**\r","         * Returns a date value of the date with its time adjusted\r","         * to midnight.\r","         *\r","         * @method getAdjustedViewDate\r","         * @param {Date} date The value of the property.\r","         * @return {Date}\r","         */\r","        getAdjustedViewDate: function(date) {\r","            return DateMath.toMidnight(date);\r","        },\r","\r","        /**\r","         * Removes all data from `evtDateStack`, `evtRenderedStack` and\r","         * `rowDateTableStack`.\r","         *\r","         * @method flushViewCache\r","         */\r","        flushViewCache: function() {},\r","\r","        /**\r","         * Returns the date interval in which this view shows events for.\r","         *\r","         * @method getDateInterval\r","         * @return {Object} Object with 2 keys: startDate and endDate. Undefined\r","         *   keys are interpreted as unlimited sides of the interval.\r","         */\r","        getDateInterval: function() {\r","            return {\r","                endDate: DateMath.toLastHour(DateMath.subtract(this.getNextDate(), DateMath.DAY, 1)),\r","                startDate: this.getAdjustedViewDate(this.get('scheduler').get('viewDate'))\r","            };\r","        },\r","\r","        /**\r","         * Returns the value of the date that follows the view's current\r","         * date.\r","         *\r","         * @method getNextDate\r","         * @return {Date}\r","         */\r","        getNextDate: function() {},\r","\r","        /**\r","         * Returns the value of the date that preceeds the view's current\r","         * date.\r","         *\r","         * @method getPrevDate\r","         * @return {Date}\r","         */\r","        getPrevDate: function() {},\r","\r","        /**\r","         * Returns the value of the current date.\r","         *\r","         * @method getToday\r","         * @return {Date}\r","         */\r","        getToday: function() {\r","            return DateMath.clearTime(new Date());\r","        },\r","\r","        /**\r","         * Returns a clone of a given `date` that will adjust to the `maxDate`\r","         * if it occurs after `maxDate`.\r","         *\r","         * @method limitDate\r","         * @param {Date} date\r","         * @param {Date} maxDate\r","         * @return {Date}\r","         */\r","        limitDate: function(date, maxDate) {\r","            if (DateMath.after(date, maxDate)) {\r","                date = DateMath.clone(maxDate);\r","            }\r","\r","            return date;\r","        },\r","\r","        /**\r","         * Plots all events in the current view.\r","         *\r","         * @method plotEvents\r","         */\r","        plotEvents: function() {},\r","\r","        /**\r","         * Scrolls to given date.\r","         *\r","         * @method scrollToDate\r","         */\r","        scrollToDate: function() {},\r","\r","        /**\r","         * Sync `SchedulerView` StdContent.\r","         *\r","         * @method syncStdContent\r","         */\r","        syncStdContent: function() {},\r","\r","        /**\r","         * Sync `event` on the UI.\r","         *\r","         * @method syncEventUI\r","         * @param {A.SchedulerEvent} evt A `Scheduler` event.\r","         */\r","        syncEventUI: function() {},\r","\r","        /**\r","         * Sets `date` on the UI.\r","         *\r","         * @method _uiSetDate\r","         * @protected\r","         */\r","        _uiSetDate: function() {},\r","\r","        /**\r","         * Syncs the UI according to the value of the `initialScroll` attribute.\r","         *\r","         * @method _afterBasePlotEvents\r","         */\r","        _afterBasePlotEvents: function() {\r","            var initialScroll = this.get('initialScroll');\r","\r","            if (initialScroll !== false && this.get('rendered') && this.get('visible') && !this._scrollDone) {\r","                this.scrollToDate(initialScroll === true ? new Date() : initialScroll);\r","                this._scrollDone = true;\r","            }\r","        },\r","\r","        /**\r","         * Handles `render` events.\r","         *\r","         * @method _afterRender\r","         * @param {EventFacade} event\r","         * @protected\r","         */\r","        _afterRender: function() {\r","            var instance = this;\r","\r","            instance._uiSetScrollable(\r","                instance.get('scrollable')\r","            );\r","        },\r","\r","        /**\r","         * Returns the `Node` that triggers.\r","         *\r","         * @method _getTriggerNode\r","         * @protected\r","         */\r","        _getTriggerNode: function() {\r","            return this.get('scheduler').getViewTriggerNode(this);\r","        },\r","\r","        /**\r","         * Sets this `SchedulerView`'s `scheduler` object to the given value.\r","         *\r","         * @method _setScheduler\r","         * @param {Scheduler} val A `Scheduler` instance.\r","         * @protected\r","         * @return {Object}\r","         */\r","        _setScheduler: function(val) {\r","            var instance = this;\r","            var scheduler = instance.get('scheduler');\r","\r","            if (scheduler) {\r","                instance.removeTarget(scheduler);\r","            }\r","\r","            if (val) {\r","                instance.addTarget(val);\r","\r","                val.after(['*:add', '*:remove', '*:reset'], A.bind(instance.flushViewCache, instance));\r","            }\r","\r","            return val;\r","        },\r","\r","        /**\r","         * Sets `scrollable` on the UI.\r","         *\r","         * @method _uiSetScrollable\r","         * @param {Boolean} val The value of the property.\r","         * @protected\r","         */\r","        _uiSetScrollable: function(val) {\r","            var instance = this;\r","            var bodyNode = instance.bodyNode;\r","\r","            if (bodyNode) {\r","                bodyNode.toggleClass(CSS_SCHEDULER_VIEW_SCROLLABLE, val);\r","                bodyNode.toggleClass(CSS_SCHEDULER_VIEW_NOSCROLL, !val);\r","            }\r","        }\r","    }\r","});\r","\r","A.SchedulerView = SchedulerView;\r","","","}, '3.1.0', {","    \"requires\": [","        \"model\",","        \"model-list\",","        \"widget-stdmod\",","        \"color-hsl\",","        \"aui-event-base\",","        \"aui-node-base\",","        \"aui-component\",","        \"aui-datatype\",","        \"aui-button\",","        \"node-focusmanager\"","    ],","    \"skinnable\": true","});","","}());"]};
}
var __cov_P2BlUTNi0iOdU2ddWnfkig = __coverage__['build/aui-scheduler-base/aui-scheduler-base.js'];
__cov_P2BlUTNi0iOdU2ddWnfkig.s['1']++;YUI.add('aui-scheduler-base',function(A,NAME){__cov_P2BlUTNi0iOdU2ddWnfkig.f['1']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['2']++;var Lang=A.Lang,isBoolean=Lang.isBoolean,isFunction=Lang.isFunction,isNumber=Lang.isNumber,isObject=Lang.isObject,isString=Lang.isString,isValue=Lang.isValue,Color=A.Color,DateMath=A.DataType.DateMath,getUSDateFormat=function(date){__cov_P2BlUTNi0iOdU2ddWnfkig.f['2']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['3']++;var format=['%l'];__cov_P2BlUTNi0iOdU2ddWnfkig.s['4']++;if(date.getMinutes()>0){__cov_P2BlUTNi0iOdU2ddWnfkig.b['1'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['5']++;format.push(':');__cov_P2BlUTNi0iOdU2ddWnfkig.s['6']++;format.push('%M');}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['1'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['7']++;if(date.getHours()>=12){__cov_P2BlUTNi0iOdU2ddWnfkig.b['2'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['8']++;format.push('pm');}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['2'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['9']++;return format.join('');},getCN=A.getClassName,CSS_ICON=getCN('glyphicon'),CSS_SCHEDULER_EVENT=getCN('scheduler-event'),CSS_SCHEDULER_EVENT_ALL_DAY=getCN('scheduler-event','all','day'),CSS_SCHEDULER_EVENT_CONTENT=getCN('scheduler-event','content'),CSS_SCHEDULER_EVENT_DISABLED=getCN('scheduler-event','disabled'),CSS_SCHEDULER_EVENT_HIDDEN=getCN('scheduler-event','hidden'),CSS_SCHEDULER_EVENT_ICON_DISABLED=getCN('scheduler-event','icon','disabled'),CSS_SCHEDULER_EVENT_ICON_MEETING=getCN('scheduler-event','icon','meeting'),CSS_SCHEDULER_EVENT_ICON_REMINDER=getCN('scheduler-event','icon','reminder'),CSS_SCHEDULER_EVENT_ICON_REPEATED=getCN('scheduler-event','icon','repeated'),CSS_SCHEDULER_EVENT_ICONS=getCN('scheduler-event','icons'),CSS_SCHEDULER_EVENT_MEETING=getCN('scheduler-event','meeting'),CSS_SCHEDULER_EVENT_PAST=getCN('scheduler-event','past'),CSS_SCHEDULER_EVENT_REMINDER=getCN('scheduler-event','reminder'),CSS_SCHEDULER_EVENT_REPEATED=getCN('scheduler-event','repeated'),CSS_SCHEDULER_EVENT_SHORT=getCN('scheduler-event','short'),CSS_SCHEDULER_EVENT_TITLE=getCN('scheduler-event','title'),TPL_HTML_OPEN_SPAN='<span>',TPL_HTML_CLOSE_SPAN='</span>';__cov_P2BlUTNi0iOdU2ddWnfkig.s['10']++;var SchedulerEvent=A.Component.create({NAME:'scheduler-event',ATTRS:{allDay:{setter:A.DataType.Boolean.parse,value:false},borderColor:{value:'#FFFFFF',validator:isString},borderStyle:{value:'solid',validator:isString},borderWidth:{value:'2px',validator:isString},content:{setter:String,validator:isValue},color:{lazyAdd:false,value:'#376cd9',validator:isString},colorBrightnessFactor:{value:1.4,validator:isNumber},colorSaturationFactor:{value:0.88,validator:isNumber},titleDateFormat:{getter:'_getTitleDateFormat',value:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['3']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['11']++;var instance=this,scheduler=instance.get('scheduler'),isoTime=(__cov_P2BlUTNi0iOdU2ddWnfkig.b['3'][0]++,scheduler)&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['3'][1]++,scheduler.get('activeView').get('isoTime')),format={endDate:TPL_HTML_OPEN_SPAN+'&ndash;'+' '+'%H:%M'+TPL_HTML_CLOSE_SPAN,startDate:'%H:%M'};__cov_P2BlUTNi0iOdU2ddWnfkig.s['12']++;if(!isoTime){__cov_P2BlUTNi0iOdU2ddWnfkig.b['4'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['13']++;format.endDate=TPL_HTML_OPEN_SPAN+'&ndash;'+' '+getUSDateFormat(instance.get('endDate'))+TPL_HTML_CLOSE_SPAN;__cov_P2BlUTNi0iOdU2ddWnfkig.s['14']++;format.startDate=getUSDateFormat(instance.get('startDate'));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['4'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['15']++;if(instance.getMinutesDuration()<=30){__cov_P2BlUTNi0iOdU2ddWnfkig.b['5'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['16']++;delete format.endDate;}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['5'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['17']++;if(instance.get('allDay')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['6'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['18']++;format={};}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['6'][1]++;}}__cov_P2BlUTNi0iOdU2ddWnfkig.s['19']++;return format;}},endDate:{setter:'_setDate',valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['4']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['20']++;var date=DateMath.clone(this.get('startDate'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['21']++;date.setHours(date.getHours()+1);__cov_P2BlUTNi0iOdU2ddWnfkig.s['22']++;return date;}},disabled:{value:false,validator:isBoolean},meeting:{value:false,validator:isBoolean},node:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['5']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['23']++;return A.NodeList.create(A.Node.create(this.EVENT_NODE_TEMPLATE).setData('scheduler-event',this));}},reminder:{value:false,validator:isBoolean},repeated:{value:false,validator:isBoolean},scheduler:{},startDate:{setter:'_setDate',valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['6']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['24']++;return new Date();}},visible:{value:true,validator:isBoolean}},EXTENDS:A.Model,PROPAGATE_ATTRS:['allDay','startDate','endDate','content','color','colorBrightnessFactor','colorSaturationFactor','titleDateFormat','visible','disabled'],prototype:{EVENT_NODE_TEMPLATE:'<div class="'+CSS_SCHEDULER_EVENT+'">'+'<div class="'+CSS_SCHEDULER_EVENT_TITLE+'"></div>'+'<div class="'+CSS_SCHEDULER_EVENT_CONTENT+'"></div>'+'<div class="'+CSS_SCHEDULER_EVENT_ICONS+'">'+'<span class="'+[CSS_ICON,CSS_SCHEDULER_EVENT_ICON_DISABLED].join(' ')+'"></span>'+'<span class="'+[CSS_ICON,CSS_SCHEDULER_EVENT_ICON_MEETING].join(' ')+'"></span>'+'<span class="'+[CSS_ICON,CSS_SCHEDULER_EVENT_ICON_REMINDER].join(' ')+'"></span>'+'<span class="'+[CSS_ICON,CSS_SCHEDULER_EVENT_ICON_REPEATED].join(' ')+'"></span>'+'</div>'+'</div>',initializer:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['7']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['25']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['26']++;instance.bindUI();__cov_P2BlUTNi0iOdU2ddWnfkig.s['27']++;instance.syncUI();},bindUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['8']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['28']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['29']++;instance.after({allDayChange:instance._afterAllDayChange,colorChange:instance._afterColorChange,disabledChange:instance._afterDisabledChange,endDateChange:instance._afterEndDateChange,meetingChange:instance._afterMeetingChange,reminderChange:instance._afterReminderChange,repeatedChange:instance._afterRepeatedChange,visibleChange:instance._afterVisibleChange});},syncUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['9']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['30']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['31']++;instance._uiSetAllDay(instance.get('allDay'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['32']++;instance._uiSetColor(instance.get('color'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['33']++;instance._uiSetDisabled(instance.get('disabled'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['34']++;instance._uiSetEndDate(instance.get('endDate'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['35']++;instance._uiSetMeeting(instance.get('meeting'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['36']++;instance._uiSetPast(instance._isPastEvent());__cov_P2BlUTNi0iOdU2ddWnfkig.s['37']++;instance._uiSetReminder(instance.get('reminder'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['38']++;instance._uiSetRepeated(instance.get('repeated'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['39']++;instance._uiSetVisible(instance.get('visible'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['40']++;instance.syncNodeTitleUI();__cov_P2BlUTNi0iOdU2ddWnfkig.s['41']++;instance.syncNodeContentUI();},destroy:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['10']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['42']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['43']++;instance.get('node').remove(true);},addPaddingNode:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['11']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['44']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['45']++;instance.get('node').push(A.Node.create(instance.EVENT_NODE_TEMPLATE).setData('scheduler-event',instance));__cov_P2BlUTNi0iOdU2ddWnfkig.s['46']++;instance.syncUI();},clone:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['12']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['47']++;var instance=this,cloned=null,scheduler=instance.get('scheduler');__cov_P2BlUTNi0iOdU2ddWnfkig.s['48']++;if(scheduler){__cov_P2BlUTNi0iOdU2ddWnfkig.b['7'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['49']++;cloned=new scheduler.eventModel();__cov_P2BlUTNi0iOdU2ddWnfkig.s['50']++;cloned.copyPropagateAttrValues(instance,null,{silent:true});}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['7'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['51']++;return cloned;},copyDates:function(evt,options){__cov_P2BlUTNi0iOdU2ddWnfkig.f['13']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['52']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['53']++;instance.setAttrs({endDate:DateMath.clone(evt.get('endDate')),startDate:DateMath.clone(evt.get('startDate'))},options);},copyPropagateAttrValues:function(evt,dontCopyMap,options){__cov_P2BlUTNi0iOdU2ddWnfkig.f['14']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['54']++;var instance=this,attrMap={};__cov_P2BlUTNi0iOdU2ddWnfkig.s['55']++;instance.copyDates(evt,options);__cov_P2BlUTNi0iOdU2ddWnfkig.s['56']++;A.Array.each(instance.constructor.PROPAGATE_ATTRS,function(attrName){__cov_P2BlUTNi0iOdU2ddWnfkig.f['15']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['57']++;if(!((__cov_P2BlUTNi0iOdU2ddWnfkig.b['9'][0]++,dontCopyMap)||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['9'][1]++,{})).hasOwnProperty(attrName)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['8'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['58']++;var value=evt.get(attrName);__cov_P2BlUTNi0iOdU2ddWnfkig.s['59']++;if(!isObject(value)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['10'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['60']++;attrMap[attrName]=value;}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['10'][1]++;}}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['8'][1]++;}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['61']++;instance.setAttrs(attrMap,options);},getDaysDuration:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['16']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['62']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['63']++;return DateMath.getDayOffset(instance.get('endDate'),instance.get('startDate'));},getHoursDuration:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['17']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['64']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['65']++;return DateMath.getHoursOffset(instance.get('endDate'),instance.get('startDate'));},getMinutesDuration:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['18']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['66']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['67']++;return DateMath.getMinutesOffset(instance.get('endDate'),instance.get('startDate'));},getSecondsDuration:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['19']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['68']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['69']++;return DateMath.getSecondsOffset(instance.get('endDate'),instance.get('startDate'));},sameEndDate:function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['20']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['70']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['71']++;return DateMath.compare(instance.get('endDate'),evt.get('endDate'));},sameStartDate:function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['21']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['72']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['73']++;return DateMath.compare(instance.get('startDate'),evt.get('startDate'));},isAfter:function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['22']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['74']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['75']++;var startDate=instance.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['76']++;var evtStartDate=evt.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['77']++;return DateMath.after(startDate,evtStartDate);},isBefore:function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['23']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['78']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['79']++;var startDate=instance.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['80']++;var evtStartDate=evt.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['81']++;return DateMath.before(startDate,evtStartDate);},intersects:function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['24']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['82']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['83']++;var endDate=instance.get('endDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['84']++;var startDate=instance.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['85']++;var evtStartDate=evt.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['86']++;return(__cov_P2BlUTNi0iOdU2ddWnfkig.b['11'][0]++,instance.sameStartDate(evt))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['11'][1]++,DateMath.between(evtStartDate,startDate,endDate));},intersectHours:function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['25']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['87']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['88']++;var endDate=instance.get('endDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['89']++;var startDate=instance.get('startDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['90']++;var evtModifiedStartDate=DateMath.clone(startDate);__cov_P2BlUTNi0iOdU2ddWnfkig.s['91']++;DateMath.copyHours(evtModifiedStartDate,evt.get('startDate'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['92']++;return(__cov_P2BlUTNi0iOdU2ddWnfkig.b['12'][0]++,DateMath.compare(startDate,evtModifiedStartDate))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['12'][1]++,DateMath.between(evtModifiedStartDate,startDate,endDate));},isDayBoundaryEvent:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['26']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['93']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['94']++;return DateMath.isDayBoundary(instance.get('startDate'),instance.get('endDate'));},isDayOverlapEvent:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['27']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['95']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['96']++;return DateMath.isDayOverlap(instance.get('startDate'),instance.get('endDate'));},getClearEndDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['28']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['97']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['98']++;return DateMath.safeClearTime(instance.get('endDate'));},getClearStartDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['29']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['99']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['100']++;return DateMath.safeClearTime(instance.get('startDate'));},move:function(date,options){__cov_P2BlUTNi0iOdU2ddWnfkig.f['30']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['101']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['102']++;var duration=instance.getMinutesDuration();__cov_P2BlUTNi0iOdU2ddWnfkig.s['103']++;instance.setAttrs({endDate:DateMath.add(DateMath.clone(date),DateMath.MINUTES,duration),startDate:date},options);},setContent:function(content){__cov_P2BlUTNi0iOdU2ddWnfkig.f['31']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['104']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['105']++;instance.get('node').each(function(node){__cov_P2BlUTNi0iOdU2ddWnfkig.f['32']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['106']++;var contentNode=node.one('.'+CSS_SCHEDULER_EVENT_CONTENT);__cov_P2BlUTNi0iOdU2ddWnfkig.s['107']++;contentNode.setContent(content);});},setTitle:function(content){__cov_P2BlUTNi0iOdU2ddWnfkig.f['33']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['108']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['109']++;instance.get('node').each(function(node){__cov_P2BlUTNi0iOdU2ddWnfkig.f['34']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['110']++;var titleNode=node.one('.'+CSS_SCHEDULER_EVENT_TITLE);__cov_P2BlUTNi0iOdU2ddWnfkig.s['111']++;titleNode.setContent(content);});},syncNodeContentUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['35']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['112']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['113']++;instance.setContent(instance.get('content'));},syncNodeTitleUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['36']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['114']++;var instance=this,format=instance.get('titleDateFormat'),startDate=instance.get('startDate'),endDate=instance.get('endDate'),title=[];__cov_P2BlUTNi0iOdU2ddWnfkig.s['115']++;if(format.startDate){__cov_P2BlUTNi0iOdU2ddWnfkig.b['13'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['116']++;title.push(instance._formatDate(startDate,format.startDate));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['13'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['117']++;if(format.endDate){__cov_P2BlUTNi0iOdU2ddWnfkig.b['14'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['118']++;title.push(instance._formatDate(endDate,format.endDate));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['14'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['119']++;instance.setTitle(title.join(''));},split:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['37']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['120']++;var instance=this,s1=DateMath.clone(instance.get('startDate')),e1=DateMath.clone(instance.get('endDate'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['121']++;if((__cov_P2BlUTNi0iOdU2ddWnfkig.b['16'][0]++,instance.isDayOverlapEvent())&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['16'][1]++,!instance.isDayBoundaryEvent())){__cov_P2BlUTNi0iOdU2ddWnfkig.b['15'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['122']++;var s2=DateMath.clone(s1);__cov_P2BlUTNi0iOdU2ddWnfkig.s['123']++;s2.setHours(24,0,0,0);__cov_P2BlUTNi0iOdU2ddWnfkig.s['124']++;return[[s1,DateMath.toMidnight(DateMath.clone(s1))],[s2,DateMath.clone(e1)]];}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['15'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['125']++;return[[s1,e1]];},_afterAllDayChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['38']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['126']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['127']++;instance._uiSetAllDay(event.newVal);},_afterColorChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['39']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['128']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['129']++;instance._uiSetColor(event.newVal);},_afterDisabledChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['40']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['130']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['131']++;instance._uiSetDisabled(event.newVal);},_afterEndDateChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['41']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['132']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['133']++;instance._uiSetEndDate(event.newVal);},_afterMeetingChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['42']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['134']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['135']++;instance._uiSetMeeting(event.newVal);},_afterReminderChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['43']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['136']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['137']++;instance._uiSetReminder(event.newVal);},_afterRepeatedChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['44']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['138']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['139']++;instance._uiSetRepeated(event.newVal);},_afterVisibleChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['45']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['140']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['141']++;instance._uiSetVisible(event.newVal);},_isPastEvent:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['46']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['142']++;var instance=this,endDate=instance.get('endDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['143']++;return endDate.getTime()<new Date().getTime();},_setDate:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['47']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['144']++;if(isNumber(val)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['17'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['145']++;val=new Date(val);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['17'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['146']++;return val;},_formatDate:function(date,format){__cov_P2BlUTNi0iOdU2ddWnfkig.f['48']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['147']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['148']++;var locale=instance.get('locale');__cov_P2BlUTNi0iOdU2ddWnfkig.s['149']++;return A.DataType.Date.format(date,{format:format,locale:locale});},_getTitleDateFormat:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['49']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['150']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['151']++;if(isString(val)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['18'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['152']++;val={endDate:val,startDate:val};}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['18'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['153']++;if(isFunction(val)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['19'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['154']++;val=val.call(instance);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['19'][1]++;}}__cov_P2BlUTNi0iOdU2ddWnfkig.s['155']++;return val;},_uiSetAllDay:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['50']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['156']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['157']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_ALL_DAY,!!val);},_uiSetColor:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['51']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['158']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['159']++;var node=instance.get('node');__cov_P2BlUTNi0iOdU2ddWnfkig.s['160']++;var color=Color.toHSL(val);__cov_P2BlUTNi0iOdU2ddWnfkig.s['161']++;var backgroundColor=Color.toArray(color);__cov_P2BlUTNi0iOdU2ddWnfkig.s['162']++;backgroundColor[1]*=instance.get('colorSaturationFactor');__cov_P2BlUTNi0iOdU2ddWnfkig.s['163']++;backgroundColor[2]*=instance.get('colorBrightnessFactor');__cov_P2BlUTNi0iOdU2ddWnfkig.s['164']++;backgroundColor=Color.fromArray(backgroundColor,Color.TYPES.HSL);__cov_P2BlUTNi0iOdU2ddWnfkig.s['165']++;color=Color.toRGB(color);__cov_P2BlUTNi0iOdU2ddWnfkig.s['166']++;backgroundColor=Color.toRGB(backgroundColor);__cov_P2BlUTNi0iOdU2ddWnfkig.s['167']++;if(node){__cov_P2BlUTNi0iOdU2ddWnfkig.b['20'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['168']++;node.setStyles({backgroundColor:backgroundColor,borderColor:instance.get('borderColor'),borderStyle:instance.get('borderStyle'),borderWidth:instance.get('borderWidth'),color:color});}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['20'][1]++;}},_uiSetDisabled:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['52']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['169']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['170']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_DISABLED,!!val);},_uiSetEndDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['53']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['171']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['172']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_SHORT,instance.getMinutesDuration()<=30);},_uiSetMeeting:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['54']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['173']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['174']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_MEETING,!!val);},_uiSetPast:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['55']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['175']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['176']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_PAST,!!val);},_uiSetReminder:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['56']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['177']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['178']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_REMINDER,!!val);},_uiSetRepeated:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['57']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['179']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['180']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_REPEATED,!!val);},_uiSetVisible:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['58']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['181']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['182']++;instance.get('node').toggleClass(CSS_SCHEDULER_EVENT_HIDDEN,!val);}}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['183']++;A.SchedulerEvent=SchedulerEvent;__cov_P2BlUTNi0iOdU2ddWnfkig.s['184']++;var Lang=A.Lang,isArray=Lang.isArray,isBoolean=Lang.isBoolean,isString=Lang.isString;__cov_P2BlUTNi0iOdU2ddWnfkig.s['185']++;var SchedulerCalendar=A.Base.create('scheduler-calendar',A.ModelList,[],{model:A.SchedulerEvent,initializer:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['59']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['186']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['187']++;instance.after('colorChange',instance._afterColorChange);__cov_P2BlUTNi0iOdU2ddWnfkig.s['188']++;instance.after('disabledChange',instance._afterDisabledChange);__cov_P2BlUTNi0iOdU2ddWnfkig.s['189']++;instance.after('visibleChange',instance._afterVisibleChange);__cov_P2BlUTNi0iOdU2ddWnfkig.s['190']++;instance.after(['add','remove','reset'],instance._afterEventsChange);__cov_P2BlUTNi0iOdU2ddWnfkig.s['191']++;instance.on(['remove','reset'],instance._onRemoveEvents);__cov_P2BlUTNi0iOdU2ddWnfkig.s['192']++;instance._uiSetEvents(instance.toArray());__cov_P2BlUTNi0iOdU2ddWnfkig.s['193']++;instance._setModelsAttrs({color:instance.get('color'),disabled:instance.get('disabled'),visible:instance.get('visible')});},_afterColorChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['60']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['194']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['195']++;instance._setModelsAttrs({color:instance.get('color')},{silent:event.silent});},_afterDisabledChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['61']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['196']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['197']++;instance._setModelsAttrs({disabled:instance.get('disabled')},{silent:event.silent});},_afterEventsChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['62']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['198']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['199']++;instance._setModelsAttrs({color:instance.get('color'),disabled:instance.get('disabled'),visible:instance.get('visible')},{silent:true});__cov_P2BlUTNi0iOdU2ddWnfkig.s['200']++;instance._uiSetEvents(instance.toArray(),event.skipSyncUI);},_afterVisibleChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['63']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['201']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['202']++;instance._setModelsAttrs({visible:instance.get('visible')},{silent:event.silent});},_onRemoveEvents:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['64']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['203']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['204']++;var scheduler=instance.get('scheduler');__cov_P2BlUTNi0iOdU2ddWnfkig.s['205']++;if(scheduler){__cov_P2BlUTNi0iOdU2ddWnfkig.b['21'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['206']++;scheduler.removeEvents(instance);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['21'][1]++;}},_setModelsAttrs:function(attrMap,options){__cov_P2BlUTNi0iOdU2ddWnfkig.f['65']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['207']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['208']++;instance.each(function(schedulerEvent){__cov_P2BlUTNi0iOdU2ddWnfkig.f['66']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['209']++;schedulerEvent.setAttrs(attrMap,options);});},_uiSetEvents:function(val,skipSyncUI){__cov_P2BlUTNi0iOdU2ddWnfkig.f['67']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['210']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['211']++;var scheduler=instance.get('scheduler');__cov_P2BlUTNi0iOdU2ddWnfkig.s['212']++;if(scheduler){__cov_P2BlUTNi0iOdU2ddWnfkig.b['22'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['213']++;scheduler.addEvents(val);__cov_P2BlUTNi0iOdU2ddWnfkig.s['214']++;if(!skipSyncUI){__cov_P2BlUTNi0iOdU2ddWnfkig.b['23'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['215']++;scheduler.syncEventsUI();}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['23'][1]++;}}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['22'][1]++;}}},{ATTRS:{color:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['68']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['216']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['217']++;var palette=instance.get('palette');__cov_P2BlUTNi0iOdU2ddWnfkig.s['218']++;var randomIndex=Math.ceil(Math.random()*palette.length)-1;__cov_P2BlUTNi0iOdU2ddWnfkig.s['219']++;return palette[randomIndex];},validator:isString},disabled:{value:false,validator:isBoolean},name:{value:'(no name)',validator:isString},palette:{value:['#d93636','#e63973','#b22eb3','#6e36d9','#2d70b3','#376cd9','#25998c','#249960','#24992e','#6b9926','#999926','#a68f29','#b3782d','#bf6030','#bf6060','#997399','#617181','#6b7a99','#548c85','#747446','#997e5c','#b34d1b','#993d48','#802d70'],validator:isArray},scheduler:{},visible:{value:true,validator:isBoolean}}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['220']++;A.SchedulerCalendar=SchedulerCalendar;__cov_P2BlUTNi0iOdU2ddWnfkig.s['221']++;var CSS_SCHEDULER_VIEW_=A.getClassName('scheduler-base','view',''),CSS_SCHEDULER_VIEW_SELECTED=A.getClassName('active'),DateMath=A.DataType.DateMath,Lang=A.Lang,isArray=Lang.isArray,isBoolean=Lang.isBoolean,isDate=Lang.isDate,isFunction=Lang.isFunction,isNumber=Lang.isNumber,WidgetStdMod=A.WidgetStdMod,isModelList=function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['69']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['222']++;return val instanceof A.ModelList;},isSchedulerView=function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['70']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['223']++;return val instanceof A.SchedulerView;},getCN=A.getClassName,CSS_SCHEDULER_NAV=getCN('scheduler-base','nav'),CSS_SCHEDULER_NAV_DATE=getCN('scheduler-base','nav','date'),CSS_SCHEDULER_CONTROLS=getCN('scheduler-base','controls'),CSS_SCHEDULER_HD=getCN('scheduler-base','hd'),CSS_SCHEDULER_ICON_NEXT=getCN('scheduler-base','icon','next'),CSS_SCHEDULER_ICON_PREV=getCN('scheduler-base','icon','prev'),CSS_SCHEDULER_TODAY=getCN('scheduler-base','today'),CSS_SCHEDULER_VIEW=getCN('scheduler-base','view'),CSS_SCHEDULER_VIEW_=getCN('scheduler-base','view',''),CSS_SCHEDULER_VIEW_DATE=getCN('scheduler-base','view','date'),CSS_BTN=getCN('btn'),CSS_BTN_DEFAULT=getCN('btn','default'),CSS_ICON=getCN('glyphicon'),CSS_ICON_CHEVRON_RIGHT=getCN('glyphicon','chevron','right'),CSS_ICON_CHEVRON_LEFT=getCN('glyphicon','chevron','left'),CSS_SCHEDULER_VIEWS=getCN('scheduler-base','views'),TPL_SCHEDULER_CONTROLS='<div class="col-xs-7 '+CSS_SCHEDULER_CONTROLS+'"></div>',TPL_SCHEDULER_HD='<div class="row '+CSS_SCHEDULER_HD+'"></div>',TPL_SCHEDULER_ICON_NEXT='<button aria-label="{ariaLabel}"" role="button" type="button" class="'+[CSS_SCHEDULER_ICON_NEXT,CSS_BTN,CSS_BTN_DEFAULT].join(' ')+'"><span class="'+[CSS_ICON,CSS_ICON_CHEVRON_RIGHT].join(' ')+'"></span></button>',TPL_SCHEDULER_ICON_PREV='<button aria-label="{ariaLabel}"" role="button" type="button" class="'+[CSS_SCHEDULER_ICON_PREV,CSS_BTN,CSS_BTN_DEFAULT].join(' ')+'"><span class="'+[CSS_ICON,CSS_ICON_CHEVRON_LEFT].join(' ')+'"></span></button>',TPL_SCHEDULER_NAV='<div class="btn-group"></div>',TPL_SCHEDULER_NAV_DATE='<div class="'+CSS_SCHEDULER_NAV_DATE+' hidden-xs"></div>',TPL_SCHEDULER_TODAY='<button aria-label="{ariaLabel}" role="button" type="button" class="'+[CSS_SCHEDULER_TODAY,CSS_BTN,CSS_BTN_DEFAULT].join(' ')+'">{today}</button>',TPL_SCHEDULER_VIEW_BUTTON='<button aria-label="{ariaLabel}" aria-pressed="false" type="button" class="hidden-xs '+[CSS_SCHEDULER_VIEW,CSS_SCHEDULER_VIEW_].join(' ')+'{name}" data-view-name="{name}">{label}</button>',TPL_SCHEDULER_VIEW_LIST='<option aria-label="{ariaLabel}" aria-pressed="false" class="'+[CSS_SCHEDULER_VIEW,CSS_SCHEDULER_VIEW_].join(' ')+'{name}" data-view-name="{name}">{label}</option>',TPL_SCHEDULER_VIEW_DATE='<div class="'+CSS_SCHEDULER_VIEW_DATE+' visible-xs"></div>',TPL_SCHEDULER_VIEWS='<div class="col-xs-5 form-inline '+CSS_SCHEDULER_VIEWS+'"></div>',TPL_SCHEDULER_VIEWS_SELECT='<select class="form-control visible-xs"></select>';__cov_P2BlUTNi0iOdU2ddWnfkig.s['224']++;A.SchedulerEvents=A.Base.create('scheduler-events',A.ModelList,[],{initializer:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['71']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['225']++;this._remainingItems=this.get('originalItems');__cov_P2BlUTNi0iOdU2ddWnfkig.s['226']++;this.after('originalItemsChange',this._afterOriginalItemsChange);__cov_P2BlUTNi0iOdU2ddWnfkig.s['227']++;this.get('scheduler').on('plotViewEvents',A.bind(this._onPlotViewEvents,this));},comparator:function(model){__cov_P2BlUTNi0iOdU2ddWnfkig.f['72']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['228']++;var startDateTime=model.get('startDate'),endDateTime=model.get('endDate');__cov_P2BlUTNi0iOdU2ddWnfkig.s['229']++;return startDateTime+1/(endDateTime-startDateTime);},_afterOriginalItemsChange:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['73']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['230']++;this._remainingItems=this.get('originalItems');__cov_P2BlUTNi0iOdU2ddWnfkig.s['231']++;this.remove(this.toArray());__cov_P2BlUTNi0iOdU2ddWnfkig.s['232']++;this._updateEventsForView();},_onPlotViewEvents:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['74']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['233']++;this._updateEventsForView();},_setOriginalItems:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['75']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['234']++;var originalItems=[];__cov_P2BlUTNi0iOdU2ddWnfkig.s['235']++;for(var i=0;i<val.length;i++){__cov_P2BlUTNi0iOdU2ddWnfkig.s['236']++;if(A.instanceOf(val[i],this.model)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['24'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['237']++;this.add(val[i]);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['24'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['238']++;val[i].startDate=(__cov_P2BlUTNi0iOdU2ddWnfkig.b['25'][0]++,val[i].startDate)||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['25'][1]++,new Date());__cov_P2BlUTNi0iOdU2ddWnfkig.s['239']++;if(!val[i].endDate){__cov_P2BlUTNi0iOdU2ddWnfkig.b['26'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['240']++;val[i].endDate=DateMath.clone(val[i].startDate);__cov_P2BlUTNi0iOdU2ddWnfkig.s['241']++;val[i].endDate.setHours(val[i].endDate.getHours()+1);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['26'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['242']++;originalItems.push(val[i]);}}__cov_P2BlUTNi0iOdU2ddWnfkig.s['243']++;return originalItems;},_updateEventsForView:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['76']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['244']++;var dateInterval,eventEndDate,eventStartDate,i,remainingItems=[],view=this.get('scheduler').get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['245']++;if(!view){__cov_P2BlUTNi0iOdU2ddWnfkig.b['27'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['246']++;return;}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['27'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['247']++;dateInterval=view.getDateInterval();__cov_P2BlUTNi0iOdU2ddWnfkig.s['248']++;for(i=0;i<this._remainingItems.length;i++){__cov_P2BlUTNi0iOdU2ddWnfkig.s['249']++;eventStartDate=this._remainingItems[i].startDate;__cov_P2BlUTNi0iOdU2ddWnfkig.s['250']++;eventEndDate=this._remainingItems[i].endDate;__cov_P2BlUTNi0iOdU2ddWnfkig.s['251']++;if(((__cov_P2BlUTNi0iOdU2ddWnfkig.b['29'][0]++,!dateInterval.startDate)||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['29'][1]++,eventEndDate>=dateInterval.startDate))&&((__cov_P2BlUTNi0iOdU2ddWnfkig.b['29'][2]++,!dateInterval.endDate)||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['29'][3]++,eventStartDate<=dateInterval.endDate))){__cov_P2BlUTNi0iOdU2ddWnfkig.b['28'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['252']++;this.add(this._remainingItems[i]);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['28'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['253']++;remainingItems.push(this._remainingItems[i]);}}__cov_P2BlUTNi0iOdU2ddWnfkig.s['254']++;this._remainingItems=remainingItems;},model:A.SchedulerEvent},{ATTRS:{originalItems:{setter:'_setOriginalItems',validator:A.Lang.isArray,value:[]},scheduler:{}}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['255']++;var SchedulerEventSupport=function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['77']++;};__cov_P2BlUTNi0iOdU2ddWnfkig.s['256']++;SchedulerEventSupport.ATTRS={};__cov_P2BlUTNi0iOdU2ddWnfkig.s['257']++;A.mix(SchedulerEventSupport.prototype,{calendarModel:A.SchedulerCalendar,eventModel:A.SchedulerEvent,eventsModel:A.SchedulerEvents,initializer:function(config){__cov_P2BlUTNi0iOdU2ddWnfkig.f['78']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['258']++;var instance=this,events=instance._toSchedulerEvents((__cov_P2BlUTNi0iOdU2ddWnfkig.b['30'][0]++,config.items)||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['30'][1]++,config.events));__cov_P2BlUTNi0iOdU2ddWnfkig.s['259']++;instance._events=new instance.eventsModel({after:{add:A.bind(instance._afterAddEvent,instance)},bubbleTargets:instance,originalItems:this.get('pagination')?(__cov_P2BlUTNi0iOdU2ddWnfkig.b['31'][0]++,events):(__cov_P2BlUTNi0iOdU2ddWnfkig.b['31'][1]++,[]),scheduler:instance});__cov_P2BlUTNi0iOdU2ddWnfkig.s['260']++;if(!this.get('pagination')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['32'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['261']++;this._events.add(events);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['32'][1]++;}},addEvents:function(models){__cov_P2BlUTNi0iOdU2ddWnfkig.f['79']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['262']++;var instance=this,events=instance._toSchedulerEvents(models);__cov_P2BlUTNi0iOdU2ddWnfkig.s['263']++;return instance._events.add(events);},eachEvent:function(fn){__cov_P2BlUTNi0iOdU2ddWnfkig.f['80']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['264']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['265']++;return instance._events.each(fn);},flushEvents:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['81']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['266']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['267']++;instance._events.each(function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['82']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['268']++;delete evt._filtered;});},getEventByClientId:function(clientId){__cov_P2BlUTNi0iOdU2ddWnfkig.f['83']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['269']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['270']++;return instance._events.getByClientId(clientId);},getEvents:function(filterFn,skipSort){__cov_P2BlUTNi0iOdU2ddWnfkig.f['84']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['271']++;var instance=this,events=instance._events;__cov_P2BlUTNi0iOdU2ddWnfkig.s['272']++;if(!skipSort){__cov_P2BlUTNi0iOdU2ddWnfkig.b['33'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['273']++;events.sort({silent:true});}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['33'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['274']++;if(filterFn){__cov_P2BlUTNi0iOdU2ddWnfkig.b['34'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['275']++;events=events.filter(filterFn);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['34'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['276']++;events=events.toArray();}__cov_P2BlUTNi0iOdU2ddWnfkig.s['277']++;return events;},getEventsByDay:function(date,includeOverlap){__cov_P2BlUTNi0iOdU2ddWnfkig.f['85']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['278']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['279']++;date=DateMath.safeClearTime(date);__cov_P2BlUTNi0iOdU2ddWnfkig.s['280']++;return instance.getEvents(function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['86']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['281']++;return(__cov_P2BlUTNi0iOdU2ddWnfkig.b['35'][0]++,DateMath.compare(evt.getClearStartDate(),date))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['35'][1]++,includeOverlap)&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['35'][2]++,DateMath.compare(evt.getClearEndDate(),date));});},getIntersectEvents:function(date){__cov_P2BlUTNi0iOdU2ddWnfkig.f['87']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['282']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['283']++;date=DateMath.safeClearTime(date);__cov_P2BlUTNi0iOdU2ddWnfkig.s['284']++;return instance.getEvents(function(evt){__cov_P2BlUTNi0iOdU2ddWnfkig.f['88']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['285']++;var startDate=evt.getClearStartDate();__cov_P2BlUTNi0iOdU2ddWnfkig.s['286']++;var endDate=evt.getClearEndDate();__cov_P2BlUTNi0iOdU2ddWnfkig.s['287']++;return(__cov_P2BlUTNi0iOdU2ddWnfkig.b['36'][0]++,evt.get('visible'))&&((__cov_P2BlUTNi0iOdU2ddWnfkig.b['36'][1]++,DateMath.compare(date,startDate))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['36'][2]++,DateMath.compare(date,endDate))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['36'][3]++,DateMath.between(date,startDate,endDate)));});},removeEvents:function(models){__cov_P2BlUTNi0iOdU2ddWnfkig.f['89']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['288']++;var instance=this,events=instance._toSchedulerEvents(models);__cov_P2BlUTNi0iOdU2ddWnfkig.s['289']++;return instance._events.remove(events);},resetEvents:function(models){__cov_P2BlUTNi0iOdU2ddWnfkig.f['90']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['290']++;var instance=this,events=instance._toSchedulerEvents(models);__cov_P2BlUTNi0iOdU2ddWnfkig.s['291']++;return instance._events.reset(events);},_afterAddEvent:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['91']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['292']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['293']++;event.model.set('scheduler',instance);},_toSchedulerEvents:function(values){__cov_P2BlUTNi0iOdU2ddWnfkig.f['92']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['294']++;var instance=this,events=[];__cov_P2BlUTNi0iOdU2ddWnfkig.s['295']++;if(isModelList(values)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['37'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['296']++;events=values.toArray();__cov_P2BlUTNi0iOdU2ddWnfkig.s['297']++;values.set('scheduler',instance);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['37'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['298']++;if(isArray(values)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['38'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['299']++;A.Array.each(values,function(value){__cov_P2BlUTNi0iOdU2ddWnfkig.f['93']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['300']++;if(isModelList(value)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['39'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['301']++;events=events.concat(value.toArray());__cov_P2BlUTNi0iOdU2ddWnfkig.s['302']++;value.set('scheduler',instance);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['39'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['303']++;events.push(value);}});}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['38'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['304']++;events=values;}}__cov_P2BlUTNi0iOdU2ddWnfkig.s['305']++;return events;}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['306']++;A.SchedulerEventSupport=SchedulerEventSupport;__cov_P2BlUTNi0iOdU2ddWnfkig.s['307']++;var SchedulerBase=A.Component.create({NAME:'scheduler-base',ATTRS:{activeView:{validator:isSchedulerView},ariaLabels:{value:{agenda:'View Agenda',day:'View by Day',month:'View by Month',next:'Go to Next',previous:'Go to Previous',today:'Go to Today',week:'View by Week'}},currentTimeFn:{value:function(callback){__cov_P2BlUTNi0iOdU2ddWnfkig.f['94']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['308']++;callback(new Date());}},date:{value:new Date(),validator:isDate},focusmanager:{value:{descendants:'button',keys:{next:'down:39',previous:'down:37'},circular:false},writeOnce:'initOnly'},eventRecorder:{setter:'_setEventRecorder'},strings:{value:{agenda:'Agenda',day:'Day',month:'Month',table:'Table',today:'Today',week:'Week',year:'Year'}},navigationDateFormatter:{value:function(date){__cov_P2BlUTNi0iOdU2ddWnfkig.f['95']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['309']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['310']++;return A.DataType.Date.format(date,{format:'%B %d, %Y',locale:instance.get('locale')});},validator:isFunction},pagination:{validator:A.Lang.isBoolean,value:true,writeOnce:'initOnly'},views:{setter:'_setViews',value:[]},viewDate:{getter:'_getViewDate',readOnly:true},firstDayOfWeek:{value:0,validator:isNumber},controlsNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['96']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['311']++;return A.Node.create(TPL_SCHEDULER_CONTROLS);}},viewDateNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['97']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['312']++;return A.Node.create(TPL_SCHEDULER_VIEW_DATE);}},headerNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['98']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['313']++;return A.Node.create(TPL_SCHEDULER_HD);}},iconNextNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['99']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['314']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['315']++;return A.Node.create(A.Lang.sub(TPL_SCHEDULER_ICON_NEXT,{ariaLabel:instance.getAriaLabel('next')}));}},iconPrevNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['100']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['316']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['317']++;return A.Node.create(A.Lang.sub(TPL_SCHEDULER_ICON_PREV,{ariaLabel:instance.getAriaLabel('previous')}));}},navNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['101']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['318']++;return A.Node.create(TPL_SCHEDULER_NAV);}},navDateNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['102']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['319']++;return A.Node.create(TPL_SCHEDULER_NAV_DATE);}},showHeader:{validator:isBoolean,value:true},viewsSelectNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['103']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['320']++;return A.Node.create(TPL_SCHEDULER_VIEWS_SELECT);}},todayDate:{value:new Date(),validator:isDate},todayNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['104']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['321']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['322']++;return A.Node.create(A.Lang.sub(this._processTemplate(TPL_SCHEDULER_TODAY),{ariaLabel:instance.getAriaLabel('today')}));}},viewsNode:{valueFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['105']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['323']++;return A.Node.create(TPL_SCHEDULER_VIEWS);}}},HTML_PARSER:{controlsNode:'.'+CSS_SCHEDULER_CONTROLS,viewDateNode:'.'+CSS_SCHEDULER_VIEW_DATE,headerNode:'.'+CSS_SCHEDULER_HD,iconNextNode:'.'+CSS_SCHEDULER_ICON_NEXT,iconPrevNode:'.'+CSS_SCHEDULER_ICON_PREV,navNode:'.'+CSS_SCHEDULER_NAV,navDateNode:'.'+CSS_SCHEDULER_NAV_DATE,todayNode:'.'+CSS_SCHEDULER_TODAY,viewsNode:'.'+CSS_SCHEDULER_VIEWS},UI_ATTRS:['date','activeView','showHeader'],AUGMENTS:[A.SchedulerEventSupport,A.WidgetStdMod],prototype:{viewStack:null,initializer:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['106']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['324']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['325']++;instance.viewStack={};__cov_P2BlUTNi0iOdU2ddWnfkig.s['326']++;instance.controlsNode=instance.get('controlsNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['327']++;instance.viewDateNode=instance.get('viewDateNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['328']++;instance.header=instance.get('headerNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['329']++;instance.iconNextNode=instance.get('iconNextNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['330']++;instance.iconPrevNode=instance.get('iconPrevNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['331']++;instance.navNode=instance.get('navNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['332']++;instance.navDateNode=instance.get('navDateNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['333']++;instance.viewsSelectNode=instance.get('viewsSelectNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['334']++;instance.todayNode=instance.get('todayNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['335']++;instance.viewsNode=instance.get('viewsNode');__cov_P2BlUTNi0iOdU2ddWnfkig.s['336']++;instance._populateViewNodes();__cov_P2BlUTNi0iOdU2ddWnfkig.s['337']++;instance.after({activeViewChange:instance._afterActiveViewChange,render:instance._afterRender});__cov_P2BlUTNi0iOdU2ddWnfkig.s['338']++;this.publish({plotViewEvents:{defaultFn:this._defPlotViewEventsFn}});},bindUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['107']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['339']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['340']++;instance._bindDelegate();},syncUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['108']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['341']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['342']++;instance.syncStdContent();},getViewByName:function(name){__cov_P2BlUTNi0iOdU2ddWnfkig.f['109']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['343']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['344']++;return instance.viewStack[name];},getViewTriggerNode:function(view){__cov_P2BlUTNi0iOdU2ddWnfkig.f['110']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['345']++;var instance=this,name=view.get('name'),viewportWidth=A.DOM.winWidth();__cov_P2BlUTNi0iOdU2ddWnfkig.s['346']++;if(viewportWidth>=768){__cov_P2BlUTNi0iOdU2ddWnfkig.b['40'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['347']++;return instance.viewsNode.one('.'+CSS_SCHEDULER_VIEW_+name);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['40'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['348']++;return instance.viewsSelectNode.one('.'+CSS_SCHEDULER_VIEW_+name);},getStrings:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['111']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['349']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['350']++;return instance.get('strings');},getString:function(key){__cov_P2BlUTNi0iOdU2ddWnfkig.f['112']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['351']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['352']++;return instance.getStrings()[key];},getAriaLabel:function(key){__cov_P2BlUTNi0iOdU2ddWnfkig.f['113']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['353']++;var instance=this,ariaLabels=instance.get('ariaLabels');__cov_P2BlUTNi0iOdU2ddWnfkig.s['354']++;return ariaLabels[key];},renderView:function(view){__cov_P2BlUTNi0iOdU2ddWnfkig.f['114']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['355']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['356']++;if(view){__cov_P2BlUTNi0iOdU2ddWnfkig.b['41'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['357']++;view.show();__cov_P2BlUTNi0iOdU2ddWnfkig.s['358']++;if(!view.get('rendered')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['42'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['359']++;if(!instance.bodyNode){__cov_P2BlUTNi0iOdU2ddWnfkig.b['43'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['360']++;instance.setStdModContent(WidgetStdMod.BODY,'');}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['43'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['361']++;instance.bodyNode.prepend(instance.viewDateNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['362']++;view.render(instance.bodyNode);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['42'][1]++;}}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['41'][1]++;}},plotViewEvents:function(view){__cov_P2BlUTNi0iOdU2ddWnfkig.f['115']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['363']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['364']++;view.plotEvents(instance.getEvents());},syncEventsUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['116']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['365']++;var instance=this,activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['366']++;if(activeView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['44'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['367']++;this.fire('plotViewEvents');}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['44'][1]++;}},renderButtonGroup:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['117']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['368']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['369']++;if(!instance.buttonGroup){__cov_P2BlUTNi0iOdU2ddWnfkig.b['45'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['370']++;instance.buttonGroup=new A.ButtonGroup({boundingBox:instance.viewsNode,on:{selectionChange:A.bind(instance._onButtonGroupSelectionChange,instance)}}).render();}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['45'][1]++;}},renderDropdownList:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['118']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['371']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['372']++;instance.viewsSelectNode.on('change',A.bind(instance._onSelectionChange,instance));},syncStdContent:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['119']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['373']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['374']++;if(instance.get('showHeader')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['46'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['375']++;instance.renderButtonGroup();__cov_P2BlUTNi0iOdU2ddWnfkig.s['376']++;instance.navNode.append(instance.iconPrevNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['377']++;instance.navNode.append(instance.todayNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['378']++;instance.navNode.append(instance.iconNextNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['379']++;instance.controlsNode.append(instance.navNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['380']++;instance.controlsNode.append(instance.navDateNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['381']++;instance.viewsNode.append(instance.viewsSelectNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['382']++;instance.header.append(instance.controlsNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['383']++;instance.header.append(instance.viewsNode);__cov_P2BlUTNi0iOdU2ddWnfkig.s['384']++;instance.setStdModContent(WidgetStdMod.HEADER,instance.header.getDOM());__cov_P2BlUTNi0iOdU2ddWnfkig.s['385']++;instance.header.show();}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['46'][1]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['386']++;instance.header.hide();}},_afterActiveViewChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['120']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['387']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['388']++;if(instance.get('rendered')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['47'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['389']++;var activeView=event.newVal;__cov_P2BlUTNi0iOdU2ddWnfkig.s['390']++;var lastActiveView=event.prevVal;__cov_P2BlUTNi0iOdU2ddWnfkig.s['391']++;if(lastActiveView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['48'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['392']++;lastActiveView.hide();}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['48'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['393']++;instance.renderView(activeView);__cov_P2BlUTNi0iOdU2ddWnfkig.s['394']++;var eventRecorder=instance.get('eventRecorder');__cov_P2BlUTNi0iOdU2ddWnfkig.s['395']++;if(eventRecorder){__cov_P2BlUTNi0iOdU2ddWnfkig.b['49'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['396']++;eventRecorder.hidePopover();}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['49'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['397']++;instance._uiSetDate(instance.get('date'));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['47'][1]++;}},_afterRender:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['121']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['398']++;var instance=this,activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['399']++;instance.renderView(activeView);__cov_P2BlUTNi0iOdU2ddWnfkig.s['400']++;instance.renderDropdownList();__cov_P2BlUTNi0iOdU2ddWnfkig.s['401']++;instance._uiSetDate(instance.get('date'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['402']++;instance._uiSetActiveView(activeView);__cov_P2BlUTNi0iOdU2ddWnfkig.s['403']++;instance._plugFocusManager();},_bindDelegate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['122']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['404']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['405']++;instance.controlsNode.delegate('click',instance._onClickPrevIcon,'.'+CSS_SCHEDULER_ICON_PREV,instance);__cov_P2BlUTNi0iOdU2ddWnfkig.s['406']++;instance.controlsNode.delegate('click',instance._onClickNextIcon,'.'+CSS_SCHEDULER_ICON_NEXT,instance);__cov_P2BlUTNi0iOdU2ddWnfkig.s['407']++;instance.controlsNode.delegate('click',instance._onClickToday,'.'+CSS_SCHEDULER_TODAY,instance);},_createViewTriggerNode:function(view,tpl){__cov_P2BlUTNi0iOdU2ddWnfkig.f['123']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['408']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['409']++;var name=view.get('name');__cov_P2BlUTNi0iOdU2ddWnfkig.s['410']++;return A.Node.create(A.Lang.sub(tpl,{name:name,label:(__cov_P2BlUTNi0iOdU2ddWnfkig.b['50'][0]++,instance.getString(name))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['50'][1]++,name),ariaLabel:instance.getAriaLabel(name)}));},_defPlotViewEventsFn:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['124']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['411']++;this.plotViewEvents(this.get('activeView'));},_getViewDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['125']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['412']++;var instance=this,date=instance.get('date'),activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['413']++;if(activeView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['51'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['414']++;date=activeView.getAdjustedViewDate(date);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['51'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['415']++;return date;},_onButtonGroupSelectionChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['126']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['416']++;var instance=this,viewName=event.originEvent.target.attr('data-view-name');__cov_P2BlUTNi0iOdU2ddWnfkig.s['417']++;instance.set('activeView',instance.getViewByName(viewName));__cov_P2BlUTNi0iOdU2ddWnfkig.s['418']++;instance.viewsSelectNode.one('[data-view-name='+viewName+']').set('selected',true);__cov_P2BlUTNi0iOdU2ddWnfkig.s['419']++;event.preventDefault();},_onClickToday:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['127']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['420']++;var instance=this,activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['421']++;if(activeView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['52'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['422']++;instance.set('date',instance.get('todayDate'));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['52'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['423']++;event.preventDefault();},_onClickNextIcon:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['128']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['424']++;var instance=this,activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['425']++;if(activeView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['53'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['426']++;instance.set('date',activeView.get('nextDate'));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['53'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['427']++;event.preventDefault();},_onClickPrevIcon:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['129']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['428']++;var instance=this,activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['429']++;if(activeView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['54'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['430']++;instance.set('date',activeView.get('prevDate'));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['54'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['431']++;event.preventDefault();},_onSelectionChange:function(event){__cov_P2BlUTNi0iOdU2ddWnfkig.f['130']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['432']++;var instance=this,target=event.target,index=target.get('selectedIndex'),viewName=target.get('options').item(index).attr('data-view-name');__cov_P2BlUTNi0iOdU2ddWnfkig.s['433']++;instance.set('activeView',instance.getViewByName(viewName));},_populateViewNodes:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['131']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['434']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['435']++;var views=instance.get('views');__cov_P2BlUTNi0iOdU2ddWnfkig.s['436']++;A.Array.each(views,function(view){__cov_P2BlUTNi0iOdU2ddWnfkig.f['132']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['437']++;instance.viewsSelectNode.append(instance._createViewTriggerNode(view,TPL_SCHEDULER_VIEW_LIST));__cov_P2BlUTNi0iOdU2ddWnfkig.s['438']++;instance.viewsNode.append(instance._createViewTriggerNode(view,TPL_SCHEDULER_VIEW_BUTTON));});},_plugFocusManager:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['133']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['439']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['440']++;instance.viewsNode.plug(A.Plugin.NodeFocusManager,this.get('focusmanager'));__cov_P2BlUTNi0iOdU2ddWnfkig.s['441']++;instance.navNode.plug(A.Plugin.NodeFocusManager,this.get('focusmanager'));},_processTemplate:function(tpl){__cov_P2BlUTNi0iOdU2ddWnfkig.f['134']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['442']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['443']++;return A.Lang.sub(tpl,instance.getStrings());},_setEventRecorder:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['135']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['444']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['445']++;if(val){__cov_P2BlUTNi0iOdU2ddWnfkig.b['55'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['446']++;val.setAttrs({scheduler:instance},{silent:true});__cov_P2BlUTNi0iOdU2ddWnfkig.s['447']++;val.addTarget(instance);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['55'][1]++;}},_setViews:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['136']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['448']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['449']++;var views=[];__cov_P2BlUTNi0iOdU2ddWnfkig.s['450']++;A.Array.each(val,function(view){__cov_P2BlUTNi0iOdU2ddWnfkig.f['137']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['451']++;if((__cov_P2BlUTNi0iOdU2ddWnfkig.b['57'][0]++,isSchedulerView(view))&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['57'][1]++,!view.get('rendered'))){__cov_P2BlUTNi0iOdU2ddWnfkig.b['56'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['452']++;view.setAttrs({scheduler:instance});__cov_P2BlUTNi0iOdU2ddWnfkig.s['453']++;views.push(view);__cov_P2BlUTNi0iOdU2ddWnfkig.s['454']++;instance.viewStack[view.get('name')]=view;}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['56'][1]++;}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['455']++;if(!instance.get('activeView')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['58'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['456']++;instance.set('activeView',val[0]);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['58'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['457']++;return views;},_uiSetActiveView:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['138']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['458']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['459']++;if(val){__cov_P2BlUTNi0iOdU2ddWnfkig.b['59'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['460']++;var activeView=val.get('name'),activeNav=instance.viewsNode.one('.'+CSS_SCHEDULER_VIEW_+activeView);__cov_P2BlUTNi0iOdU2ddWnfkig.s['461']++;if(activeNav){__cov_P2BlUTNi0iOdU2ddWnfkig.b['60'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['462']++;instance.viewsNode.all('button').removeClass(CSS_SCHEDULER_VIEW_SELECTED).setAttribute('aria-pressed',false);__cov_P2BlUTNi0iOdU2ddWnfkig.s['463']++;instance.viewsSelectNode.one('[data-view-name='+activeView+']').set('selected',true);__cov_P2BlUTNi0iOdU2ddWnfkig.s['464']++;activeNav.addClass(CSS_SCHEDULER_VIEW_SELECTED).setAttribute('aria-pressed',true);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['60'][1]++;}}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['59'][1]++;}},_uiSetDate:function(date){__cov_P2BlUTNi0iOdU2ddWnfkig.f['139']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['465']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['466']++;var formatter=instance.get('navigationDateFormatter');__cov_P2BlUTNi0iOdU2ddWnfkig.s['467']++;var navigationTitle=formatter.call(instance,date);__cov_P2BlUTNi0iOdU2ddWnfkig.s['468']++;if(instance.get('rendered')){__cov_P2BlUTNi0iOdU2ddWnfkig.b['61'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['469']++;var activeView=instance.get('activeView');__cov_P2BlUTNi0iOdU2ddWnfkig.s['470']++;if(activeView){__cov_P2BlUTNi0iOdU2ddWnfkig.b['62'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['471']++;activeView._uiSetDate(date);__cov_P2BlUTNi0iOdU2ddWnfkig.s['472']++;formatter=activeView.get('navigationDateFormatter');__cov_P2BlUTNi0iOdU2ddWnfkig.s['473']++;navigationTitle=formatter.call(activeView,date);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['62'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['474']++;instance.navDateNode.html(navigationTitle);__cov_P2BlUTNi0iOdU2ddWnfkig.s['475']++;instance.viewDateNode.html(navigationTitle);__cov_P2BlUTNi0iOdU2ddWnfkig.s['476']++;instance.syncEventsUI();}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['61'][1]++;}},_uiSetShowHeader:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['140']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['477']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['478']++;instance.syncStdContent();}}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['479']++;A.Scheduler=SchedulerBase;__cov_P2BlUTNi0iOdU2ddWnfkig.s['480']++;var Lang=A.Lang,isBoolean=Lang.isBoolean,isFunction=Lang.isFunction,isString=Lang.isString,DateMath=A.DataType.DateMath,CSS_SCHEDULER_VIEW_NOSCROLL=A.getClassName('scheduler-view','noscroll'),CSS_SCHEDULER_VIEW_SCROLLABLE=A.getClassName('scheduler-view','scrollable');__cov_P2BlUTNi0iOdU2ddWnfkig.s['481']++;var SchedulerView=A.Component.create({NAME:'scheduler-view',AUGMENTS:[A.WidgetStdMod],ATTRS:{bodyContent:{value:''},filterFn:{validator:isFunction,value:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['141']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['482']++;return true;}},height:{value:650},initialScroll:{validator:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['142']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['483']++;return(__cov_P2BlUTNi0iOdU2ddWnfkig.b['63'][0]++,A.Lang.isBoolean(val))||(__cov_P2BlUTNi0iOdU2ddWnfkig.b['63'][1]++,A.Lang.isDate(val));},value:true,writeOnce:'initOnly'},isoTime:{value:false,validator:isBoolean},name:{value:'',validator:isString},navigationDateFormatter:{value:function(date){__cov_P2BlUTNi0iOdU2ddWnfkig.f['143']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['484']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['485']++;var scheduler=instance.get('scheduler');__cov_P2BlUTNi0iOdU2ddWnfkig.s['486']++;return A.DataType.Date.format(date,{format:'%A, %d %B, %Y',locale:scheduler.get('locale')});},validator:isFunction},nextDate:{getter:'getNextDate',readOnly:true},prevDate:{getter:'getPrevDate',readOnly:true},scheduler:{lazyAdd:false,setter:'_setScheduler'},scrollable:{value:true,validator:isBoolean},triggerNode:{getter:'_getTriggerNode',setter:A.one},visible:{value:false}},BIND_UI_ATTRS:['scrollable'],prototype:{initializer:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['144']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['487']++;this.after('render',this._afterRender);__cov_P2BlUTNi0iOdU2ddWnfkig.s['488']++;A.after(this._afterBasePlotEvents,this,'plotEvents');},syncUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['145']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['489']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['490']++;instance.syncStdContent();},getAdjustedViewDate:function(date){__cov_P2BlUTNi0iOdU2ddWnfkig.f['146']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['491']++;return DateMath.toMidnight(date);},flushViewCache:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['147']++;},getDateInterval:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['148']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['492']++;return{endDate:DateMath.toLastHour(DateMath.subtract(this.getNextDate(),DateMath.DAY,1)),startDate:this.getAdjustedViewDate(this.get('scheduler').get('viewDate'))};},getNextDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['149']++;},getPrevDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['150']++;},getToday:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['151']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['493']++;return DateMath.clearTime(new Date());},limitDate:function(date,maxDate){__cov_P2BlUTNi0iOdU2ddWnfkig.f['152']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['494']++;if(DateMath.after(date,maxDate)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['64'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['495']++;date=DateMath.clone(maxDate);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['64'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['496']++;return date;},plotEvents:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['153']++;},scrollToDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['154']++;},syncStdContent:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['155']++;},syncEventUI:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['156']++;},_uiSetDate:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['157']++;},_afterBasePlotEvents:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['158']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['497']++;var initialScroll=this.get('initialScroll');__cov_P2BlUTNi0iOdU2ddWnfkig.s['498']++;if((__cov_P2BlUTNi0iOdU2ddWnfkig.b['66'][0]++,initialScroll!==false)&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['66'][1]++,this.get('rendered'))&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['66'][2]++,this.get('visible'))&&(__cov_P2BlUTNi0iOdU2ddWnfkig.b['66'][3]++,!this._scrollDone)){__cov_P2BlUTNi0iOdU2ddWnfkig.b['65'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['499']++;this.scrollToDate(initialScroll===true?(__cov_P2BlUTNi0iOdU2ddWnfkig.b['67'][0]++,new Date()):(__cov_P2BlUTNi0iOdU2ddWnfkig.b['67'][1]++,initialScroll));__cov_P2BlUTNi0iOdU2ddWnfkig.s['500']++;this._scrollDone=true;}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['65'][1]++;}},_afterRender:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['159']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['501']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['502']++;instance._uiSetScrollable(instance.get('scrollable'));},_getTriggerNode:function(){__cov_P2BlUTNi0iOdU2ddWnfkig.f['160']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['503']++;return this.get('scheduler').getViewTriggerNode(this);},_setScheduler:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['161']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['504']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['505']++;var scheduler=instance.get('scheduler');__cov_P2BlUTNi0iOdU2ddWnfkig.s['506']++;if(scheduler){__cov_P2BlUTNi0iOdU2ddWnfkig.b['68'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['507']++;instance.removeTarget(scheduler);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['68'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['508']++;if(val){__cov_P2BlUTNi0iOdU2ddWnfkig.b['69'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['509']++;instance.addTarget(val);__cov_P2BlUTNi0iOdU2ddWnfkig.s['510']++;val.after(['*:add','*:remove','*:reset'],A.bind(instance.flushViewCache,instance));}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['69'][1]++;}__cov_P2BlUTNi0iOdU2ddWnfkig.s['511']++;return val;},_uiSetScrollable:function(val){__cov_P2BlUTNi0iOdU2ddWnfkig.f['162']++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['512']++;var instance=this;__cov_P2BlUTNi0iOdU2ddWnfkig.s['513']++;var bodyNode=instance.bodyNode;__cov_P2BlUTNi0iOdU2ddWnfkig.s['514']++;if(bodyNode){__cov_P2BlUTNi0iOdU2ddWnfkig.b['70'][0]++;__cov_P2BlUTNi0iOdU2ddWnfkig.s['515']++;bodyNode.toggleClass(CSS_SCHEDULER_VIEW_SCROLLABLE,val);__cov_P2BlUTNi0iOdU2ddWnfkig.s['516']++;bodyNode.toggleClass(CSS_SCHEDULER_VIEW_NOSCROLL,!val);}else{__cov_P2BlUTNi0iOdU2ddWnfkig.b['70'][1]++;}}}});__cov_P2BlUTNi0iOdU2ddWnfkig.s['517']++;A.SchedulerView=SchedulerView;},'3.1.0',{'requires':['model','model-list','widget-stdmod','color-hsl','aui-event-base','aui-node-base','aui-component','aui-datatype','aui-button','node-focusmanager'],'skinnable':true});
