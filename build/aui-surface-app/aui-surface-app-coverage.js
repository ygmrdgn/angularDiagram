if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-surface-app/aui-surface-app.js']) {
   __coverage__['build/aui-surface-app/aui-surface-app.js'] = {"path":"build/aui-surface-app/aui-surface-app.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":46}}},"2":{"name":"(anonymous_2)","line":129,"loc":{"start":{"line":129,"column":17},"end":{"line":129,"column":28}}},"3":{"name":"(anonymous_3)","line":160,"loc":{"start":{"line":160,"column":21},"end":{"line":160,"column":39}}},"4":{"name":"(anonymous_4)","line":174,"loc":{"start":{"line":174,"column":17},"end":{"line":174,"column":36}}},"5":{"name":"(anonymous_5)","line":179,"loc":{"start":{"line":179,"column":31},"end":{"line":179,"column":49}}},"6":{"name":"(anonymous_6)","line":198,"loc":{"start":{"line":198,"column":14},"end":{"line":198,"column":25}}},"7":{"name":"(anonymous_7)","line":216,"loc":{"start":{"line":216,"column":17},"end":{"line":216,"column":32}}},"8":{"name":"(anonymous_8)","line":230,"loc":{"start":{"line":230,"column":41},"end":{"line":230,"column":57}}},"9":{"name":"(anonymous_9)","line":243,"loc":{"start":{"line":243,"column":14},"end":{"line":243,"column":49}}},"10":{"name":"(anonymous_10)","line":260,"loc":{"start":{"line":260,"column":14},"end":{"line":260,"column":29}}},"11":{"name":"(anonymous_11)","line":274,"loc":{"start":{"line":274,"column":18},"end":{"line":274,"column":29}}},"12":{"name":"(anonymous_12)","line":277,"loc":{"start":{"line":277,"column":18},"end":{"line":277,"column":29}}},"13":{"name":"(anonymous_13)","line":280,"loc":{"start":{"line":280,"column":16},"end":{"line":280,"column":33}}},"14":{"name":"(anonymous_14)","line":295,"loc":{"start":{"line":295,"column":25},"end":{"line":295,"column":41}}},"15":{"name":"(anonymous_15)","line":305,"loc":{"start":{"line":305,"column":12},"end":{"line":305,"column":29}}},"16":{"name":"(anonymous_16)","line":312,"loc":{"start":{"line":312,"column":12},"end":{"line":312,"column":23}}},"17":{"name":"(anonymous_17)","line":326,"loc":{"start":{"line":326,"column":17},"end":{"line":326,"column":52}}},"18":{"name":"(anonymous_18)","line":358,"loc":{"start":{"line":358,"column":12},"end":{"line":358,"column":31}}},"19":{"name":"(anonymous_19)","line":360,"loc":{"start":{"line":360,"column":49},"end":{"line":360,"column":78}}},"20":{"name":"(anonymous_20)","line":371,"loc":{"start":{"line":371,"column":12},"end":{"line":371,"column":23}}},"21":{"name":"(anonymous_21)","line":374,"loc":{"start":{"line":374,"column":12},"end":{"line":374,"column":29}}},"22":{"name":"(anonymous_22)","line":391,"loc":{"start":{"line":391,"column":23},"end":{"line":391,"column":70}}},"23":{"name":"(anonymous_23)","line":423,"loc":{"start":{"line":423,"column":26},"end":{"line":423,"column":58}}},"24":{"name":"(anonymous_24)","line":438,"loc":{"start":{"line":438,"column":23},"end":{"line":438,"column":42}}},"25":{"name":"(anonymous_25)","line":449,"loc":{"start":{"line":449,"column":21},"end":{"line":449,"column":36}}},"26":{"name":"(anonymous_26)","line":461,"loc":{"start":{"line":461,"column":17},"end":{"line":461,"column":28}}},"27":{"name":"(anonymous_27)","line":481,"loc":{"start":{"line":481,"column":19},"end":{"line":481,"column":30}}},"28":{"name":"(anonymous_28)","line":488,"loc":{"start":{"line":488,"column":29},"end":{"line":488,"column":40}}},"29":{"name":"(anonymous_29)","line":503,"loc":{"start":{"line":503,"column":24},"end":{"line":503,"column":46}}},"30":{"name":"(anonymous_30)","line":538,"loc":{"start":{"line":538,"column":17},"end":{"line":538,"column":33}}},"31":{"name":"(anonymous_31)","line":562,"loc":{"start":{"line":562,"column":38},"end":{"line":562,"column":49}}},"32":{"name":"(anonymous_32)","line":580,"loc":{"start":{"line":580,"column":13},"end":{"line":580,"column":24}}},"33":{"name":"(anonymous_33)","line":584,"loc":{"start":{"line":584,"column":19},"end":{"line":584,"column":30}}},"34":{"name":"(anonymous_34)","line":602,"loc":{"start":{"line":602,"column":17},"end":{"line":602,"column":33}}},"35":{"name":"(anonymous_35)","line":631,"loc":{"start":{"line":631,"column":15},"end":{"line":631,"column":26}}},"36":{"name":"(anonymous_36)","line":642,"loc":{"start":{"line":642,"column":24},"end":{"line":642,"column":35}}},"37":{"name":"(anonymous_37)","line":655,"loc":{"start":{"line":655,"column":19},"end":{"line":655,"column":42}}},"38":{"name":"(anonymous_38)","line":658,"loc":{"start":{"line":658,"column":37},"end":{"line":658,"column":55}}},"39":{"name":"(anonymous_39)","line":674,"loc":{"start":{"line":674,"column":21},"end":{"line":674,"column":44}}},"40":{"name":"(anonymous_40)","line":677,"loc":{"start":{"line":677,"column":35},"end":{"line":677,"column":51}}},"41":{"name":"(anonymous_41)","line":698,"loc":{"start":{"line":698,"column":25},"end":{"line":698,"column":54}}},"42":{"name":"(anonymous_42)","line":725,"loc":{"start":{"line":725,"column":18},"end":{"line":725,"column":29}}},"43":{"name":"(anonymous_43)","line":741,"loc":{"start":{"line":741,"column":20},"end":{"line":741,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":806,"column":3}},"2":{"start":{"line":3,"column":0},"end":{"line":4,"column":23}},"3":{"start":{"line":6,"column":0},"end":{"line":795,"column":3}},"4":{"start":{"line":130,"column":8},"end":{"line":130,"column":25}},"5":{"start":{"line":131,"column":8},"end":{"line":131,"column":27}},"6":{"start":{"line":132,"column":8},"end":{"line":132,"column":26}},"7":{"start":{"line":133,"column":8},"end":{"line":141,"column":11}},"8":{"start":{"line":142,"column":8},"end":{"line":142,"column":48}},"9":{"start":{"line":143,"column":8},"end":{"line":143,"column":61}},"10":{"start":{"line":144,"column":8},"end":{"line":144,"column":54}},"11":{"start":{"line":145,"column":8},"end":{"line":145,"column":83}},"12":{"start":{"line":161,"column":8},"end":{"line":161,"column":47}},"13":{"start":{"line":162,"column":8},"end":{"line":162,"column":20}},"14":{"start":{"line":175,"column":8},"end":{"line":175,"column":28}},"15":{"start":{"line":177,"column":8},"end":{"line":177,"column":37}},"16":{"start":{"line":179,"column":8},"end":{"line":186,"column":11}},"17":{"start":{"line":180,"column":12},"end":{"line":184,"column":13}},"18":{"start":{"line":181,"column":16},"end":{"line":183,"column":19}},"19":{"start":{"line":185,"column":12},"end":{"line":185,"column":49}},"20":{"start":{"line":188,"column":8},"end":{"line":188,"column":20}},"21":{"start":{"line":199,"column":8},"end":{"line":202,"column":10}},"22":{"start":{"line":217,"column":8},"end":{"line":218,"column":22}},"23":{"start":{"line":221,"column":8},"end":{"line":221,"column":42}},"24":{"start":{"line":222,"column":8},"end":{"line":227,"column":9}},"25":{"start":{"line":223,"column":12},"end":{"line":223,"column":45}},"26":{"start":{"line":224,"column":12},"end":{"line":226,"column":13}},"27":{"start":{"line":225,"column":16},"end":{"line":225,"column":28}},"28":{"start":{"line":229,"column":8},"end":{"line":229,"column":44}},"29":{"start":{"line":230,"column":8},"end":{"line":232,"column":11}},"30":{"start":{"line":231,"column":12},"end":{"line":231,"column":43}},"31":{"start":{"line":244,"column":8},"end":{"line":244,"column":28}},"32":{"start":{"line":246,"column":8},"end":{"line":249,"column":11}},"33":{"start":{"line":250,"column":8},"end":{"line":250,"column":36}},"34":{"start":{"line":261,"column":8},"end":{"line":264,"column":24}},"35":{"start":{"line":266,"column":8},"end":{"line":268,"column":9}},"36":{"start":{"line":267,"column":12},"end":{"line":267,"column":104}},"37":{"start":{"line":270,"column":8},"end":{"line":270,"column":52}},"38":{"start":{"line":272,"column":8},"end":{"line":272,"column":58}},"39":{"start":{"line":273,"column":8},"end":{"line":283,"column":19}},"40":{"start":{"line":275,"column":16},"end":{"line":275,"column":45}},"41":{"start":{"line":278,"column":20},"end":{"line":278,"column":52}},"42":{"start":{"line":281,"column":20},"end":{"line":281,"column":57}},"43":{"start":{"line":282,"column":20},"end":{"line":282,"column":33}},"44":{"start":{"line":285,"column":8},"end":{"line":285,"column":31}},"45":{"start":{"line":296,"column":8},"end":{"line":299,"column":14}},"46":{"start":{"line":301,"column":8},"end":{"line":315,"column":10}},"47":{"start":{"line":306,"column":16},"end":{"line":306,"column":46}},"48":{"start":{"line":307,"column":16},"end":{"line":307,"column":39}},"49":{"start":{"line":308,"column":16},"end":{"line":308,"column":40}},"50":{"start":{"line":309,"column":16},"end":{"line":309,"column":29}},"51":{"start":{"line":313,"column":16},"end":{"line":313,"column":54}},"52":{"start":{"line":327,"column":8},"end":{"line":330,"column":49}},"53":{"start":{"line":332,"column":8},"end":{"line":336,"column":9}},"54":{"start":{"line":333,"column":12},"end":{"line":334,"column":78}},"55":{"start":{"line":335,"column":12},"end":{"line":335,"column":40}},"56":{"start":{"line":338,"column":8},"end":{"line":338,"column":39}},"57":{"start":{"line":339,"column":8},"end":{"line":343,"column":9}},"58":{"start":{"line":340,"column":12},"end":{"line":341,"column":73}},"59":{"start":{"line":342,"column":12},"end":{"line":342,"column":40}},"60":{"start":{"line":345,"column":8},"end":{"line":345,"column":52}},"61":{"start":{"line":349,"column":8},"end":{"line":351,"column":9}},"62":{"start":{"line":350,"column":12},"end":{"line":350,"column":38}},"63":{"start":{"line":353,"column":8},"end":{"line":353,"column":58}},"64":{"start":{"line":355,"column":8},"end":{"line":377,"column":10}},"65":{"start":{"line":359,"column":16},"end":{"line":359,"column":52}},"66":{"start":{"line":360,"column":16},"end":{"line":362,"column":19}},"67":{"start":{"line":361,"column":20},"end":{"line":361,"column":100}},"68":{"start":{"line":364,"column":16},"end":{"line":366,"column":17}},"69":{"start":{"line":365,"column":20},"end":{"line":365,"column":46}},"70":{"start":{"line":368,"column":16},"end":{"line":368,"column":58}},"71":{"start":{"line":372,"column":16},"end":{"line":372,"column":81}},"72":{"start":{"line":375,"column":16},"end":{"line":375,"column":72}},"73":{"start":{"line":379,"column":8},"end":{"line":379,"column":36}},"74":{"start":{"line":392,"column":8},"end":{"line":393,"column":72}},"75":{"start":{"line":395,"column":8},"end":{"line":395,"column":61}},"76":{"start":{"line":397,"column":8},"end":{"line":397,"column":53}},"77":{"start":{"line":399,"column":8},"end":{"line":399,"column":26}},"78":{"start":{"line":401,"column":8},"end":{"line":401,"column":30}},"79":{"start":{"line":403,"column":8},"end":{"line":405,"column":9}},"80":{"start":{"line":404,"column":12},"end":{"line":404,"column":62}},"81":{"start":{"line":407,"column":8},"end":{"line":407,"column":31}},"82":{"start":{"line":408,"column":8},"end":{"line":408,"column":39}},"83":{"start":{"line":409,"column":8},"end":{"line":409,"column":40}},"84":{"start":{"line":410,"column":8},"end":{"line":410,"column":36}},"85":{"start":{"line":411,"column":8},"end":{"line":411,"column":41}},"86":{"start":{"line":424,"column":8},"end":{"line":424,"column":81}},"87":{"start":{"line":425,"column":8},"end":{"line":425,"column":45}},"88":{"start":{"line":426,"column":8},"end":{"line":426,"column":36}},"89":{"start":{"line":439,"column":8},"end":{"line":439,"column":50}},"90":{"start":{"line":450,"column":8},"end":{"line":450,"column":56}},"91":{"start":{"line":462,"column":8},"end":{"line":464,"column":55}},"92":{"start":{"line":466,"column":8},"end":{"line":466,"column":47}},"93":{"start":{"line":467,"column":8},"end":{"line":467,"column":47}},"94":{"start":{"line":479,"column":8},"end":{"line":493,"column":9}},"95":{"start":{"line":481,"column":12},"end":{"line":485,"column":15}},"96":{"start":{"line":482,"column":16},"end":{"line":482,"column":55}},"97":{"start":{"line":483,"column":16},"end":{"line":483,"column":55}},"98":{"start":{"line":484,"column":16},"end":{"line":484,"column":63}},"99":{"start":{"line":488,"column":12},"end":{"line":492,"column":15}},"100":{"start":{"line":489,"column":16},"end":{"line":489,"column":55}},"101":{"start":{"line":490,"column":16},"end":{"line":490,"column":55}},"102":{"start":{"line":491,"column":16},"end":{"line":491,"column":63}},"103":{"start":{"line":504,"column":8},"end":{"line":505,"column":26}},"104":{"start":{"line":510,"column":8},"end":{"line":514,"column":9}},"105":{"start":{"line":511,"column":12},"end":{"line":511,"column":72}},"106":{"start":{"line":512,"column":12},"end":{"line":512,"column":47}},"107":{"start":{"line":513,"column":12},"end":{"line":513,"column":38}},"108":{"start":{"line":516,"column":8},"end":{"line":516,"column":36}},"109":{"start":{"line":517,"column":8},"end":{"line":525,"column":9}},"110":{"start":{"line":518,"column":12},"end":{"line":518,"column":62}},"111":{"start":{"line":519,"column":12},"end":{"line":519,"column":48}},"112":{"start":{"line":522,"column":12},"end":{"line":524,"column":13}},"113":{"start":{"line":523,"column":16},"end":{"line":523,"column":58}},"114":{"start":{"line":527,"column":8},"end":{"line":527,"column":22}},"115":{"start":{"line":539,"column":8},"end":{"line":542,"column":35}},"116":{"start":{"line":544,"column":8},"end":{"line":547,"column":9}},"117":{"start":{"line":545,"column":12},"end":{"line":545,"column":76}},"118":{"start":{"line":546,"column":12},"end":{"line":546,"column":19}},"119":{"start":{"line":549,"column":8},"end":{"line":552,"column":9}},"120":{"start":{"line":550,"column":12},"end":{"line":550,"column":50}},"121":{"start":{"line":551,"column":12},"end":{"line":551,"column":19}},"122":{"start":{"line":553,"column":8},"end":{"line":556,"column":9}},"123":{"start":{"line":554,"column":12},"end":{"line":554,"column":67}},"124":{"start":{"line":555,"column":12},"end":{"line":555,"column":19}},"125":{"start":{"line":557,"column":8},"end":{"line":560,"column":9}},"126":{"start":{"line":558,"column":12},"end":{"line":558,"column":51}},"127":{"start":{"line":559,"column":12},"end":{"line":559,"column":19}},"128":{"start":{"line":562,"column":8},"end":{"line":565,"column":11}},"129":{"start":{"line":564,"column":12},"end":{"line":564,"column":34}},"130":{"start":{"line":567,"column":8},"end":{"line":569,"column":9}},"131":{"start":{"line":568,"column":12},"end":{"line":568,"column":35}},"132":{"start":{"line":581,"column":8},"end":{"line":581,"column":28}},"133":{"start":{"line":583,"column":8},"end":{"line":583,"column":37}},"134":{"start":{"line":584,"column":8},"end":{"line":588,"column":14}},"135":{"start":{"line":587,"column":12},"end":{"line":587,"column":46}},"136":{"start":{"line":603,"column":8},"end":{"line":603,"column":39}},"137":{"start":{"line":605,"column":8},"end":{"line":614,"column":9}},"138":{"start":{"line":606,"column":12},"end":{"line":608,"column":13}},"139":{"start":{"line":607,"column":16},"end":{"line":607,"column":23}},"140":{"start":{"line":610,"column":12},"end":{"line":613,"column":13}},"141":{"start":{"line":611,"column":16},"end":{"line":611,"column":38}},"142":{"start":{"line":612,"column":16},"end":{"line":612,"column":23}},"143":{"start":{"line":616,"column":8},"end":{"line":620,"column":9}},"144":{"start":{"line":617,"column":12},"end":{"line":617,"column":72}},"145":{"start":{"line":618,"column":12},"end":{"line":618,"column":31}},"146":{"start":{"line":619,"column":12},"end":{"line":619,"column":44}},"147":{"start":{"line":632,"column":8},"end":{"line":632,"column":47}},"148":{"start":{"line":633,"column":8},"end":{"line":633,"column":47}},"149":{"start":{"line":643,"column":8},"end":{"line":644,"column":77}},"150":{"start":{"line":656,"column":8},"end":{"line":656,"column":40}},"151":{"start":{"line":658,"column":8},"end":{"line":660,"column":11}},"152":{"start":{"line":659,"column":12},"end":{"line":659,"column":37}},"153":{"start":{"line":662,"column":8},"end":{"line":662,"column":25}},"154":{"start":{"line":663,"column":8},"end":{"line":663,"column":34}},"155":{"start":{"line":675,"column":8},"end":{"line":675,"column":28}},"156":{"start":{"line":677,"column":8},"end":{"line":686,"column":11}},"157":{"start":{"line":678,"column":12},"end":{"line":683,"column":13}},"158":{"start":{"line":679,"column":16},"end":{"line":682,"column":19}},"159":{"start":{"line":685,"column":12},"end":{"line":685,"column":40}},"160":{"start":{"line":699,"column":8},"end":{"line":701,"column":25}},"161":{"start":{"line":703,"column":8},"end":{"line":706,"column":9}},"162":{"start":{"line":704,"column":12},"end":{"line":704,"column":61}},"163":{"start":{"line":705,"column":12},"end":{"line":705,"column":19}},"164":{"start":{"line":708,"column":8},"end":{"line":710,"column":9}},"165":{"start":{"line":709,"column":12},"end":{"line":709,"column":33}},"166":{"start":{"line":712,"column":8},"end":{"line":714,"column":9}},"167":{"start":{"line":713,"column":12},"end":{"line":713,"column":33}},"168":{"start":{"line":716,"column":8},"end":{"line":716,"column":37}},"169":{"start":{"line":726,"column":8},"end":{"line":729,"column":9}},"170":{"start":{"line":727,"column":12},"end":{"line":727,"column":69}},"171":{"start":{"line":728,"column":12},"end":{"line":728,"column":40}},"172":{"start":{"line":742,"column":8},"end":{"line":745,"column":10}},"173":{"start":{"line":747,"column":8},"end":{"line":752,"column":9}},"174":{"start":{"line":748,"column":12},"end":{"line":748,"column":65}},"175":{"start":{"line":751,"column":12},"end":{"line":751,"column":62}}},"branchMap":{"1":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":12},"end":{"line":180,"column":12}},{"start":{"line":180,"column":12},"end":{"line":180,"column":12}}]},"2":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":8}},{"start":{"line":222,"column":8},"end":{"line":222,"column":8}}]},"3":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":12}},{"start":{"line":224,"column":12},"end":{"line":224,"column":12}}]},"4":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":266,"column":8}},{"start":{"line":266,"column":8},"end":{"line":266,"column":8}}]},"5":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":332,"column":8}},{"start":{"line":332,"column":8},"end":{"line":332,"column":8}}]},"6":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":12},"end":{"line":332,"column":29}},{"start":{"line":332,"column":33},"end":{"line":332,"column":69}}]},"7":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":8},"end":{"line":339,"column":8}},{"start":{"line":339,"column":8},"end":{"line":339,"column":8}}]},"8":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":8},"end":{"line":349,"column":8}},{"start":{"line":349,"column":8},"end":{"line":349,"column":8}}]},"9":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":16},"end":{"line":364,"column":16}},{"start":{"line":364,"column":16},"end":{"line":364,"column":16}}]},"10":{"line":393,"type":"binary-expr","locations":[{"start":{"line":393,"column":20},"end":{"line":393,"column":43}},{"start":{"line":393,"column":47},"end":{"line":393,"column":71}}]},"11":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":8}},{"start":{"line":403,"column":8},"end":{"line":403,"column":8}}]},"12":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":12},"end":{"line":403,"column":24}},{"start":{"line":403,"column":28},"end":{"line":403,"column":58}}]},"13":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":8},"end":{"line":479,"column":8}},{"start":{"line":479,"column":8},"end":{"line":479,"column":8}}]},"14":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":12},"end":{"line":479,"column":52}},{"start":{"line":480,"column":12},"end":{"line":480,"column":52}}]},"15":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":8},"end":{"line":510,"column":8}},{"start":{"line":510,"column":8},"end":{"line":510,"column":8}}]},"16":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":8},"end":{"line":517,"column":8}},{"start":{"line":517,"column":8},"end":{"line":517,"column":8}}]},"17":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":12},"end":{"line":522,"column":12}},{"start":{"line":522,"column":12},"end":{"line":522,"column":12}}]},"18":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":8},"end":{"line":544,"column":8}},{"start":{"line":544,"column":8},"end":{"line":544,"column":8}}]},"19":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":12},"end":{"line":544,"column":24}},{"start":{"line":544,"column":28},"end":{"line":544,"column":41}},{"start":{"line":544,"column":45},"end":{"line":544,"column":58}},{"start":{"line":544,"column":62},"end":{"line":544,"column":76}}]},"20":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":8},"end":{"line":549,"column":8}},{"start":{"line":549,"column":8},"end":{"line":549,"column":8}}]},"21":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":8},"end":{"line":553,"column":8}},{"start":{"line":553,"column":8},"end":{"line":553,"column":8}}]},"22":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":8},"end":{"line":557,"column":8}},{"start":{"line":557,"column":8},"end":{"line":557,"column":8}}]},"23":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":8},"end":{"line":567,"column":8}},{"start":{"line":567,"column":8},"end":{"line":567,"column":8}}]},"24":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":8},"end":{"line":605,"column":8}},{"start":{"line":605,"column":8},"end":{"line":605,"column":8}}]},"25":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":12},"end":{"line":606,"column":12}},{"start":{"line":606,"column":12},"end":{"line":606,"column":12}}]},"26":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":12},"end":{"line":610,"column":12}},{"start":{"line":610,"column":12},"end":{"line":610,"column":12}}]},"27":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":8},"end":{"line":616,"column":8}},{"start":{"line":616,"column":8},"end":{"line":616,"column":8}}]},"28":{"line":616,"type":"binary-expr","locations":[{"start":{"line":616,"column":12},"end":{"line":616,"column":17}},{"start":{"line":616,"column":21},"end":{"line":616,"column":34}}]},"29":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":12},"end":{"line":678,"column":12}},{"start":{"line":678,"column":12},"end":{"line":678,"column":12}}]},"30":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":8},"end":{"line":703,"column":8}},{"start":{"line":703,"column":8},"end":{"line":703,"column":8}}]},"31":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":8},"end":{"line":708,"column":8}},{"start":{"line":708,"column":8},"end":{"line":708,"column":8}}]},"32":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":8},"end":{"line":712,"column":8}},{"start":{"line":712,"column":8},"end":{"line":712,"column":8}}]},"33":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":8},"end":{"line":726,"column":8}},{"start":{"line":726,"column":8},"end":{"line":726,"column":8}}]},"34":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":8},"end":{"line":747,"column":8}},{"start":{"line":747,"column":8},"end":{"line":747,"column":8}}]},"35":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":23},"end":{"line":766,"column":38}},{"start":{"line":766,"column":42},"end":{"line":766,"column":55}}]}},"code":["(function () { YUI.add('aui-surface-app', function (A, NAME) {","","var doc = A.config.doc,\r","    win = A.config.win;\r","\r","A.SurfaceApp = A.Base.create('surface-app', A.Base, [], {\r","    /**\r","     * Holds the active screen.\r","     *\r","     * @property activeScreen\r","     * @type {Screen}\r","     * @protected\r","     */\r","    activeScreen: null,\r","\r","    /**\r","     * Holds the active path containing the query parameters.\r","     *\r","     * @property activePath\r","     * @type {String}\r","     * @protected\r","     */\r","    activePath: null,\r","\r","    /**\r","     * Holds the window hotizontal scroll position before navigation using back\r","     * or forward happens to lock the scroll position until the surfaces are\r","     * updated.\r","     *\r","     * @property lockPageXOffset\r","     * @type {Number}\r","     * @protected\r","     */\r","    lockPageXOffset: 0,\r","\r","    /**\r","     * Holds the window vertical scroll position before navigation using back or\r","     * forward happens to lock the scroll position until the surfaces are\r","     * updated.\r","     *\r","     * @property lockPageYOffset\r","     * @type {Number}\r","     * @protected\r","     */\r","    lockPageYOffset: 0,\r","\r","    /**\r","     * Holds the window hotizontal scroll position when the navigation using\r","     * back or forward happens to be restored after the surfaces are updated.\r","     *\r","     * @property pageXOffset\r","     * @type {Number}\r","     * @protected\r","     */\r","    pageXOffset: 0,\r","\r","    /**\r","     * Holds the window vertical scroll position when the navigation using\r","     * back or forward happens to be restored after the surfaces are updated.\r","     *\r","     * @property pageYOffset\r","     * @type {Number}\r","     * @protected\r","     */\r","    pageYOffset: 0,\r","\r","    /**\r","     * Holds a deferred withe the current navigation.\r","     *\r","     * @property pendingNavigate\r","     * @type {Promise}\r","     * @protected\r","     */\r","    pendingNavigate: null,\r","\r","    /**\r","     * Holds the screen routes configuration.\r","     *\r","     * @property routes\r","     * @type {Array}\r","     * @protected\r","     */\r","    routes: null,\r","\r","    /**\r","     * Maps the screen instances by the url containing the parameters.\r","     *\r","     * @property screens\r","     * @type {Object}\r","     * @protected\r","     */\r","    screens: null,\r","\r","    /**\r","     * Holds the scroll event handle.\r","     *\r","     * @property scrollHandle\r","     * @type {Object}\r","     * @private\r","     */\r","    scrollHandle: null,\r","\r","    /**\r","     * When set to true the first erroneous popstate fired on page load will be\r","     * ignored, only if `window.history.state` is also `null`.\r","     *\r","     * @property skipLoadPopstate\r","     * @type {Boolean}\r","     * @protected\r","     */\r","    skipLoadPopstate: false,\r","\r","    /**\r","     * Maps that index the surfaces instances by the surface id.\r","     *\r","     * @property surfaces\r","     * @type {Object}\r","     * @protected\r","     */\r","    surfaces: null,\r","\r","    /**\r","     * Construction logic executed during SurfaceApp instantiation.\r","     * Lifecycle.\r","     *\r","     * @method initializer\r","     * @protected\r","     */\r","    initializer: function() {\r","        this.routes = [];\r","        this.surfaces = {};\r","        this.screens = {};\r","        this.publish({\r","            startNavigate: {\r","                defaultFn: this._defStartNavigateFn,\r","                preventedFn: this._preventNavigateFn\r","            },\r","            failNavigate: {},\r","            successNavigate: {},\r","            endNavigate: {}\r","        });\r","        A.once('load', this._onLoad, win, this);\r","        A.on('scroll', A.debounce(this._onScroll, 50, this));\r","        A.on('popstate', this._onPopState, win, this);\r","        A.delegate('click', this._onDocClick, doc, this.get('linkSelector'), this);\r","    },\r","\r","    /**\r","     * Adds one or more screens to the application.\r","     *\r","     * @method addScreenRoutes\r","     * @param {Object} or {Array} screens Single object or an array of object. Each object should contain `path`\r","     *     and `screen`.\r","     *     The `path` should be a string or a regex that maps the navigation\r","     *     route to a screen class definition (not an instance), e.g:\r","     *         `{ path: \"/home:param1\", screen: Y.MyScreen }`\r","     *         `{ path: /foo.+/, screen: Y.MyScreen }`\r","     * @chainable\r","     */\r","    addScreenRoutes: function(screens) {\r","        this._registerRoutes(A.Array(screens));\r","        return this;\r","    },\r","\r","    /**\r","     * Adds one or more surfaces to the application.\r","     *\r","     * @method addSurfaces\r","     * @param {Surface} or {String} or [{Surface | String}] surfaces String (id) or Surface instance. You can\r","     * also pass an Array which contains Surface instances or String (id). In case of ID, these should be the ID of\r","     * surface DOM element.\r","     * @chainable\r","     */\r","    addSurfaces: function(surfaces) {\r","        var instance = this;\r","\r","        surfaces = A.Array(surfaces);\r","\r","        A.Array.each(surfaces, function(surface) {\r","            if (A.Lang.isString(surface)) {\r","                surface = new A.Surface({\r","                    id: surface\r","                });\r","            }\r","            instance.surfaces[surface] = surface;\r","        });\r","\r","        return this;\r","    },\r","\r","    /**\r","     * Dispatches to the first route handler that matches the current path, if\r","     * any.\r","     *\r","     * @method dispatch\r","     * @return {Promise} Returns a pending request cancellable promise.\r","     */\r","    dispatch: function() {\r","        return this.navigate(\r","            win.location.pathname + win.location.search + win.location.hash,\r","            true\r","        );\r","    },\r","\r","    /**\r","     * Matches if path is a known route, if not found any returns null. The path\r","     * could contain a fragment-id (#). If the path is the same as the current\r","     * url, and the path contains a fragment, we do not prevent the default\r","     * browser behavior.\r","     *\r","     * @method matchesPath\r","     * @param {String} path Path containing the querystring part.\r","     * @return {Object | null} Route handler if match any or `null` if the path\r","     *     is the same as the current url and the path contains a fragment.\r","     */\r","    matchesPath: function(path) {\r","        var basePath = this.get('basePath'),\r","            hashIndex;\r","\r","        // Remove path hash before match\r","        hashIndex = path.lastIndexOf('#');\r","        if (hashIndex > -1) {\r","            path = path.substr(0, hashIndex);\r","            if (path === win.location.pathname + win.location.search) {\r","                return null;\r","            }\r","        }\r","\r","        path = path.substr(basePath.length);\r","        return A.Array.find(this.routes, function(route) {\r","            return route.matchesPath(path);\r","        });\r","    },\r","\r","    /**\r","     * Navigates to the specified path if there is a route handler that matches.\r","     *\r","     * @method navigate\r","     * @param {String} path Path containing the querystring part.\r","     * @param {Boolean} opt_replaceHistory Replaces browser history.\r","     * @return {Promise} Returns a pending request cancellable promise.\r","     */\r","    navigate: function(path, opt_replaceHistory) {\r","        this._stopPending();\r","\r","        this.fire('startNavigate', {\r","            path: path,\r","            replaceHistory: !! opt_replaceHistory\r","        });\r","        return this.pendingNavigate;\r","    },\r","\r","    /**\r","     * Prefetches the specified path if there is a route handler that matches.\r","     *\r","     * @method navigate\r","     * @param {String} path Path containing the querystring part.\r","     * @return {Promise} Returns a pending request cancellable promise.\r","     */\r","    prefetch: function(path) {\r","        var nextScreen,\r","            pendingPrefetch,\r","            route = this.matchesPath(path),\r","            self = this;\r","\r","        if (!route) {\r","            return A.CancellablePromise.reject(new A.CancellablePromise.Error('No screen for ' + path));\r","        }\r","\r","        A.log('Prefetching [' + path + ']', 'info');\r","\r","        nextScreen = this._getScreenInstance(path, route);\r","        pendingPrefetch = A.CancellablePromise.resolve()\r","            .then(function() {\r","                return nextScreen.load(path);\r","            })\r","            .then(function() {\r","                    self.screens[path] = nextScreen;\r","                },\r","                function(reason) {\r","                    self._removeScreen(path, nextScreen);\r","                    throw reason;\r","                });\r","\r","        return pendingPrefetch;\r","    },\r","\r","    /**\r","     * Starts navigation to a path.\r","     *\r","     * @method  _defStartNavigateFn\r","     * @param {EventFacade} event Event facade containing `path` and\r","     *     `replaceHistory`.\r","     */\r","    _defStartNavigateFn: function(event) {\r","        var instance = this,\r","            payload = {\r","                path: event.path\r","            };\r","\r","        this.pendingNavigate = this._doNavigate(\r","            event.path,\r","            event.replaceHistory\r","        ).thenCatch(\r","            function(reason) {\r","                A.log(reason.message, 'info');\r","                payload.error = reason;\r","                instance._stopPending();\r","                throw reason;\r","            }\r","        ).thenAlways(\r","            function() {\r","                instance.fire('endNavigate', payload);\r","            }\r","        );\r","    },\r","\r","    /**\r","     * Starts navigation to a path.\r","     *\r","     * @method  _doNavigate\r","     * @param {String} path Path containing the querystring part.\r","     * @param {Boolean} opt_replaceHistory Replaces browser history.\r","     * @return {Promise} Returns a pending request cancellable promise.\r","     */\r","    _doNavigate: function(path, opt_replaceHistory) {\r","        var instance = this,\r","            route,\r","            nextScreen,\r","            activeScreen = instance.activeScreen;\r","\r","        if (this.activeScreen && this.activeScreen.beforeDeactivate()) {\r","            this.pendingNavigate = A.CancellablePromise.reject(\r","                new A.CancellablePromise.Error('Cancelled by active screen'));\r","            return this.pendingNavigate;\r","        }\r","\r","        route = this.matchesPath(path);\r","        if (!route) {\r","            this.pendingNavigate = A.CancellablePromise.reject(\r","                new A.CancellablePromise.Error('No screen for ' + path));\r","            return this.pendingNavigate;\r","        }\r","\r","        A.log('Navigate to [' + path + ']', 'info');\r","\r","        // When reloading the same path do replaceState instead of pushState to\r","        // avoid polluting history with states with the same path.\r","        if (path === this.activePath) {\r","            opt_replaceHistory = true;\r","        }\r","\r","        nextScreen = this._getScreenInstance(path, route);\r","\r","        this.pendingNavigate = A.CancellablePromise.resolve(\r","            nextScreen.load(path)\r","        ).then(\r","            function(contents) {\r","                var screenId = nextScreen.get('id');\r","                A.Object.each(instance.surfaces, function(surface, surfaceId) {\r","                    surface.addContent(screenId, nextScreen.getSurfaceContent(surfaceId, contents));\r","                });\r","\r","                if (activeScreen) {\r","                    activeScreen.deactivate();\r","                }\r","\r","                return nextScreen.flip(instance.surfaces);\r","            }\r","        ).then(\r","            function() {\r","                instance._finalizeNavigate(path, nextScreen, opt_replaceHistory);\r","            },\r","            function(reason) {\r","                instance._handleNavigateError(path, nextScreen, reason);\r","            }\r","        );\r","\r","        return this.pendingNavigate;\r","    },\r","\r","    /**\r","     * Finalizes a screen navigation.\r","     *\r","     * @method  _finalizeNavigate\r","     * @param {String} path Path containing the querystring part.\r","     * @param {Screen} nextScreen\r","     * @param {Boolean} opt_replaceHistory Replaces browser history.\r","     * @private\r","     */\r","    _finalizeNavigate: function(path, nextScreen, opt_replaceHistory) {\r","        var activeScreen = this.activeScreen,\r","            title = nextScreen.get('title') || this.get('defaultTitle');\r","\r","        this._updateHistory(title, path, opt_replaceHistory);\r","\r","        this._syncScrollPosition(opt_replaceHistory);\r","\r","        doc.title = title;\r","\r","        nextScreen.activate();\r","\r","        if (activeScreen && !activeScreen.get('cacheable')) {\r","            this._removeScreen(this.activePath, activeScreen);\r","        }\r","\r","        this.activePath = path;\r","        this.activeScreen = nextScreen;\r","        this.screens[path] = nextScreen;\r","        this.pendingNavigate = null;\r","        A.log('Navigation done', 'info');\r","    },\r","\r","    /**\r","     * Handle navigation error.\r","     *\r","     * @method  _handleNavigateError\r","     * @param {String} path Path containing the querystring part.\r","     * @param {Screen} nextScreen\r","     * @param {Error} error\r","     * @private\r","     */\r","    _handleNavigateError: function(path, nextScreen, err) {\r","        A.log('Navigation error for [' + nextScreen + '] (' + err + ')', 'info');\r","        this._removeScreen(path, nextScreen);\r","        this.pendingNavigate = null;\r","    },\r","\r","    /**\r","     * Tests if hostname is an offsite link.\r","     *\r","     * @method _isLinkSameOrigin\r","     * @param  {String} hostname Link hostname to compare with\r","     *     `window.location.hostname`.\r","     * @return {Boolean}\r","     * @private\r","     */\r","    _isLinkSameOrigin: function(hostname) {\r","        return hostname === win.location.hostname;\r","    },\r","\r","    /**\r","     * Tests if link element has the same app's base path.\r","     *\r","     * @param  {String} path Link path containing the querystring part.\r","     * @return {Boolean}\r","     * @private\r","     */\r","    _isSameBasePath: function(path) {\r","        return path.indexOf(this.get('basePath')) === 0;\r","    },\r","\r","    /**\r","     * Lock the document scroll in order to avoid the browser native back and\r","     * forward navigation to change the scroll position. Surface app takes care\r","     * of updating it when surfaces are ready.\r","     *\r","     * @method _lockScroll\r","     * @private\r","     */\r","    _lockScroll: function() {\r","        var instance = this,\r","            lockPageXOffset = instance.lockPageXOffset,\r","            lockPageYOffset = instance.lockPageYOffset;\r","\r","        instance.pageXOffset = win.pageXOffset;\r","        instance.pageYOffset = win.pageYOffset;\r","\r","        // In order to keep the history scrolling fluid, the scroll position\r","        // needs to be locked until content is fully loaded and surfaces\r","        // painted. The problem is that behavior is incosistent through\r","        // browsers. Blink and Webkit popstate event happens before scroll\r","        // position updates, and on Firefox and IE scroll position updates\r","        // before popstate event. If we assume the lock position is the same as\r","        // the current win.page[XY]Offset on popstate, we should capture the\r","        // next scroll tick, otherwise listens for the next scroll once to\r","        // capture the history scroll position. For more information see\r","        // discussion https://bugzilla.mozilla.org/show_bug.cgi?id=679458.\r","        if (lockPageXOffset === instance.pageXOffset &&\r","            lockPageYOffset === instance.pageYOffset) {\r","            A.soon(function() {\r","                instance.pageXOffset = win.pageXOffset;\r","                instance.pageYOffset = win.pageYOffset;\r","                win.scrollTo(lockPageXOffset, lockPageYOffset);\r","            });\r","        }\r","        else {\r","            A.once('scroll', function() {\r","                instance.pageXOffset = win.pageXOffset;\r","                instance.pageYOffset = win.pageYOffset;\r","                win.scrollTo(lockPageXOffset, lockPageYOffset);\r","            });\r","        }\r","    },\r","\r","    /**\r","     * Retrieves or create a screen instance to a path.\r","     *\r","     * @method  _getScreenInstance\r","     * @param {String} path Path containing the querystring part.\r","     * @private\r","     */\r","    _getScreenInstance: function(path, route) {\r","        var screen,\r","            refreshScreen;\r","\r","        // When simulating page refresh the request lifecycle for activeScreen\r","        // and nextScreen should be respected, therefore creating a new screen\r","        // instance for the same path is needed\r","        if (path === this.activePath) {\r","            A.log('Already at destination, refresh navigation', 'info');\r","            refreshScreen = this.screens[path];\r","            delete this.screens[path];\r","        }\r","\r","        screen = this.screens[path];\r","        if (!screen) {\r","            A.log('Create screen for [' + path + ']', 'info');\r","            screen = new(route.get('screen'))();\r","            // When simulating a page refresh the cache should copy the cache\r","            // from refreshScreen to avoid roundtrip to the server\r","            if (refreshScreen) {\r","                screen.addCache(refreshScreen.getCache());\r","            }\r","        }\r","\r","        return screen;\r","    },\r","\r","    /**\r","     * Intercepts document clicks and test link elements in order to decide\r","     * whether Surface app can navigate.\r","     *\r","     * @method  _onDocClick\r","     * @param {EventFacade} event Event facade\r","     * @private\r","     */\r","    _onDocClick: function(event) {\r","        var link = event.currentTarget,\r","            hostname = link.get('hostname'),\r","            path = link.get('pathname') + link.get('search') + link.get('hash'),\r","            navigateFailed = false;\r","\r","        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r","            A.log('Stop the SPA navigation when a modifier key is pressed');\r","            return;\r","        }\r","\r","        if (!this._isLinkSameOrigin(hostname)) {\r","            A.log('Offsite link clicked', 'info');\r","            return;\r","        }\r","        if (!this._isSameBasePath(path)) {\r","            A.log('Link clicked outside app\\'s base path', 'info');\r","            return;\r","        }\r","        if (!this.matchesPath(path)) {\r","            A.log('No screen for ' + path, 'info');\r","            return;\r","        }\r","\r","        this.navigate(path).thenCatch(function() {\r","            // Do not prevent link navigation in case some synchronous error occurs\r","            navigateFailed = true;\r","        });\r","\r","        if (!navigateFailed) {\r","            event.preventDefault();\r","        }\r","    },\r","\r","    /**\r","     * Listens to the window's load event in order avoid issues with some browsers\r","     * that trigger popstate calls on the first load. For more information see\r","     * http://stackoverflow.com/questions/6421769/popstate-on-pages-load-in-chrome.\r","     *\r","     * @method _onLoad\r","     * @private\r","     */\r","    _onLoad: function() {\r","        var instance = this;\r","\r","        this.skipLoadPopstate = true;\r","        setTimeout(function() {\r","            // The timeout ensures that popstate events will be unblocked right\r","            // after the load event occured, but not in the same event-loop cycle.\r","            instance.skipLoadPopstate = false;\r","        }, 0);\r","    },\r","\r","    /**\r","     * Handles browser history changes and fires app's navigation if the state\r","     * belows to us. If we detect a popstate and the state is `null`, assume it\r","     * is navigating to an external page or to a page we don't have route, then\r","     * `window.location.reload()` is invoked in order to reload the content to\r","     * the current url.\r","     *\r","     * @method _onPopState\r","     * @param {EventFacade} event Event facade\r","     * @private\r","     */\r","    _onPopState: function(event) {\r","        var state = event._event.state;\r","\r","        if (state === null) {\r","            if (this.skipLoadPopstate) {\r","                return;\r","            }\r","\r","            if (!win.location.hash) {\r","                win.location.reload();\r","                return;\r","            }\r","        }\r","\r","        if (state && state.surface) {\r","            A.log('History navigation to [' + state.path + ']', 'info');\r","            this._lockScroll();\r","            this.navigate(state.path, true);\r","        }\r","    },\r","\r","    /**\r","     * Listens document scroll changes in order to capture the possible lock\r","     * scroll position for history scrolling.\r","     *\r","     * @method _onScroll\r","     * @param {EventFacade} event Event facade\r","     * @private\r","     */\r","    _onScroll: function() {\r","        this.lockPageXOffset = win.pageXOffset;\r","        this.lockPageYOffset = win.pageYOffset;\r","    },\r","\r","    /**\r","     * Fires when navigation is prevented from `startNavigate` event.\r","     *\r","     * @method  _preventNavigateFn\r","     * @param {EventFacade} event\r","     */\r","    _preventNavigateFn: function() {\r","        this.pendingNavigate = A.CancellablePromise.reject(\r","            new A.CancellablePromise.Error('Navigation has been prevented'));\r","    },\r","\r","    /**\r","     * Removes a screen.\r","     *\r","     * @method  _removeScreen\r","     * @param {String} path Path containing the querystring part.\r","     * @param {Screen} screen\r","     * @private\r","     */\r","    _removeScreen: function(path, screen) {\r","        var screenId = screen.get('id');\r","\r","        A.Object.each(this.surfaces, function(surface) {\r","            surface.remove(screenId);\r","        });\r","\r","        screen.destroy();\r","        delete this.screens[path];\r","    },\r","\r","    /**\r","     * Registers a route for a screen.\r","     *\r","     * @method  _registerRoutes\r","     * @param {Array} screenRoutes Array of objects with `path` and `screen`\r","     *     keys or `A.ScreenRoute` instances.\r","     * @private\r","     */\r","    _registerRoutes: function(screenRoutes) {\r","        var instance = this;\r","\r","        A.Array.each(screenRoutes, function(value) {\r","            if (!A.instanceOf(value, A.ScreenRoute)) {\r","                value = new A.ScreenRoute({\r","                    path: value.path,\r","                    screen: value.screen\r","                });\r","            }\r","\r","            instance.routes.push(value);\r","        });\r","    },\r","\r","    /**\r","     * Sync document scroll position to the values captured when the default\r","     * back and forward navigation happened. The scroll position updates after\r","     * `beforeFlip` is called and before the surface transitions.\r","     *\r","     * @method  _syncScrollPosition\r","     * @param {Boolean} opt_replaceHistory Replaces browser history.\r","     * @private\r","     */\r","    _syncScrollPosition: function(opt_replaceHistory) {\r","        var hash = win.location.hash,\r","            hashEl,\r","            pos = [0, 0];\r","\r","        if (opt_replaceHistory) {\r","            win.scrollTo(this.pageXOffset, this.pageYOffset);\r","            return;\r","        }\r","\r","        if (hash) {\r","            hashEl = A.one(hash);\r","        }\r","\r","        if (hashEl) {\r","            pos = hashEl.getXY();\r","        }\r","\r","        win.scrollTo(pos[0], pos[1]);\r","    },\r","\r","    /**\r","     * Cancels pending navigate with `Cancel pending navigation` error.\r","     *\r","     * @method  _stopPending\r","     * @protected\r","     */\r","    _stopPending: function() {\r","        if (this.pendingNavigate) {\r","            this.pendingNavigate.cancel('Cancel pending navigation');\r","            this.pendingNavigate = null;\r","        }\r","    },\r","\r","    /**\r","     * Updates or replace browser history.\r","     *\r","     * @method _updateHistory\r","     * @param {String} path Path containing the querystring part.\r","     * @param {String} title Document title.\r","     * @param {Boolean} opt_replaceHistory Replaces browser history.\r","     * @private\r","     */\r","    _updateHistory: function(title, path, opt_replaceHistory) {\r","        var historyParams = {\r","            path: path,\r","            surface: true\r","        };\r","\r","        if (opt_replaceHistory) {\r","            win.history.replaceState(historyParams, title, path);\r","        }\r","        else {\r","            win.history.pushState(historyParams, title, path);\r","        }\r","    }\r","}, {\r","    ATTRS: {\r","        /**\r","         * Defines the default document title in case the screen doesn't have\r","         * any `title`. If null, the default browser behavior for setting the\r","         * title is used for when there's no title HTML tag on the document.\r","         *\r","         * @attribute defaultTitle\r","         * @default null\r","         * @type {String|null}\r","         */\r","        defaultTitle: {\r","            validator: A.Lang.isString || A.Lang.isNull,\r","            value: null\r","        },\r","\r","        /**\r","         * CSS selector string used to filter link click events so that only the\r","         * links which match it will have the enhanced navigation behavior.\r","         *\r","         * @attribute linkSelector\r","         * @type String\r","         * @default \"a\"\r","         * @initOnly\r","         */\r","        linkSelector: {\r","            value: 'a',\r","            writeOnce: 'initOnly'\r","        },\r","\r","        /**\r","         * Absolute base path from which all routes should be evaluated.\r","         *\r","         * @attribute basePath\r","         * @type String\r","         * @default ''\r","         */\r","        basePath: {\r","            value: ''\r","        }\r","    }\r","});\r","","","}, '3.1.0', {","    \"requires\": [","        \"event-delegate\",","        \"node-event-html5\",","        \"aui-surface-base\",","        \"aui-surface-screen\",","        \"aui-surface-screen-route\"","    ]","});","","}());"]};
}
var __cov_5WPNbKOHkCGffDddI9bY4g = __coverage__['build/aui-surface-app/aui-surface-app.js'];
__cov_5WPNbKOHkCGffDddI9bY4g.s['1']++;YUI.add('aui-surface-app',function(A,NAME){__cov_5WPNbKOHkCGffDddI9bY4g.f['1']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['2']++;var doc=A.config.doc,win=A.config.win;__cov_5WPNbKOHkCGffDddI9bY4g.s['3']++;A.SurfaceApp=A.Base.create('surface-app',A.Base,[],{activeScreen:null,activePath:null,lockPageXOffset:0,lockPageYOffset:0,pageXOffset:0,pageYOffset:0,pendingNavigate:null,routes:null,screens:null,scrollHandle:null,skipLoadPopstate:false,surfaces:null,initializer:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['2']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['4']++;this.routes=[];__cov_5WPNbKOHkCGffDddI9bY4g.s['5']++;this.surfaces={};__cov_5WPNbKOHkCGffDddI9bY4g.s['6']++;this.screens={};__cov_5WPNbKOHkCGffDddI9bY4g.s['7']++;this.publish({startNavigate:{defaultFn:this._defStartNavigateFn,preventedFn:this._preventNavigateFn},failNavigate:{},successNavigate:{},endNavigate:{}});__cov_5WPNbKOHkCGffDddI9bY4g.s['8']++;A.once('load',this._onLoad,win,this);__cov_5WPNbKOHkCGffDddI9bY4g.s['9']++;A.on('scroll',A.debounce(this._onScroll,50,this));__cov_5WPNbKOHkCGffDddI9bY4g.s['10']++;A.on('popstate',this._onPopState,win,this);__cov_5WPNbKOHkCGffDddI9bY4g.s['11']++;A.delegate('click',this._onDocClick,doc,this.get('linkSelector'),this);},addScreenRoutes:function(screens){__cov_5WPNbKOHkCGffDddI9bY4g.f['3']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['12']++;this._registerRoutes(A.Array(screens));__cov_5WPNbKOHkCGffDddI9bY4g.s['13']++;return this;},addSurfaces:function(surfaces){__cov_5WPNbKOHkCGffDddI9bY4g.f['4']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['14']++;var instance=this;__cov_5WPNbKOHkCGffDddI9bY4g.s['15']++;surfaces=A.Array(surfaces);__cov_5WPNbKOHkCGffDddI9bY4g.s['16']++;A.Array.each(surfaces,function(surface){__cov_5WPNbKOHkCGffDddI9bY4g.f['5']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['17']++;if(A.Lang.isString(surface)){__cov_5WPNbKOHkCGffDddI9bY4g.b['1'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['18']++;surface=new A.Surface({id:surface});}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['1'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['19']++;instance.surfaces[surface]=surface;});__cov_5WPNbKOHkCGffDddI9bY4g.s['20']++;return this;},dispatch:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['6']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['21']++;return this.navigate(win.location.pathname+win.location.search+win.location.hash,true);},matchesPath:function(path){__cov_5WPNbKOHkCGffDddI9bY4g.f['7']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['22']++;var basePath=this.get('basePath'),hashIndex;__cov_5WPNbKOHkCGffDddI9bY4g.s['23']++;hashIndex=path.lastIndexOf('#');__cov_5WPNbKOHkCGffDddI9bY4g.s['24']++;if(hashIndex>-1){__cov_5WPNbKOHkCGffDddI9bY4g.b['2'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['25']++;path=path.substr(0,hashIndex);__cov_5WPNbKOHkCGffDddI9bY4g.s['26']++;if(path===win.location.pathname+win.location.search){__cov_5WPNbKOHkCGffDddI9bY4g.b['3'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['27']++;return null;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['3'][1]++;}}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['2'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['28']++;path=path.substr(basePath.length);__cov_5WPNbKOHkCGffDddI9bY4g.s['29']++;return A.Array.find(this.routes,function(route){__cov_5WPNbKOHkCGffDddI9bY4g.f['8']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['30']++;return route.matchesPath(path);});},navigate:function(path,opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.f['9']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['31']++;this._stopPending();__cov_5WPNbKOHkCGffDddI9bY4g.s['32']++;this.fire('startNavigate',{path:path,replaceHistory:!!opt_replaceHistory});__cov_5WPNbKOHkCGffDddI9bY4g.s['33']++;return this.pendingNavigate;},prefetch:function(path){__cov_5WPNbKOHkCGffDddI9bY4g.f['10']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['34']++;var nextScreen,pendingPrefetch,route=this.matchesPath(path),self=this;__cov_5WPNbKOHkCGffDddI9bY4g.s['35']++;if(!route){__cov_5WPNbKOHkCGffDddI9bY4g.b['4'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['36']++;return A.CancellablePromise.reject(new A.CancellablePromise.Error('No screen for '+path));}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['4'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['37']++;A.log('Prefetching ['+path+']','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['38']++;nextScreen=this._getScreenInstance(path,route);__cov_5WPNbKOHkCGffDddI9bY4g.s['39']++;pendingPrefetch=A.CancellablePromise.resolve().then(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['11']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['40']++;return nextScreen.load(path);}).then(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['12']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['41']++;self.screens[path]=nextScreen;},function(reason){__cov_5WPNbKOHkCGffDddI9bY4g.f['13']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['42']++;self._removeScreen(path,nextScreen);__cov_5WPNbKOHkCGffDddI9bY4g.s['43']++;throw reason;});__cov_5WPNbKOHkCGffDddI9bY4g.s['44']++;return pendingPrefetch;},_defStartNavigateFn:function(event){__cov_5WPNbKOHkCGffDddI9bY4g.f['14']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['45']++;var instance=this,payload={path:event.path};__cov_5WPNbKOHkCGffDddI9bY4g.s['46']++;this.pendingNavigate=this._doNavigate(event.path,event.replaceHistory).thenCatch(function(reason){__cov_5WPNbKOHkCGffDddI9bY4g.f['15']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['47']++;A.log(reason.message,'info');__cov_5WPNbKOHkCGffDddI9bY4g.s['48']++;payload.error=reason;__cov_5WPNbKOHkCGffDddI9bY4g.s['49']++;instance._stopPending();__cov_5WPNbKOHkCGffDddI9bY4g.s['50']++;throw reason;}).thenAlways(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['16']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['51']++;instance.fire('endNavigate',payload);});},_doNavigate:function(path,opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.f['17']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['52']++;var instance=this,route,nextScreen,activeScreen=instance.activeScreen;__cov_5WPNbKOHkCGffDddI9bY4g.s['53']++;if((__cov_5WPNbKOHkCGffDddI9bY4g.b['6'][0]++,this.activeScreen)&&(__cov_5WPNbKOHkCGffDddI9bY4g.b['6'][1]++,this.activeScreen.beforeDeactivate())){__cov_5WPNbKOHkCGffDddI9bY4g.b['5'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['54']++;this.pendingNavigate=A.CancellablePromise.reject(new A.CancellablePromise.Error('Cancelled by active screen'));__cov_5WPNbKOHkCGffDddI9bY4g.s['55']++;return this.pendingNavigate;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['5'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['56']++;route=this.matchesPath(path);__cov_5WPNbKOHkCGffDddI9bY4g.s['57']++;if(!route){__cov_5WPNbKOHkCGffDddI9bY4g.b['7'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['58']++;this.pendingNavigate=A.CancellablePromise.reject(new A.CancellablePromise.Error('No screen for '+path));__cov_5WPNbKOHkCGffDddI9bY4g.s['59']++;return this.pendingNavigate;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['7'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['60']++;A.log('Navigate to ['+path+']','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['61']++;if(path===this.activePath){__cov_5WPNbKOHkCGffDddI9bY4g.b['8'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['62']++;opt_replaceHistory=true;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['8'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['63']++;nextScreen=this._getScreenInstance(path,route);__cov_5WPNbKOHkCGffDddI9bY4g.s['64']++;this.pendingNavigate=A.CancellablePromise.resolve(nextScreen.load(path)).then(function(contents){__cov_5WPNbKOHkCGffDddI9bY4g.f['18']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['65']++;var screenId=nextScreen.get('id');__cov_5WPNbKOHkCGffDddI9bY4g.s['66']++;A.Object.each(instance.surfaces,function(surface,surfaceId){__cov_5WPNbKOHkCGffDddI9bY4g.f['19']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['67']++;surface.addContent(screenId,nextScreen.getSurfaceContent(surfaceId,contents));});__cov_5WPNbKOHkCGffDddI9bY4g.s['68']++;if(activeScreen){__cov_5WPNbKOHkCGffDddI9bY4g.b['9'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['69']++;activeScreen.deactivate();}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['9'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['70']++;return nextScreen.flip(instance.surfaces);}).then(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['20']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['71']++;instance._finalizeNavigate(path,nextScreen,opt_replaceHistory);},function(reason){__cov_5WPNbKOHkCGffDddI9bY4g.f['21']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['72']++;instance._handleNavigateError(path,nextScreen,reason);});__cov_5WPNbKOHkCGffDddI9bY4g.s['73']++;return this.pendingNavigate;},_finalizeNavigate:function(path,nextScreen,opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.f['22']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['74']++;var activeScreen=this.activeScreen,title=(__cov_5WPNbKOHkCGffDddI9bY4g.b['10'][0]++,nextScreen.get('title'))||(__cov_5WPNbKOHkCGffDddI9bY4g.b['10'][1]++,this.get('defaultTitle'));__cov_5WPNbKOHkCGffDddI9bY4g.s['75']++;this._updateHistory(title,path,opt_replaceHistory);__cov_5WPNbKOHkCGffDddI9bY4g.s['76']++;this._syncScrollPosition(opt_replaceHistory);__cov_5WPNbKOHkCGffDddI9bY4g.s['77']++;doc.title=title;__cov_5WPNbKOHkCGffDddI9bY4g.s['78']++;nextScreen.activate();__cov_5WPNbKOHkCGffDddI9bY4g.s['79']++;if((__cov_5WPNbKOHkCGffDddI9bY4g.b['12'][0]++,activeScreen)&&(__cov_5WPNbKOHkCGffDddI9bY4g.b['12'][1]++,!activeScreen.get('cacheable'))){__cov_5WPNbKOHkCGffDddI9bY4g.b['11'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['80']++;this._removeScreen(this.activePath,activeScreen);}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['11'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['81']++;this.activePath=path;__cov_5WPNbKOHkCGffDddI9bY4g.s['82']++;this.activeScreen=nextScreen;__cov_5WPNbKOHkCGffDddI9bY4g.s['83']++;this.screens[path]=nextScreen;__cov_5WPNbKOHkCGffDddI9bY4g.s['84']++;this.pendingNavigate=null;__cov_5WPNbKOHkCGffDddI9bY4g.s['85']++;A.log('Navigation done','info');},_handleNavigateError:function(path,nextScreen,err){__cov_5WPNbKOHkCGffDddI9bY4g.f['23']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['86']++;A.log('Navigation error for ['+nextScreen+'] ('+err+')','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['87']++;this._removeScreen(path,nextScreen);__cov_5WPNbKOHkCGffDddI9bY4g.s['88']++;this.pendingNavigate=null;},_isLinkSameOrigin:function(hostname){__cov_5WPNbKOHkCGffDddI9bY4g.f['24']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['89']++;return hostname===win.location.hostname;},_isSameBasePath:function(path){__cov_5WPNbKOHkCGffDddI9bY4g.f['25']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['90']++;return path.indexOf(this.get('basePath'))===0;},_lockScroll:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['26']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['91']++;var instance=this,lockPageXOffset=instance.lockPageXOffset,lockPageYOffset=instance.lockPageYOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['92']++;instance.pageXOffset=win.pageXOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['93']++;instance.pageYOffset=win.pageYOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['94']++;if((__cov_5WPNbKOHkCGffDddI9bY4g.b['14'][0]++,lockPageXOffset===instance.pageXOffset)&&(__cov_5WPNbKOHkCGffDddI9bY4g.b['14'][1]++,lockPageYOffset===instance.pageYOffset)){__cov_5WPNbKOHkCGffDddI9bY4g.b['13'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['95']++;A.soon(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['27']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['96']++;instance.pageXOffset=win.pageXOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['97']++;instance.pageYOffset=win.pageYOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['98']++;win.scrollTo(lockPageXOffset,lockPageYOffset);});}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['13'][1]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['99']++;A.once('scroll',function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['28']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['100']++;instance.pageXOffset=win.pageXOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['101']++;instance.pageYOffset=win.pageYOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['102']++;win.scrollTo(lockPageXOffset,lockPageYOffset);});}},_getScreenInstance:function(path,route){__cov_5WPNbKOHkCGffDddI9bY4g.f['29']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['103']++;var screen,refreshScreen;__cov_5WPNbKOHkCGffDddI9bY4g.s['104']++;if(path===this.activePath){__cov_5WPNbKOHkCGffDddI9bY4g.b['15'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['105']++;A.log('Already at destination, refresh navigation','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['106']++;refreshScreen=this.screens[path];__cov_5WPNbKOHkCGffDddI9bY4g.s['107']++;delete this.screens[path];}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['15'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['108']++;screen=this.screens[path];__cov_5WPNbKOHkCGffDddI9bY4g.s['109']++;if(!screen){__cov_5WPNbKOHkCGffDddI9bY4g.b['16'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['110']++;A.log('Create screen for ['+path+']','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['111']++;screen=new(route.get('screen'))();__cov_5WPNbKOHkCGffDddI9bY4g.s['112']++;if(refreshScreen){__cov_5WPNbKOHkCGffDddI9bY4g.b['17'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['113']++;screen.addCache(refreshScreen.getCache());}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['17'][1]++;}}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['16'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['114']++;return screen;},_onDocClick:function(event){__cov_5WPNbKOHkCGffDddI9bY4g.f['30']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['115']++;var link=event.currentTarget,hostname=link.get('hostname'),path=link.get('pathname')+link.get('search')+link.get('hash'),navigateFailed=false;__cov_5WPNbKOHkCGffDddI9bY4g.s['116']++;if((__cov_5WPNbKOHkCGffDddI9bY4g.b['19'][0]++,event.altKey)||(__cov_5WPNbKOHkCGffDddI9bY4g.b['19'][1]++,event.ctrlKey)||(__cov_5WPNbKOHkCGffDddI9bY4g.b['19'][2]++,event.metaKey)||(__cov_5WPNbKOHkCGffDddI9bY4g.b['19'][3]++,event.shiftKey)){__cov_5WPNbKOHkCGffDddI9bY4g.b['18'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['117']++;A.log('Stop the SPA navigation when a modifier key is pressed');__cov_5WPNbKOHkCGffDddI9bY4g.s['118']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['18'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['119']++;if(!this._isLinkSameOrigin(hostname)){__cov_5WPNbKOHkCGffDddI9bY4g.b['20'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['120']++;A.log('Offsite link clicked','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['121']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['20'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['122']++;if(!this._isSameBasePath(path)){__cov_5WPNbKOHkCGffDddI9bY4g.b['21'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['123']++;A.log('Link clicked outside app\'s base path','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['124']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['21'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['125']++;if(!this.matchesPath(path)){__cov_5WPNbKOHkCGffDddI9bY4g.b['22'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['126']++;A.log('No screen for '+path,'info');__cov_5WPNbKOHkCGffDddI9bY4g.s['127']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['22'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['128']++;this.navigate(path).thenCatch(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['31']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['129']++;navigateFailed=true;});__cov_5WPNbKOHkCGffDddI9bY4g.s['130']++;if(!navigateFailed){__cov_5WPNbKOHkCGffDddI9bY4g.b['23'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['131']++;event.preventDefault();}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['23'][1]++;}},_onLoad:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['32']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['132']++;var instance=this;__cov_5WPNbKOHkCGffDddI9bY4g.s['133']++;this.skipLoadPopstate=true;__cov_5WPNbKOHkCGffDddI9bY4g.s['134']++;setTimeout(function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['33']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['135']++;instance.skipLoadPopstate=false;},0);},_onPopState:function(event){__cov_5WPNbKOHkCGffDddI9bY4g.f['34']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['136']++;var state=event._event.state;__cov_5WPNbKOHkCGffDddI9bY4g.s['137']++;if(state===null){__cov_5WPNbKOHkCGffDddI9bY4g.b['24'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['138']++;if(this.skipLoadPopstate){__cov_5WPNbKOHkCGffDddI9bY4g.b['25'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['139']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['25'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['140']++;if(!win.location.hash){__cov_5WPNbKOHkCGffDddI9bY4g.b['26'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['141']++;win.location.reload();__cov_5WPNbKOHkCGffDddI9bY4g.s['142']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['26'][1]++;}}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['24'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['143']++;if((__cov_5WPNbKOHkCGffDddI9bY4g.b['28'][0]++,state)&&(__cov_5WPNbKOHkCGffDddI9bY4g.b['28'][1]++,state.surface)){__cov_5WPNbKOHkCGffDddI9bY4g.b['27'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['144']++;A.log('History navigation to ['+state.path+']','info');__cov_5WPNbKOHkCGffDddI9bY4g.s['145']++;this._lockScroll();__cov_5WPNbKOHkCGffDddI9bY4g.s['146']++;this.navigate(state.path,true);}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['27'][1]++;}},_onScroll:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['35']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['147']++;this.lockPageXOffset=win.pageXOffset;__cov_5WPNbKOHkCGffDddI9bY4g.s['148']++;this.lockPageYOffset=win.pageYOffset;},_preventNavigateFn:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['36']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['149']++;this.pendingNavigate=A.CancellablePromise.reject(new A.CancellablePromise.Error('Navigation has been prevented'));},_removeScreen:function(path,screen){__cov_5WPNbKOHkCGffDddI9bY4g.f['37']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['150']++;var screenId=screen.get('id');__cov_5WPNbKOHkCGffDddI9bY4g.s['151']++;A.Object.each(this.surfaces,function(surface){__cov_5WPNbKOHkCGffDddI9bY4g.f['38']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['152']++;surface.remove(screenId);});__cov_5WPNbKOHkCGffDddI9bY4g.s['153']++;screen.destroy();__cov_5WPNbKOHkCGffDddI9bY4g.s['154']++;delete this.screens[path];},_registerRoutes:function(screenRoutes){__cov_5WPNbKOHkCGffDddI9bY4g.f['39']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['155']++;var instance=this;__cov_5WPNbKOHkCGffDddI9bY4g.s['156']++;A.Array.each(screenRoutes,function(value){__cov_5WPNbKOHkCGffDddI9bY4g.f['40']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['157']++;if(!A.instanceOf(value,A.ScreenRoute)){__cov_5WPNbKOHkCGffDddI9bY4g.b['29'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['158']++;value=new A.ScreenRoute({path:value.path,screen:value.screen});}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['29'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['159']++;instance.routes.push(value);});},_syncScrollPosition:function(opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.f['41']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['160']++;var hash=win.location.hash,hashEl,pos=[0,0];__cov_5WPNbKOHkCGffDddI9bY4g.s['161']++;if(opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.b['30'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['162']++;win.scrollTo(this.pageXOffset,this.pageYOffset);__cov_5WPNbKOHkCGffDddI9bY4g.s['163']++;return;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['30'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['164']++;if(hash){__cov_5WPNbKOHkCGffDddI9bY4g.b['31'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['165']++;hashEl=A.one(hash);}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['31'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['166']++;if(hashEl){__cov_5WPNbKOHkCGffDddI9bY4g.b['32'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['167']++;pos=hashEl.getXY();}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['32'][1]++;}__cov_5WPNbKOHkCGffDddI9bY4g.s['168']++;win.scrollTo(pos[0],pos[1]);},_stopPending:function(){__cov_5WPNbKOHkCGffDddI9bY4g.f['42']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['169']++;if(this.pendingNavigate){__cov_5WPNbKOHkCGffDddI9bY4g.b['33'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['170']++;this.pendingNavigate.cancel('Cancel pending navigation');__cov_5WPNbKOHkCGffDddI9bY4g.s['171']++;this.pendingNavigate=null;}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['33'][1]++;}},_updateHistory:function(title,path,opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.f['43']++;__cov_5WPNbKOHkCGffDddI9bY4g.s['172']++;var historyParams={path:path,surface:true};__cov_5WPNbKOHkCGffDddI9bY4g.s['173']++;if(opt_replaceHistory){__cov_5WPNbKOHkCGffDddI9bY4g.b['34'][0]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['174']++;win.history.replaceState(historyParams,title,path);}else{__cov_5WPNbKOHkCGffDddI9bY4g.b['34'][1]++;__cov_5WPNbKOHkCGffDddI9bY4g.s['175']++;win.history.pushState(historyParams,title,path);}}},{ATTRS:{defaultTitle:{validator:(__cov_5WPNbKOHkCGffDddI9bY4g.b['35'][0]++,A.Lang.isString)||(__cov_5WPNbKOHkCGffDddI9bY4g.b['35'][1]++,A.Lang.isNull),value:null},linkSelector:{value:'a',writeOnce:'initOnly'},basePath:{value:''}}});},'3.1.0',{'requires':['event-delegate','node-event-html5','aui-surface-base','aui-surface-screen','aui-surface-screen-route']});
