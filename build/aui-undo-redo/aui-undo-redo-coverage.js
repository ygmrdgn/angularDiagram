if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-undo-redo/aui-undo-redo.js']) {
   __coverage__['build/aui-undo-redo/aui-undo-redo.js'] = {"path":"build/aui-undo-redo/aui-undo-redo.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":44}}},"2":{"name":"(anonymous_2)","line":82,"loc":{"start":{"line":82,"column":17},"end":{"line":82,"column":28}}},"3":{"name":"(anonymous_3)","line":124,"loc":{"start":{"line":124,"column":9},"end":{"line":124,"column":25}}},"4":{"name":"(anonymous_4)","line":152,"loc":{"start":{"line":152,"column":13},"end":{"line":152,"column":24}}},"5":{"name":"(anonymous_5)","line":162,"loc":{"start":{"line":162,"column":13},"end":{"line":162,"column":24}}},"6":{"name":"(anonymous_6)","line":171,"loc":{"start":{"line":171,"column":18},"end":{"line":171,"column":29}}},"7":{"name":"(anonymous_7)","line":183,"loc":{"start":{"line":183,"column":24},"end":{"line":183,"column":35}}},"8":{"name":"(anonymous_8)","line":194,"loc":{"start":{"line":194,"column":10},"end":{"line":194,"column":21}}},"9":{"name":"(anonymous_9)","line":215,"loc":{"start":{"line":215,"column":14},"end":{"line":215,"column":25}}},"10":{"name":"(anonymous_10)","line":226,"loc":{"start":{"line":226,"column":10},"end":{"line":226,"column":21}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":14},"end":{"line":247,"column":25}}},"12":{"name":"(anonymous_12)","line":259,"loc":{"start":{"line":259,"column":18},"end":{"line":259,"column":35}}},"13":{"name":"(anonymous_13)","line":273,"loc":{"start":{"line":273,"column":16},"end":{"line":273,"column":27}}},"14":{"name":"(anonymous_14)","line":283,"loc":{"start":{"line":283,"column":16},"end":{"line":283,"column":27}}},"15":{"name":"(anonymous_15)","line":294,"loc":{"start":{"line":294,"column":24},"end":{"line":294,"column":35}}},"16":{"name":"(anonymous_16)","line":315,"loc":{"start":{"line":315,"column":20},"end":{"line":315,"column":49}}},"17":{"name":"(anonymous_17)","line":326,"loc":{"start":{"line":326,"column":25},"end":{"line":326,"column":36}}},"18":{"name":"(anonymous_18)","line":339,"loc":{"start":{"line":339,"column":33},"end":{"line":339,"column":44}}},"19":{"name":"(anonymous_19)","line":358,"loc":{"start":{"line":358,"column":16},"end":{"line":358,"column":33}}},"20":{"name":"(anonymous_20)","line":372,"loc":{"start":{"line":372,"column":27},"end":{"line":372,"column":38}}},"21":{"name":"(anonymous_21)","line":390,"loc":{"start":{"line":390,"column":29},"end":{"line":390,"column":40}}},"22":{"name":"(anonymous_22)","line":402,"loc":{"start":{"line":402,"column":15},"end":{"line":402,"column":31}}},"23":{"name":"(anonymous_23)","line":419,"loc":{"start":{"line":419,"column":23},"end":{"line":419,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":443,"column":86}},"2":{"start":{"line":35,"column":0},"end":{"line":440,"column":3}},"3":{"start":{"line":83,"column":8},"end":{"line":83,"column":28}},"4":{"start":{"line":85,"column":8},"end":{"line":89,"column":10}},"5":{"start":{"line":91,"column":8},"end":{"line":95,"column":10}},"6":{"start":{"line":97,"column":8},"end":{"line":108,"column":11}},"7":{"start":{"line":110,"column":8},"end":{"line":110,"column":75}},"8":{"start":{"line":125,"column":8},"end":{"line":128,"column":9}},"9":{"start":{"line":126,"column":12},"end":{"line":127,"column":78}},"10":{"start":{"line":130,"column":8},"end":{"line":134,"column":9}},"11":{"start":{"line":133,"column":12},"end":{"line":133,"column":78}},"12":{"start":{"line":136,"column":8},"end":{"line":139,"column":9}},"13":{"start":{"line":138,"column":12},"end":{"line":138,"column":19}},"14":{"start":{"line":141,"column":8},"end":{"line":141,"column":33}},"15":{"start":{"line":142,"column":8},"end":{"line":142,"column":34}},"16":{"start":{"line":143,"column":8},"end":{"line":143,"column":43}},"17":{"start":{"line":153,"column":8},"end":{"line":153,"column":100}},"18":{"start":{"line":163,"column":8},"end":{"line":163,"column":79}},"19":{"start":{"line":172,"column":8},"end":{"line":172,"column":26}},"20":{"start":{"line":173,"column":8},"end":{"line":173,"column":34}},"21":{"start":{"line":174,"column":8},"end":{"line":174,"column":37}},"22":{"start":{"line":184,"column":8},"end":{"line":184,"column":47}},"23":{"start":{"line":195,"column":8},"end":{"line":197,"column":9}},"24":{"start":{"line":196,"column":12},"end":{"line":196,"column":25}},"25":{"start":{"line":199,"column":8},"end":{"line":199,"column":34}},"26":{"start":{"line":200,"column":8},"end":{"line":204,"column":11}},"27":{"start":{"line":206,"column":8},"end":{"line":206,"column":20}},"28":{"start":{"line":216,"column":8},"end":{"line":216,"column":57}},"29":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"30":{"start":{"line":228,"column":12},"end":{"line":228,"column":25}},"31":{"start":{"line":231,"column":8},"end":{"line":235,"column":11}},"32":{"start":{"line":236,"column":8},"end":{"line":236,"column":34}},"33":{"start":{"line":238,"column":8},"end":{"line":238,"column":20}},"34":{"start":{"line":248,"column":8},"end":{"line":248,"column":53}},"35":{"start":{"line":260,"column":8},"end":{"line":260,"column":77}},"36":{"start":{"line":262,"column":8},"end":{"line":262,"column":37}},"37":{"start":{"line":263,"column":8},"end":{"line":263,"column":43}},"38":{"start":{"line":264,"column":8},"end":{"line":264,"column":37}},"39":{"start":{"line":274,"column":8},"end":{"line":274,"column":20}},"40":{"start":{"line":284,"column":8},"end":{"line":284,"column":20}},"41":{"start":{"line":295,"column":8},"end":{"line":296,"column":49}},"42":{"start":{"line":298,"column":8},"end":{"line":303,"column":9}},"43":{"start":{"line":299,"column":12},"end":{"line":299,"column":65}},"44":{"start":{"line":302,"column":12},"end":{"line":302,"column":38}},"45":{"start":{"line":316,"column":8},"end":{"line":316,"column":91}},"46":{"start":{"line":327,"column":8},"end":{"line":327,"column":45}},"47":{"start":{"line":328,"column":8},"end":{"line":328,"column":51}},"48":{"start":{"line":329,"column":8},"end":{"line":329,"column":34}},"49":{"start":{"line":330,"column":8},"end":{"line":330,"column":43}},"50":{"start":{"line":340,"column":8},"end":{"line":340,"column":80}},"51":{"start":{"line":344,"column":8},"end":{"line":347,"column":9}},"52":{"start":{"line":345,"column":12},"end":{"line":345,"column":58}},"53":{"start":{"line":346,"column":12},"end":{"line":346,"column":50}},"54":{"start":{"line":359,"column":8},"end":{"line":359,"column":42}},"55":{"start":{"line":361,"column":8},"end":{"line":363,"column":9}},"56":{"start":{"line":362,"column":12},"end":{"line":362,"column":41}},"57":{"start":{"line":373,"column":8},"end":{"line":373,"column":45}},"58":{"start":{"line":374,"column":8},"end":{"line":376,"column":9}},"59":{"start":{"line":375,"column":12},"end":{"line":375,"column":19}},"60":{"start":{"line":378,"column":8},"end":{"line":378,"column":78}},"61":{"start":{"line":391,"column":8},"end":{"line":391,"column":67}},"62":{"start":{"line":403,"column":8},"end":{"line":405,"column":9}},"63":{"start":{"line":404,"column":12},"end":{"line":404,"column":48}},"64":{"start":{"line":407,"column":8},"end":{"line":407,"column":21}},"65":{"start":{"line":420,"column":16},"end":{"line":420,"column":34}}},"branchMap":{"1":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"2":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":23}},{"start":{"line":125,"column":27},"end":{"line":125,"column":38}}]},"3":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"4":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"5":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":15},"end":{"line":153,"column":64}},{"start":{"line":153,"column":68},"end":{"line":153,"column":99}}]},"6":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":15},"end":{"line":163,"column":43}},{"start":{"line":163,"column":47},"end":{"line":163,"column":78}}]},"7":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"8":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"9":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":8}},{"start":{"line":298,"column":8},"end":{"line":298,"column":8}}]},"10":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":344,"column":8}},{"start":{"line":344,"column":8},"end":{"line":344,"column":8}}]},"11":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":12},"end":{"line":344,"column":26}},{"start":{"line":344,"column":30},"end":{"line":344,"column":58}}]},"12":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":8},"end":{"line":361,"column":8}},{"start":{"line":361,"column":8},"end":{"line":361,"column":8}}]},"13":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":8},"end":{"line":374,"column":8}},{"start":{"line":374,"column":8},"end":{"line":374,"column":8}}]},"14":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":15},"end":{"line":391,"column":37}},{"start":{"line":391,"column":41},"end":{"line":391,"column":66}}]},"15":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":8}},{"start":{"line":403,"column":8},"end":{"line":403,"column":8}}]},"16":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":12},"end":{"line":403,"column":40}},{"start":{"line":403,"column":44},"end":{"line":403,"column":74}}]}},"code":["(function () { YUI.add('aui-undo-redo', function (A, NAME) {","","/**\r"," * The Undo/Redo Component\r"," *\r"," * @module aui-undo-redo\r"," */\r","\r","/**\r"," * Fired after a redo has finished running.\r"," *\r"," * @event afterRedo\r"," */\r","\r","/**\r"," * Fired after an undo has finished running.\r"," *\r"," * @event afterUndo\r"," */\r","\r","/**\r"," * Fired right before a redo is run.\r"," *\r"," * @event beforeRedo\r"," * @preventable _defBeforeActionFn\r"," */\r","\r","/**\r"," * Fired right before an undo is run.\r"," *\r"," * @event beforeUndo\r"," * @preventable _defBeforeActionFn\r"," */\r","\r","A.UndoRedo = A.Base.create('undo-redo', A.Base, [], {\r","    ACTION_TYPE_REDO: 'redo',\r","    ACTION_TYPE_UNDO: 'undo',\r","\r","    AFTER_REDO: 'afterRedo',\r","    AFTER_UNDO: 'afterUndo',\r","    BEFORE_REDO: 'beforeRedo',\r","    BEFORE_UNDO: 'beforeUndo',\r","\r","    EVENT_PREFIX_AFTER: 'after',\r","    EVENT_PREFIX_BEFORE: 'before',\r","\r","    /**\r","     * This index points to the last state that was executed. Calling undo()\r","     * will undo the state this index points to.\r","     *\r","     * @property _currentStateIndex\r","     * @type {Number}\r","     * @protected\r","     */\r","    _currentStateIndex: -1,\r","\r","    /**\r","     * List of pending actions.\r","     *\r","     * @property _pendingActions\r","     * @type {Array}\r","     * @protected\r","     */\r","    _pendingActions: null,\r","\r","    /**\r","     * List of states containing `undo` and `redo` action methods added by the\r","     * user through the `add` method.\r","     *\r","     * @property _states\r","     * @type {Array}\r","     * @protected\r","     */\r","    _states: null,\r","\r","    /**\r","     * Constructor for the Undo/Redo component.\r","     *\r","     * @method initializer\r","     * @protected\r","     */\r","    initializer: function() {\r","        this.clearHistory();\r","\r","        A.getDoc().on(\r","            'key',\r","            A.bind('_onRedoKey', this),\r","            'down:89+ctrl'\r","        );\r","\r","        A.getDoc().on(\r","            'key',\r","            A.bind('_onUndoKey', this),\r","            'down:90+ctrl'\r","        );\r","\r","        this.publish({\r","            afterRedo: {},\r","            afterUndo: {},\r","            beforeRedo: {\r","                defaultFn: this._defBeforeActionFn,\r","                preventedFn: this._prevBeforeActionFn\r","            },\r","            beforeUndo: {\r","                defaultFn: this._defBeforeActionFn,\r","                preventedFn: this._prevBeforeActionFn\r","            }\r","        });\r","\r","        this.after('maxUndoDepthChange', this._removeStatesBeyondMaxDepth);\r","    },\r","\r","    /**\r","     * Adds a state to the stack and makes it the current state. Note that all\r","     * states that could be redone will be removed from the stack after this.\r","     * Valid states are objects that have at least 2 functions: undo and redo.\r","     * These functions can return promises, in which case any subsequent calls\r","     * will be queued, waiting for all pending promises to end.\r","     *\r","     * @method add\r","     * @param {Object | Function} state Object that contains `undo` and `redo`\r","     *     action methods (and, optionally, a 'merge' method).\r","     */\r","    add: function(state) {\r","        if (!state.undo || !state.redo) {\r","            throw new Error('Invalid state. States used in UndoRedo need to ' +\r","                'have both the \\'undo\\'  and the \\'redo\\' functions defined');\r","        }\r","\r","        if (this._currentStateIndex < this._states.length - 1) {\r","            // First remove all states after the current one, since\r","            // those can't be redone anymore now that a new state was added.\r","            this._states = this._states.slice(0, this._currentStateIndex + 1);\r","        }\r","\r","        if (this._tryMerge(state)) {\r","            // We shouldn't add the state again if it was already merged.\r","            return;\r","        }\r","\r","        this._states.push(state);\r","        this._currentStateIndex++;\r","        this._removeStatesBeyondMaxDepth();\r","    },\r","\r","    /**\r","     * Checks if it's possible to redo an action.\r","     *\r","     * @method canRedo\r","     * @return {Boolean}\r","     */\r","    canRedo: function() {\r","        return this._currentStateIndex < this._states.length - 1 && !this._shouldIgnoreNewActions();\r","    },\r","\r","    /**\r","     * Checks if it's possible to undo an action.\r","     *\r","     * @method canUndo\r","     * @return {Boolean}\r","     */\r","    canUndo: function() {\r","        return this._currentStateIndex >= 0 && !this._shouldIgnoreNewActions();\r","    },\r","\r","    /**\r","     * Resets the stack, clearing all states and pending actions.\r","     *\r","     * @method clearHistory\r","     */\r","    clearHistory: function() {\r","        this._states = [];\r","        this._pendingActions = [];\r","        this._currentStateIndex = -1;\r","    },\r","\r","    /**\r","     * Checks if either an undo or a redo action is currently in progress.\r","     *\r","     * @method isActionInProgress\r","     * @return {Boolean}\r","     */\r","    isActionInProgress: function() {\r","        return this._pendingActions.length > 0;\r","    },\r","\r","    /**\r","     * Redoes the next state.\r","     *\r","     * @method redo\r","     * @return {Boolean} Returns false if there was no state to be redone and\r","     *     true, otherwise.\r","     */\r","    redo: function() {\r","        if (!this.canRedo()) {\r","            return false;\r","        }\r","\r","        this._currentStateIndex++;\r","        this._runAction({\r","            state: this._states[this._currentStateIndex],\r","            type: this.ACTION_TYPE_REDO,\r","            undoIndex: this._currentStateIndex - 1\r","        });\r","\r","        return true;\r","    },\r","\r","    /**\r","     * Returns the state that will be redone when calling redo().\r","     *\r","     * @method redoPeek\r","     * @return {Boolean}\r","     */\r","    redoPeek: function() {\r","        return this._states[this._currentStateIndex + 1];\r","    },\r","\r","    /**\r","     * Undoes the last state.\r","     *\r","     * @method undo\r","     * @return {Boolean} Returns false if there was no state to be undone and\r","     *     true, otherwise.\r","     */\r","    undo: function() {\r","        if (!this.canUndo()) {\r","            return false;\r","        }\r","\r","        this._runAction({\r","            state: this._states[this._currentStateIndex],\r","            type: this.ACTION_TYPE_UNDO,\r","            undoIndex: this._currentStateIndex\r","        });\r","        this._currentStateIndex--;\r","\r","        return true;\r","    },\r","\r","    /**\r","     * Returns the state that will be undone when calling undo().\r","     *\r","     * @method undoPeek\r","     * @return {Boolean}\r","     */\r","    undoPeek: function() {\r","        return this._states[this._currentStateIndex];\r","    },\r","\r","    /**\r","     * Executes right after an action finishes running.\r","     *\r","     * @method _afterAction\r","     * @param {Object} action Object containing the `state` and action `type`\r","     *     (undo or redo) to be executed.\r","     * @protected\r","     */\r","    _afterAction: function(action) {\r","        this.fire(this._makeEventName(this.EVENT_PREFIX_AFTER, action.type));\r","\r","        this._pendingActions.shift();\r","        this._removeStatesBeyondMaxDepth();\r","        this._runNextPendingAction();\r","    },\r","\r","    /**\r","     * Calls redo method on ctrl + y keydown event\r","     *\r","     * @method _onRedoKey\r","     * @return {EventFacade} event\r","     */\r","    _onRedoKey: function() {\r","        this.redo();\r","    },\r","\r","    /**\r","     * Calls undo method on ctrl + z keydown event\r","     *\r","     * @method _onUndoKey\r","     * @return {EventFacade} event\r","     */\r","    _onUndoKey: function() {\r","        this.undo();\r","    },\r","\r","    /**\r","     * This is the default function for the beforeUndo and beforeRedo events.\r","     *\r","     * @method _defBeforeActionFn\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _defBeforeActionFn: function() {\r","        var action = this._pendingActions[0],\r","            result = action.state[action.type]();\r","\r","        if (A.Promise.isPromise(result)) {\r","            result.then(A.bind(this._afterAction, this, action));\r","        }\r","        else {\r","            this._afterAction(action);\r","        }\r","    },\r","\r","    /**\r","     * Constructs the event's name based on its prefix and the action type\r","     * related to it.\r","     *\r","     * @method _makeEventName\r","     * @return {String} Returns the camel case version of `prefix` plus\r","     *     `actionType`.\r","     * @protected\r","     */\r","    _makeEventName: function(prefix, actionType) {\r","        return prefix + actionType.substring(0, 1).toUpperCase() + actionType.substring(1);\r","    },\r","\r","    /**\r","     * This function runs when a beforeUndo or beforeRedo event is prevented.\r","     *\r","     * @method _prevBeforeActionFn\r","     * @param {EventFacade} event\r","     * @protected\r","     */\r","    _prevBeforeActionFn: function() {\r","        var action = this._pendingActions[0];\r","        this._currentStateIndex = action.undoIndex;\r","        this._pendingActions = [];\r","        this._removeStatesBeyondMaxDepth();\r","    },\r","\r","    /**\r","     * Removes states in the stack if it's over the max depth limit.\r","     *\r","     * @method _removeStatesBeyondMaxDepth\r","     * @protected\r","     */\r","    _removeStatesBeyondMaxDepth: function() {\r","        var extraCount = this._currentStateIndex + 1 - this.get('maxUndoDepth');\r","\r","        // We should ignore this call if there are pending actions, as we may need\r","        // to roll back to a state due to the user preventing one of them.\r","        if (extraCount > 0 && !this._pendingActions.length) {\r","            this._states = this._states.slice(extraCount);\r","            this._currentStateIndex -= extraCount;\r","        }\r","    },\r","\r","    /**\r","     * Executes the given action (which can be either undo or redo).\r","     *\r","     * @method _runAction\r","     * @param {Object} action Object containing the `state` and action `type`\r","     *     (undo or redo) to be executed.\r","     * @protected\r","     */\r","    _runAction: function(action) {\r","        this._pendingActions.push(action);\r","\r","        if (this._pendingActions.length === 1) {\r","            this._runNextPendingAction();\r","        }\r","    },\r","\r","    /**\r","     * Executes the next pending action, if one exists.\r","     *\r","     * @method _runNextPendingAction\r","     * @protected\r","     */\r","    _runNextPendingAction: function() {\r","        var action = this._pendingActions[0];\r","        if (!action) {\r","            return;\r","        }\r","\r","        this.fire(this._makeEventName(this.EVENT_PREFIX_BEFORE, action.type));\r","    },\r","\r","    /**\r","     * Checks if new actions (calls to undo/redo) should be ignored. Actions\r","     * should only be ignored if the `queueable` attribute is false and there\r","     * is currently an action in progress.\r","     *\r","     * @method _shouldIgnoreNewActions\r","     * @return {Boolean}\r","     * @protected\r","     */\r","    _shouldIgnoreNewActions: function() {\r","        return !this.get('queueable') && this.isActionInProgress();\r","    },\r","\r","    /**\r","     * Tries to merge the given state to one at the current position in the\r","     * stack.\r","     *\r","     * @method _tryMerge\r","     * @return {Boolean} Returns true if the merge happened and false otherwise.\r","     * @protected\r","     */\r","    _tryMerge: function(state) {\r","        if (this._currentStateIndex >= 0 && A.Lang.isFunction(state.merge)) {\r","            return state.merge(this.undoPeek());\r","        }\r","\r","        return false;\r","    }\r","}, {\r","    ATTRS: {\r","        /**\r","         * Limits the states stack size. Useful for memory optimization.\r","         *\r","         * @attribute maxUndoDepth\r","         * @default 100\r","         * @type {Number}\r","         */\r","        maxUndoDepth: {\r","            validator: function(depth) {\r","                return depth >= 1;\r","            },\r","            value: 100\r","        },\r","\r","        /**\r","         * Defines how this module will behave when the user calls undo\r","         * or redo while an action is still in progress. If false, these\r","         * calls will be ignored. If true, they will be queued, running\r","         * in order as soon as the pending action finishes.\r","         *\r","         * @attribute queueable\r","         * @default false\r","         * @type {Boolean}\r","         */\r","        queueable: {\r","            validator: A.Lang.isBoolean,\r","            value: false\r","        }\r","    }\r","});\r","","","}, '3.1.0', {\"requires\": [\"aui-base\", \"base\", \"base-build\", \"event-key\", \"promise\"]});","","}());"]};
}
var __cov_nSrBaSa3$jXduPT_g1n5AQ = __coverage__['build/aui-undo-redo/aui-undo-redo.js'];
__cov_nSrBaSa3$jXduPT_g1n5AQ.s['1']++;YUI.add('aui-undo-redo',function(A,NAME){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['1']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['2']++;A.UndoRedo=A.Base.create('undo-redo',A.Base,[],{ACTION_TYPE_REDO:'redo',ACTION_TYPE_UNDO:'undo',AFTER_REDO:'afterRedo',AFTER_UNDO:'afterUndo',BEFORE_REDO:'beforeRedo',BEFORE_UNDO:'beforeUndo',EVENT_PREFIX_AFTER:'after',EVENT_PREFIX_BEFORE:'before',_currentStateIndex:-1,_pendingActions:null,_states:null,initializer:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['2']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['3']++;this.clearHistory();__cov_nSrBaSa3$jXduPT_g1n5AQ.s['4']++;A.getDoc().on('key',A.bind('_onRedoKey',this),'down:89+ctrl');__cov_nSrBaSa3$jXduPT_g1n5AQ.s['5']++;A.getDoc().on('key',A.bind('_onUndoKey',this),'down:90+ctrl');__cov_nSrBaSa3$jXduPT_g1n5AQ.s['6']++;this.publish({afterRedo:{},afterUndo:{},beforeRedo:{defaultFn:this._defBeforeActionFn,preventedFn:this._prevBeforeActionFn},beforeUndo:{defaultFn:this._defBeforeActionFn,preventedFn:this._prevBeforeActionFn}});__cov_nSrBaSa3$jXduPT_g1n5AQ.s['7']++;this.after('maxUndoDepthChange',this._removeStatesBeyondMaxDepth);},add:function(state){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['3']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['8']++;if((__cov_nSrBaSa3$jXduPT_g1n5AQ.b['2'][0]++,!state.undo)||(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['2'][1]++,!state.redo)){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['1'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['9']++;throw new Error('Invalid state. States used in UndoRedo need to '+'have both the \'undo\'  and the \'redo\' functions defined');}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['1'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['10']++;if(this._currentStateIndex<this._states.length-1){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['3'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['11']++;this._states=this._states.slice(0,this._currentStateIndex+1);}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['3'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['12']++;if(this._tryMerge(state)){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['4'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['13']++;return;}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['4'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['14']++;this._states.push(state);__cov_nSrBaSa3$jXduPT_g1n5AQ.s['15']++;this._currentStateIndex++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['16']++;this._removeStatesBeyondMaxDepth();},canRedo:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['4']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['17']++;return(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['5'][0]++,this._currentStateIndex<this._states.length-1)&&(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['5'][1]++,!this._shouldIgnoreNewActions());},canUndo:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['5']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['18']++;return(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['6'][0]++,this._currentStateIndex>=0)&&(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['6'][1]++,!this._shouldIgnoreNewActions());},clearHistory:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['6']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['19']++;this._states=[];__cov_nSrBaSa3$jXduPT_g1n5AQ.s['20']++;this._pendingActions=[];__cov_nSrBaSa3$jXduPT_g1n5AQ.s['21']++;this._currentStateIndex=-1;},isActionInProgress:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['7']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['22']++;return this._pendingActions.length>0;},redo:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['8']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['23']++;if(!this.canRedo()){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['7'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['24']++;return false;}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['7'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['25']++;this._currentStateIndex++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['26']++;this._runAction({state:this._states[this._currentStateIndex],type:this.ACTION_TYPE_REDO,undoIndex:this._currentStateIndex-1});__cov_nSrBaSa3$jXduPT_g1n5AQ.s['27']++;return true;},redoPeek:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['9']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['28']++;return this._states[this._currentStateIndex+1];},undo:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['10']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['29']++;if(!this.canUndo()){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['8'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['30']++;return false;}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['8'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['31']++;this._runAction({state:this._states[this._currentStateIndex],type:this.ACTION_TYPE_UNDO,undoIndex:this._currentStateIndex});__cov_nSrBaSa3$jXduPT_g1n5AQ.s['32']++;this._currentStateIndex--;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['33']++;return true;},undoPeek:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['11']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['34']++;return this._states[this._currentStateIndex];},_afterAction:function(action){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['12']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['35']++;this.fire(this._makeEventName(this.EVENT_PREFIX_AFTER,action.type));__cov_nSrBaSa3$jXduPT_g1n5AQ.s['36']++;this._pendingActions.shift();__cov_nSrBaSa3$jXduPT_g1n5AQ.s['37']++;this._removeStatesBeyondMaxDepth();__cov_nSrBaSa3$jXduPT_g1n5AQ.s['38']++;this._runNextPendingAction();},_onRedoKey:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['13']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['39']++;this.redo();},_onUndoKey:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['14']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['40']++;this.undo();},_defBeforeActionFn:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['15']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['41']++;var action=this._pendingActions[0],result=action.state[action.type]();__cov_nSrBaSa3$jXduPT_g1n5AQ.s['42']++;if(A.Promise.isPromise(result)){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['9'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['43']++;result.then(A.bind(this._afterAction,this,action));}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['9'][1]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['44']++;this._afterAction(action);}},_makeEventName:function(prefix,actionType){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['16']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['45']++;return prefix+actionType.substring(0,1).toUpperCase()+actionType.substring(1);},_prevBeforeActionFn:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['17']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['46']++;var action=this._pendingActions[0];__cov_nSrBaSa3$jXduPT_g1n5AQ.s['47']++;this._currentStateIndex=action.undoIndex;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['48']++;this._pendingActions=[];__cov_nSrBaSa3$jXduPT_g1n5AQ.s['49']++;this._removeStatesBeyondMaxDepth();},_removeStatesBeyondMaxDepth:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['18']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['50']++;var extraCount=this._currentStateIndex+1-this.get('maxUndoDepth');__cov_nSrBaSa3$jXduPT_g1n5AQ.s['51']++;if((__cov_nSrBaSa3$jXduPT_g1n5AQ.b['11'][0]++,extraCount>0)&&(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['11'][1]++,!this._pendingActions.length)){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['10'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['52']++;this._states=this._states.slice(extraCount);__cov_nSrBaSa3$jXduPT_g1n5AQ.s['53']++;this._currentStateIndex-=extraCount;}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['10'][1]++;}},_runAction:function(action){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['19']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['54']++;this._pendingActions.push(action);__cov_nSrBaSa3$jXduPT_g1n5AQ.s['55']++;if(this._pendingActions.length===1){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['12'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['56']++;this._runNextPendingAction();}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['12'][1]++;}},_runNextPendingAction:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['20']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['57']++;var action=this._pendingActions[0];__cov_nSrBaSa3$jXduPT_g1n5AQ.s['58']++;if(!action){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['13'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['59']++;return;}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['13'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['60']++;this.fire(this._makeEventName(this.EVENT_PREFIX_BEFORE,action.type));},_shouldIgnoreNewActions:function(){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['21']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['61']++;return(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['14'][0]++,!this.get('queueable'))&&(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['14'][1]++,this.isActionInProgress());},_tryMerge:function(state){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['22']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['62']++;if((__cov_nSrBaSa3$jXduPT_g1n5AQ.b['16'][0]++,this._currentStateIndex>=0)&&(__cov_nSrBaSa3$jXduPT_g1n5AQ.b['16'][1]++,A.Lang.isFunction(state.merge))){__cov_nSrBaSa3$jXduPT_g1n5AQ.b['15'][0]++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['63']++;return state.merge(this.undoPeek());}else{__cov_nSrBaSa3$jXduPT_g1n5AQ.b['15'][1]++;}__cov_nSrBaSa3$jXduPT_g1n5AQ.s['64']++;return false;}},{ATTRS:{maxUndoDepth:{validator:function(depth){__cov_nSrBaSa3$jXduPT_g1n5AQ.f['23']++;__cov_nSrBaSa3$jXduPT_g1n5AQ.s['65']++;return depth>=1;},value:100},queueable:{validator:A.Lang.isBoolean,value:false}}});},'3.1.0',{'requires':['aui-base','base','base-build','event-key','promise']});
